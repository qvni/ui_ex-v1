`
--EXTEXT0

--EXTEXT1

function B3AlphanumericSortEntries(o)
	local function conv(s)
		local res, dot = "", ""
		for n, m, c in tostring(s):gmatch"(0*(%d*))(.?)" do
			if n == "" then
				dot, c = "", dot..c
			else
				res = res..(dot == "" and ("%03d%s"):format(#m, m) or "."..n)
				dot, c = c:match"(%.?)(.*)"
			end
			res = res..c:gsub(".", "\0%0")
		end
		return res
	end
	table.sort(o,
		function (a, b)
			local ca, cb = conv(a.string), conv(b.string)
			return ca < cb or ca == cb and a.string < b.string
		end)
	return o
end

function B3FillDumpLevel(tableName, levelTable, levelToFill, levelTableKey)
	local tableKey, tableValue = next(levelTable, levelTableKey)
	while tableValue ~= nil do
		local tableValueType = type(tableValue)
		if tableValueType == 'string' or tableValueType == 'number' or tableValueType == 'boolean' then
			local entry = {}
			entry.string = tableValueType..' '..tableKey..' = '
			entry.value = tableValue
			table.insert(levelToFill, entry)
		elseif tableValueType == 'table' then
			if tableKey ~= '_G' then
				local entry = {}
				entry.string = tableValueType..' '..tableKey..':'
				entry.value = {} --entry.value is a levelToFill
				entry.value.previous = {}
				entry.value.previous.tableName = tableName
				entry.value.previous.levelTable = levelTable
				entry.value.previous.levelToFill = levelToFill
				entry.value.previous.levelTableKey = tableKey
				table.insert(levelToFill, entry)
				return B3FillDumpLevel(tableKey, tableValue, entry.value)
			end
		elseif tableValueType == 'userdata' then
			local metatable = getmetatable(tableValue)
			local entry = {}
			if metatable ~= nil then
				entry.string = tableValueType..' '..tableKey..':\n'
				entry.value = {} --entry.value is a levelToFill
				entry.value.previous = {}
				entry.value.previous.tableName = tableName
				entry.value.previous.levelTable = levelTable
				entry.value.previous.levelToFill = levelToFill
				entry.value.previous.levelTableKey = tableKey
				table.insert(levelToFill, entry)
				return B3FillDumpLevel(tableKey, metatable, entry.value)
			else
				entry.string = tableValueType..' '..tableKey..' = '
				entry.value = 'nil'
				table.insert(levelToFill, entry)
			end
		else
			local entry = {}
			entry.string = tableValueType..' '..tableKey
			entry.value = nil
			table.insert(levelToFill, entry)
		end
		--Iteration
		tableKey, tableValue = next(levelTable, tableKey)
		--Iteration
	end
	--Sort the now finished level
	B3AlphanumericSortEntries(levelToFill)
	--Sort the now finished level
	local previous = levelToFill.previous
	if previous ~= nil then
		--Clear out "previous" metadata, as it is no longer needed.
		local previousTableName = previous.tableName
		local previousLevelTable = previous.levelTable
		local previousLevelToFill = previous.levelToFill
		local previousLevelTableKey = previous.levelTableKey
		levelToFill.previous = nil
		--Clear out "previous" metadata, as it is no longer needed.
		return B3FillDumpLevel(previousTableName, previousLevelTable,
							   previousLevelToFill, previousLevelTableKey)
	else
		return levelToFill
	end
end
 
B3DumpFunction = print

function B3PrintEntries(entriesTable, indentLevel, indentStrings, previousState, levelTableKey)
	local tableEntryKey, tableEntry = next(entriesTable, levelTableKey)
	while(tableEntry ~= nil) do
		local tableEntryString = tableEntry.string
		local tableEntryValue = tableEntry.value
		local indentString = indentStrings[indentLevel]
		if tableEntryValue ~= nil then
			if type(tableEntryValue) ~= 'table' then
				local valueToPrint = string.gsub(tostring(tableEntryValue), '\n', '\\n')
				B3DumpFunction(indentString..tableEntryString..valueToPrint)
			else
				B3DumpFunction(indentString..tableEntryString)
				B3DumpFunction(indentString..'{')
				local previous = {}
				previous.entriesTable = entriesTable
				previous.indentLevel = indentLevel
				previous.levelTableKey = tableEntryKey
				previous.previousState = previousState
				indentLevel = indentLevel + 1
				local indentStringsSize = #indentStrings
				if indentLevel > indentStringsSize then
					indentStrings[indentStringsSize + 1] = indentStrings[indentStringsSize]..'	'
				end
				return B3PrintEntries(tableEntryValue, indentLevel, indentStrings, previous)
			end
		else
			B3DumpFunction(indentString..tableEntryString)
		end
		--Increment
		tableEntryKey, tableEntry = next(entriesTable, tableEntryKey)
		--Increment
	end
	B3DumpFunction(indentStrings[indentLevel - 1]..'}')
	--Finish previous levels
	if previousState ~= nil then
		return B3PrintEntries(previousState.entriesTable, previousState.indentLevel, indentStrings,
							  previousState.previousState, previousState.levelTableKey)
	end
end
 
function b3info(key, valueToDump)
	local valueToDumpType = type(valueToDump)
	if valueToDumpType == 'string' or valueToDumpType == 'number' or valueToDumpType == 'boolean' then
		B3DumpFunction(valueToDumpType..' '..key..' = '..valueToDump)
	elseif valueToDumpType == 'table' then
		B3DumpFunction(valueToDumpType..' '..key..':')
		B3DumpFunction('{')
		local entries = B3FillDumpLevel(key, valueToDump, {})
		B3PrintEntries(entries, 1, {[0] = '', [1] = '	'})
	elseif valueToDumpType == 'userdata' then
		local metatable = getmetatable(valueToDump)
		if metatable ~= nil then
			B3DumpFunction(valueToDumpType..' '..key..':')
			B3DumpFunction('{')
			local entries = B3FillDumpLevel(key, metatable, {})
			B3PrintEntries(entries, 1, {[0] = '', [1] = '	'})
		else
			B3DumpFunction(valueToDumpType..' '..key..' = nil')
		end
	 else
		B3DumpFunction(valueToDumpType..' '..key)
	 end
end

function B3GetEngineName(engine)

    local engineVariables = {
        "e",
        "startEngine",
        "createCharScreen",
        "characterScreen",
        "connectionScreen",
        "mageScreen",
        "priestScreen",
        "worldScreen",
        "mapScreen",
        "worldMapScreen",
        "journalScreen",
        "inventoryScreen",
        "optionsScreen",
        "multiplayerScreen",
        "chapterScreen",
        "loadScreen",
        "saveScreen",
        "storeScreen",
        "moviesScreen",
        "createPartyScreen",
        "dlcScreen",
        "projector",
        "mixer",
        "game",
        "buttonArray",
        "timer",
        "gameOptions",
    }

    for _, engineVariable in ipairs(engineVariables) do
        if engine == _G[engineVariable] then
            return engineVariable
        end
    end

    return "CURRENT ENGINE NIL"

end
`
`
--reload language
if(uiTranslationFile) then
	Infinity_DoFile("L_" .. uiTranslationFile)
else
	Infinity_DoFile("L_en_us")
end
listMetaInfo = {}
combatLog = combatLog and combatLog or {}


currentPanelID = 0

function updateAttrTable()
	if (characters[currentID] ~= nil) then
		attributeItems = {
			{ characters[currentID].attr.str, 9582 },
			{ characters[currentID].attr.dex, 9584 },
			{ characters[currentID].attr.con, 9583 },
			{ characters[currentID].attr.int, 9585 },
			{ characters[currentID].attr.wis, 9586 },
			{ characters[currentID].attr.cha, 9587 }
		}
		buildRecordStats()
		buildRecordInfos()
	end
end
function characterDescString(char)
	return Infinity_FetchString(char.gender) .. "\n" .. Infinity_FetchString(char.race) .. "\n" .. char.class .. "\n" .. Infinity_FetchString(char.alignment)
end
function displaySTR()
	local txt = characters[currentID].attr.str.current
	if (characters[currentID].attr.str.current == 18 and characters[currentID].attr.str.extra ~= 0) then
		txt = txt .. '/' .. string.format('%02d', characters[currentID].attr.str.extra % 100)
	end
	if (characters[currentID].attr.str.current > characters[currentID].attr.str.base or characters[currentID].attr.str.extra > characters[currentID].attr.str.extraBase) then
		txt = '^G' .. txt .. '^-'
	end
	if (characters[currentID].attr.str.current < characters[currentID].attr.str.base or characters[currentID].attr.str.extra < characters[currentID].attr.str.extraBase) then
		txt = '^R' .. txt .. '^-'
	end
	return txt
end
function displayBuff(current, base)
	if(current > base) then
		return '^G' .. current .. '^-'
	elseif (current < base) then
		return '^R' .. current .. '^-'
	end
	return current
end
function displayAttr(index)
	if (index == 1) then
		return displaySTR()
	else
		return displayBuff(attributeItems[index][1].current, attributeItems[index][1].base)
	end
end

function CurrentlyInGame()
	return characterScreen:IsInGame()
end

--savesTextFunction

function buildRecordStats()
	recordStats = {}
	table.insert(recordStats, {1,t("ABILITIES_TITLE")})
	for i=1,6 do
		table.insert(recordStats, {2,Infinity_FetchString(attributeItems[i][1].strRef),displayAttr(i)})
	end
	table.insert(recordStats, {1,t("COMBAT_STATS_LABEL")})
	table.insert(recordStats, {2,t("ARMOR_CLASS_LABEL"),characters[currentID].AC.current})
	table.insert(recordStats, {2,t("HIT_POINTS_LABEL"),characters[currentID].HP.current .. ' / ' .. characters[currentID].HP.max})
	table.insert(recordStats, {2,t("THAC0_LABEL"),characters[currentID].THAC0.current})
	if characters[currentID].THAC0.offhand then
		table.insert(recordStats, {2,t("OFF_HAND_THAC0"),characters[currentID].THAC0.offhand})
	else
		table.insert(recordStats, {2,t("OFF_HAND_THAC0"),'-'})
	end
	table.insert(recordStats, {2,t("DAMAGE_LABEL"),characters[currentID].damage.min .. ' - ' .. characters[currentID].damage.max})
	if characters[currentID].damage.minOffhand and characters[currentID].damage.maxOffhand then
		table.insert(recordStats, {2,t("OFF_HAND_DAMAGE"),characters[currentID].damage.minOffhand .. ' - ' .. characters[currentID].damage.maxOffhand})
	else
		table.insert(recordStats, {2,t("OFF_HAND_DAMAGE"),'-'})
	end
	table.insert(recordStats, {2,t("NUM_ATTACKS_LABEL"),characters[currentID].proficiencies.numAttacks.current})
	table.insert(recordStats, {1,t("SAVING_THROWS_LABEL")})
	for s in (characters[currentID].proficiencies.savingThrows.."\n"):gmatch("(.-)\n") do
		local pos = s:find(":", 1)
		table.insert(recordStats, {2,s:sub(1, pos - 1),s:sub(pos + 2)})
	end
end

function empty(t)
	if next(t) == nil then
		return true
	end
	return false
end

--below are multiple different ways to use the gsub content from lua, either via multiple variables, multiple gsubs, or using a table array, and then running a loop which runs once via gsub

--function newCharText()
--	local text = characterDescString(characters[currentID]):gsub('\n',', ',1)
--	local text = text:gsub('\n','.',1)
--	local text = text:gsub('\n','.;',1)
--	local text = text:gsub('%.%a*%s*%/*%s*%a*%s*%/*%s*%a*%.','',1)
--	local text = text:gsub(';','\n',1)
--	return text
--end

--function newCharText()
--	local text = characterDescString(characters[currentID]):gsub('\n',', ',1):gsub('\n','.',1):gsub('\n','.;',1):gsub('%.%a*%s*%/*%s*%a*%s*%/*%s*%a*%.','',1):gsub(';','\n',1)
--	return text
--end

function newCharText()
	local text = characterDescString(characters[currentID])
	local C = {
	{'\n',', '},
	{'\n','.'},
	{'\n','.;'},
	{'%.%a*%s*%/*%s*%a*%s*%/*%s*%a*%.',''},
	{';','\n'},
	}
	
	for i, v in ipairs(C) do
		text = text:gsub(v[1], v[2], 1)
	end
	return text
end

function removeKeyProf(list, option, keychange)
	local startingPoint = 1
	local found = false
	local amount = 0
	local pamount = 0
	for index = 1, #list, 1 do
		if list[index].helpStrRef == option then
			startingPoint = index
			amount = list[startingPoint].current
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list, 1 do
			list[index] = list[index+1]
		end
		--list[#list+1] = nil
		table.remove(list,#list+1)
	end
	for index = 1, #list, 1 do
		if list[index].helpStrRef == keychange then
			pamount = list[index].current
			list[index].current = tostring(tonumber(list[index].current) + amount)
			if pamount ~= list[index].current then
				break
			end
		end
	end	
end

function removeAbilityTable(list, option)
	local startingPoint = 1
	local found = false

	for index = 1, #list, 1 do
		if list[index].strRef == option then
			startingPoint = index
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list, 1 do
			list[index] = list[index+1]
		end
		--list[#list+1] = nil
		table.remove(list,#list+1)
	end
end

function buildRecordInfos()
	recordInfos = {}
	table.insert(recordInfos, {1,newCharText()})
	table.insert(recordInfos, {1,""})
	if characters[currentID].classlevel.second then
		local strRef = characters[currentID].classlevel.second.active and 19721 or 19722
		table.insert(recordInfos, {1,Infinity_FetchString(strRef)})
		table.insert(recordInfos, {1,""})
	end
	table.insert(recordInfos, {1,characters[currentID].classlevel.first.details})
	if characters[currentID].classlevel.second then
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {1,characters[currentID].classlevel.second.details})
	end
	if characters[currentID].classlevel.third then
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {1,characters[currentID].classlevel.third.details})
	end
	if not empty(characters[currentID].statusEffects) then
		table.insert(recordInfos, {1,""})
		for k, v in pairs(characters[currentID].statusEffects) do
			table.insert(recordInfos, {2,v})
		end
	end
	table.insert(recordInfos, {1,""})
	table.insert(recordInfos, {1,t("PROFICIENCIES_LABEL")})
	local lore = Infinity_FetchString(characters[currentID].proficiencies.lore.strRef) .. ": " ..  characters[currentID].proficiencies.lore.current
	table.insert(recordInfos, {1,lore})
	local reputation = Infinity_FetchString(characters[currentID].proficiencies.reputation.strRef) .. ": " ..  characters[currentID].proficiencies.reputation.current
	table.insert(recordInfos, {1,reputation})
	local script = t("CURRENT_SCRIPT_LABEL") .. ": " ..  characters[currentID].proficiencies.currentScript
	table.insert(recordInfos, {1,script})
	if not empty(characters[currentID].proficiencies.class_skills) then
		table.insert(recordInfos, {1,""})
		table.insert(recordInfos, {1,t("SKILLS_LABEL")})
		local skills = characters[currentID].proficiencies.class_skills
		removeKeyProf(skills, 15729010, 15729075)
		for k, v in ipairs(skills) do
			local skills = Infinity_FetchString(v.strRef) .. ": " .. v.current
			table.insert(recordInfos, {1,skills})
		end
	end
	table.insert(recordInfos, {1,""})
	table.insert(recordInfos, {1,t("RESISTANCES_LABEL")})
	table.insert(recordInfos, {1,characters[currentID].proficiencies.resistances})
	if characters[currentID].proficiencies.weaponStyleBonus then
		local weaponStyleBonus = trim(characters[currentID].proficiencies.weaponStyleBonus)
		if weaponStyleBonus ~= "" then
			table.insert(recordInfos, {1,""})
			table.insert(recordInfos, {1,t("WEAPON_STYLE_BONUS_LABEL")})
			table.insert(recordInfos, {1,weaponStyleBonus})
		end
	end	
	table.insert(recordInfos, {1,""})
	table.insert(recordInfos, {1,t("FIGHTING_STYLES_LABEL")})
	table.insert(recordInfos, {1,characters[currentID].proficiencies.weapons.current})
	if characters[currentID].proficiencies.fightingstyles.current ~= "" then
		table.insert(recordInfos, {1,characters[currentID].proficiencies.fightingstyles.current})
	end
	table.insert(recordInfos, {1,""})
	table.insert(recordInfos, {1,Infinity_FetchString(10315)})
	local profability = characters[currentID].proficiencies.ability
	removeAbilityTable(profability, 15729791)
	for k, v in ipairs(profability) do
		table.insert(recordInfos, {1,v.current})
	end
end

`
menu -- for whatever reason this menu doesn't open other menus properly in it's onopen, so it has to check to see if the engine it uses is also active, additionally, whenever it is opened with Infinity_OnPortraitLClick, it will get ran twice ... meaning that it actually refreshes the 'CHARACTER' menu, this happens with the original menu as well
{
	name 'CHARACTER' --record, character record, character menu, char record
	onOpen
	"
		if ovrCharScreen == 7 and e:GetActiveEngine() == characterScreen then
			e:SelectEngine(worldScreen)
			Infinity_PushMenu('OVERLAY_CHARACTER')
			ovrCharScreen = 8
		elseif ovrCharScreen == 8 and e:GetActiveEngine() == characterScreen then
			e:SelectEngine(worldScreen)
			Infinity_PopMenu('OVERLAY_CHARACTER')
			ovrCharScreen = 7
		elseif e:GetActiveEngine() == multiplayerScreen then
			Infinity_PushMenu('OVERLAY_CHARACTER')
		end
	"
	label
	{
	area 0 0 0 0
	}
}
menu
{
	name 'OVERLAY_CHARACTER' --game character
	align center top
	onopen
	"
		chatboxScrollToBottom = 1
		characterViewable = characterScreen:IsCharacterViewable()
		updateAttrTable()
		charInfoFill1()
		charInfoFill2()
	"
	onclose
	"
		mpChatTable = {}
	"
	label
	{
	on escape
	action
	"
		Infinity_PopMenu('OVERLAY_CHARACTER')
		ovrCharScreen = 7
	"
	}
	label
	{
		area 0 0 864 603
		mosaic y5record
	}
	label
	{
		area 82 0 700 42
		text "CHARACTER_SHEET_LABEL"
		text style "title"
	}
	label
	{
		area 318 44 230 32
		text lua "characters[currentID].name"
		text style "label"
	}
	label
	{
		area 332 108 200 314
		bitmap lua "characters[currentID].portrait"
	}
	list
	{
		column
		{
		--text lua "worldNPCDialogText:gsub('\n',': ',1)"
			width 100
			label
			{
				area		0 0 260 30
				mosaic		INVSEP1
				respectClipping
				enabled		"recordStats[rowNumber][1] == 1"
				text		lua "recordStats[rowNumber][2]"
				text style  'normal'
				text color 	'D'
				text point 10
				text align	left bottom
				text useFontZoom 0
				pad 10 0 0 2
			}
			label
			{
				area		0 0 -1 -1
				enabled		"recordStats[rowNumber][1] == 2"
				text		lua "recordStats[rowNumber][2]"
				text style 'normal'
				text point 12
				text useFontZoom 0
				text align	left center
			}
			label
			{
				area		200 0 -1 -1
				enabled		"recordStats[rowNumber][1] == 2"
				text		lua "recordStats[rowNumber][3]"
				text style 'normal'
				text point 12
				text useFontZoom 0
				text align left center
			}
		}
		enabled "characterViewable"
		area 28 78 286 394
		rowheight dynamic
		table "recordStats"
		scrollbar 'guiscrc'
		hidehighlight
	}
	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 -1 -1
				enabled		"recordInfos[rowNumber][1] == 1"
				text		lua "recordInfos[rowNumber][2]"
				text style 'parchment'
				text align	left center
				text color D
			}
			label
			{
				area		0 2 22 -1
				enabled		"recordInfos[rowNumber][1] == 2"
				bam			lua "recordInfos[rowNumber][2].bam"
				sequence	lua "recordInfos[rowNumber][2].current"
				text align	left center
			}
			label
			{
				area		22 0 -1 -1
				text		lua "Infinity_FetchString(recordInfos[rowNumber][2].strRef)"
				text style  'parchment'
				text align	left center
				text color D
			}
		}
		enabled "characterViewable"
		area 548 84 296 394
		rowheight dynamic
		table "recordInfos"
		hidehighlight
		scrollbar 'GUISCRC'
	}
--	label
--	{
--		area 332 440 200 96
--		text lua "characterDescString(characters[currentID])"
--		text style 'normal'
--		text align center center
--	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsLevelUpButtonClickable()"
		area 331 438 201 44
		bam GUIOSTUM
		text 'LEVEL_UP_BUTTON'
		text style "button"
		action
		"
			characterScreen:OnLevelUpButtonClick()
		"
	}
	button
	{
		on escape
		enabled "not CurrentlyInGame()"
		area 331 546 201 44
		bam GUIOSTUM
		text 'DONE_BUTTON'
		text style "button"
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		clickable lua "characterViewable"
		area 36 502 234 44
		bam GUIOSTUL
		text 'INFORMATION_BUTTON'
		text style "button"
		action
		"
			Infinity_PushMenu('CHARACTER_INFORMATION')
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsReformPartyButtonClickable()"
		area 36 546 234 44
		bam GUIOSTLL
		text 'REFORM_PARTY_BUTTON'
		text style "button"
		action
		"
			characterScreen:OnReformPartyButtonClick()
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsDualClassButtonClickable()"
		area 331 502 201 44
		bam GUIOSTUM
		text 'DUAL_CLASS_BUTTON'
		text style "button"
		action
		"
			characterScreen:OnDualClassButtonClick()
		"
	}
	button
	{
		area 331 546 201 44
		bam GUIOSTLM
		text 'KIT_DESC_LABEL'
		text style "button"
		action
		"
			Infinity_PushMenu('CHARACTER_KIT')
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsMultiPlayerModifyable()"
		area 598 502 234 44
		bam GUIOSTUR
		text 'CUSTOMIZE_BUTTON'
		text style "button"
		action
		"
			characterScreen:OnCustomizeButtonClick()
		"
	}
	button
	{
		clickable lua "CurrentlyInGame() and characterScreen:IsExportButtonClickable()"
		area 598 546 234 44
		bam GUIOSTLR
		text 'EXPORT_BUTTON'
		text style "button"
		action
		"
			characterScreen:OnExportButtonClick()
		"
	}

	
}
menu
{
	name 'CHARACTER_CUSTOMIZE'
	align center center
	modal
	ignoreesc
	onOpen
	"
		currentPanelID = const.CUSTOMIZE_ID
	"
	label 
	{
		area 0 0 864 710
		mosaic	GUICUSTB
	}

	text
	{
		area 426 120 398 490
		text 11327 --Customize help text
		scrollbar 'GUISCRC'
		text style	normal
	}
	label
	{
		area	74 12 716 44
		text	"CUSTOMIZE_TITLE"
		text style	title
	}
	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 192 340 32		
		text style "button"
		text "APPEARANCE_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"		
		action 
		"
			characterScreen:OnAppearanceButtonClick()
		"
	}
	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 228 340 32		
		text style "button"
		text "SOUNDS_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"	
		action 
		"
			characterScreen:OnSoundsButtonClick()
		"
	}
	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 264 340 32		
		text style "button"
		text "COLORS_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"	
		action 
		"
			characterScreen:OnHairSkinButtonClick()
		"
	}
	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 300 340 32		
		text style "button"
		text "SCRIPT_BUTTON"		
		action 
		"
			characterScreen:OnScriptButtonClick()
		"
	}
	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 336 340 32		
		text style "button"
		text "BIOGRAPHY_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"
		action 
		"
			characterScreen:OnCusomizeBiographyButtonClick()
		"
	}
	button
	{
		on escape
		bam 'GUIOSTUL'
		sequence 0
		area 210 653 234 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
	button
	{
		bam 'GUIOSTUR'
		sequence 0
		area  464 653 232 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
}
`
charInfoTable1 = charInfoTable1 and charInfoTable1 or {}
charInfoVar1 = 0
charInfoTable2 = charInfoTable2 and charInfoTable2 or {}
charInfoVar2 = 0
miscHelpGame = 0
charInfoLabel1 = t('CHAPTER_LABEL')
charInfoLabel2 = t('GAME_LABEL')
miscInfoVar = ""

miscListTable = {
'MISCHELP_DESCq','MISCHELP_DESCa','MISCHELP_DESCb','MISCHELP_DESCc','MISCHELP_DESCd','MISCHELP_DESCe','MISCHELP_DESCf','MISCHELP_DESCg','MISCHELP_DESCh','MISCHELP_DESCi','MISCHELP_DESCaq','MISCHELP_DESCaa','MISCHELP_DESCab','MISCHELP_DESCac','MISCHELP_DESCad','MISCHELP_DESCae','MISCHELP_DESCaf','MISCHELP_DESCag','MISCHELP_DESCah','MISCHELP_DESCai','MISCHELP_DESCbq','MISCHELP_DESCba','MISCHELP_DESCbb','MISCHELP_DESCbc','MISCHELP_DESCbd','MISCHELP_DESCbe',
}


function miscInfoVarSearchString(rowNumber)
	
	if(miscInfoVar == nil or miscInfoVar == "") then return 1 end --no search string, do nothing
	
	local text = t(miscListTable[rowNumber])
	if(string.find(string.lower(text),string.lower(miscInfoVar))) then
		return 1
	else
		return nil --does not contain search string
	end
	
end

function charInfoFill1() -- this fills in the newly created list for character info
	local charReplacement = {
	{["charInfo_a"] = "",["charInfo_b"] = ""},
	{["charInfo_a"] = Infinity_FetchString(characters[currentID].Stats.bestenemy.strRef),["charInfo_b"] = characters[currentID].Stats.bestenemy.current},
	{["charInfo_a"] = Infinity_FetchString(characters[currentID].Stats.timespent.strRef),["charInfo_b"] = characters[currentID].Stats.timespent.current},
	{["charInfo_a"] = Infinity_FetchString(characters[currentID].Stats.favspell.strRef),["charInfo_b"] = characters[currentID].Stats.favspell.current},
	{["charInfo_a"] = Infinity_FetchString(characters[currentID].Stats.favweapon.strRef),["charInfo_b"] = characters[currentID].Stats.favweapon.current}, 
	}

	for k, v in pairs(charReplacement) do
		charInfoTable1[k] = v
	end
	
end

function charInfoFill2()

local charReplacement2 = {
	{["charInfo_c"] = "",["charInfo_d"] = "",["charInfo_e"] = ""},
	{["charInfo_c"] = charInfoLabel1,["charInfo_d"] = '',["charInfo_e"] = charInfoLabel2},
	{["charInfo_c"] = characters[currentID].Stats.partychapxp.current .. '%',["charInfo_d"] = Infinity_FetchString(characters[currentID].Stats.partychapxp.strRef),["charInfo_e"] = characters[currentID].Stats.partygamexp.current .. '%'},
	{["charInfo_c"] = characters[currentID].Stats.partychapkills.current .. '%',["charInfo_d"] = Infinity_FetchString(characters[currentID].Stats.partychapkills.strRef),["charInfo_e"] = characters[currentID].Stats.partygamekills.current .. '%'},
	{["charInfo_c"] = characters[currentID].Stats.chapxpvalue.current,["charInfo_d"] = Infinity_FetchString(characters[currentID].Stats.chapxpvalue.strRef),["charInfo_e"] = characters[currentID].Stats.gamexpvalue.current},
	{["charInfo_c"] = characters[currentID].Stats.chapkills.current,["charInfo_d"] = Infinity_FetchString(characters[currentID].Stats.chapkills.strRef),["charInfo_e"] = characters[currentID].Stats.gamekills.current},
	}
	
	for k, v in pairs(charReplacement2) do
		charInfoTable2[k] = v
	end
	
end

`
menu
{
	name 'CHARACTER_INFORMATION' --character information, char info
	align center top
	--offset 0 -40
	modal
	ignoreesc
	label
	{
		area 0 0 1024 710
		mosaic y5info
	}
	label
	{
		area 342 16 332 68
		text lua "Infinity_FetchString(13707)"
		text style 'title'
	}
	list
	{
		column
		{
			width 100
			label
			{
			area -210 0 -1 -1
			text style "label"
			text lua "charInfoTable1[rowNumber].charInfo_a"
			text point 12
			text useFontZoom 0
			}
			label
			{
			area 240 0 -1 -1
			text style "label"
			text lua "charInfoTable1[rowNumber].charInfo_b"
			text point 12
			text useFontZoom 0
			}
		}
	
	name "charInfoList1"
	area 32 142 472 220
	rowheight 40
	table charInfoTable1
	var charInfoVar1
	hidehighlight
	scrollbar 'guiscrc'
	}
	
	list
	{
		column
		{
			width 100
			label
			{
			area -350 0 -1 -1
			text style "label"
			text lua "charInfoTable2[rowNumber].charInfo_c"
			text point 12
			text useFontZoom 0
			}
			label
			{
			area 0 0 -1 -1
			text style "label"
			text lua "charInfoTable2[rowNumber].charInfo_d"
			text point 12
			text useFontZoom 0
			}
			label
			{
			area 370 0 -1 -1
			text style "label"
			text lua "charInfoTable2[rowNumber].charInfo_e"
			text point 12
			text useFontZoom 0
			}
		}
	name "charInfoList2"
	area 32 362 472 264
	rowheight 40
	table charInfoTable2
	var charInfoVar2
	hidehighlight
	scrollbar 'guiscrc'
	}
	label
	{
		area 32 100 474 28
		text lua "characters[currentID].name"
		text style "title"
		text point 16
	}
	list
	{
		column
		{
			width 100
			label
			{
			area 0 0 -1 -1	
			enabled "miscInfoVarSearchString(rowNumber)"
			text style "normal_parchment"
			pad 10 10 0 0
			text color B
			text lua "t(miscListTable[rowNumber])"
			}
		}
		
	name "miscList"	
	area 520 454 470 192
	rowheight dynamic
	table miscListTable
	var miscListVar
	hidehighlight
	scrollbar 'GUISCRC'
	}
	label
	{
		area 520 100 474 28
		text "BIOGRAPHY_TITLE"
		text style 'title'
		text point 16
	}
	text
	{
		area 520 132 474 294
		text lua "Infinity_FetchString(characters[currentID].biography)"
		scrollbar 'GUISCRC'
		text style parchment
		text color D
	}
	
	edit
	{
		name "miscInfoEdit"
		area 624 654 250 30
		text style "edit"
		text point 12
		placeholder "ENTER_TEXT"
		var miscInfoVar
		align left bottom
		text color 'D'
		maxlines 1
		fill		112 111 111 64
		
		--EXTEXT2
	}
	label
	{
	area 0 0 50 50
	enabled "miscInfoVar ~= ''"
	on escape
	action
	"
	miscInfoVar = ''
	"
	}
	label
	{
	area 0 50 50 50
	enabled "miscInfoVar == ''"
	on escape
	action
	"
		Infinity_FocusTextEdit('')
		Infinity_PopMenu()
	"
	}
	button
	{
		area 589 654 30 30
		bam GUIOSW
		sequence 2
		scaleToClip
		action
		"
			miscInfoVar = ''
			Infinity_FocusTextEdit('miscInfoEdit')
		"
	}	
	button
	{
		bam GUIOSTCL
		scaleToClip
		area 168 646 234 44
		text style "button"
		text "DONE_BUTTON"
		action
		"
			if miscInfoVar ~= '' then
				miscInfoVar = ''
				Infinity_FocusTextEdit('')
				Infinity_PopMenu()
			elseif miscInfoVar == '' then
				Infinity_FocusTextEdit('')
				Infinity_PopMenu()
			end
		"
	}
}
menu
{
	name 'CHARACTER_BIO'
	align center center
	ignoreesc
	label
	{
		area 0 0 864 710
		mosaic GUICHISE
	}
	label
	{
		area 82 12 700 40
		text "BIOGRAPHY_TITLE"
		text style 'title'
	}
	label
	{
		area 318 64 230 32
		text lua "characters[currentID].name"
		text style 'label'
	}
	text
	{
		area 44 198 768 410
		text lua "Infinity_FetchString(characters[currentID].biography)"
		scrollbar 'GUISCRC'
		text style parchment
		text color D
	}
	button
	{
		on escape
		bam GUIOSTCL
		area 308 653 300 44
		text style "button"
		text "DONE_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CHARACTER_KIT'
	align center center
	modal
	ignoreesc
	label
	{
		area 0 0 864 710
		mosaic GUICHISE
	}
	label
	{
		area 82 12 700 40
		text "KIT_DESC_LABEL"
		text style 'title'
	}
	label
	{
		area 318 64 230 32
		text lua "characters[currentID].name"
		text style 'label'
	}
	text
	{
		area 44 198 768 410
		text lua "characters[currentID].kitDesc"
		scrollbar 'GUISCRC'
		text style parchment
		text color D
	}
	button
	{
		on escape
		bam GUIOSTCL
		area 308 653 300 44
		text style "button"
		text "DONE_BUTTON"
		action
		"
			Infinity_PopMenu()
		"
	}
}
`
recBioEdit = ""
recBioEditBackup = ""
`
menu
{
	name 'CHARACTER_BIOGRAPHY'
	align center center
	ignoreesc
	onOpen
	"
		recBioEditBackup = recBioEdit
		currentPanelID = 23
	"
	label
	{
		area 0 0 864 710
		mosaic	GUICUSTB
	}
	label
	{
		area 84 12 700 44
		text	"BIOGRAPHY_TITLE"
		text style	'title'
	}
	edit
	{
		name		"recBioEditArea"
		area		426 120 396 490
		var			recBioEdit
		scrollbar	'GUISCRC'
		text style	"edit"
	}

	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 192 340 32		
		text style "button"
		text	"CLEAR_BUTTON"		
		action 
		"
			recBioEdit = ''
		"
	}
	button
	{
		bam 'GUICHLNG'
		sequence 0
		area 42 228 340 32	
		text style "button"
		text "REVERT_BUTTON"		
		action 
		"
			recBioEdit = recBioEditBackup
		"
	}
		button
	{
		on escape
		bam 'GUIOSTUL'
		sequence 0
		area 210 653 234 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		bam 'GUIOSTUR'
		sequence 0
		area  464 653 232 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}


`
scriptList_idx = 0
showingSmartOptions = false
function formatScriptName(text)
	local i =  string.find(text, ":", #text)
	if(i) then 
		text = string.sub(text,1, i - 1)
	end
	if(#text > 35) then
		text = string.sub(text,1, 35)
		text = text .. "..."
	end
	return text
end

scriptOptions = 
{
	{'SCRIPT_ATTACK_ENEMIES_LABEL',			'SCRIPT_ATTACK_ENEMIES_DESCRIPTION',		 1, 0, 0},
	{'SCRIPT_USE_MELEE_WEAPONS_LABEL',		'SCRIPT_USE_MELEE_WEAPONS_DESCRIPTION',		 2, 0, 0},
	{'SCRIPT_USE_RANGED_WEAPONS_LABEL',		'SCRIPT_USE_RANGED_WEAPONS_DESCRIPTION',	 3, 0, 0},
	{'SCRIPT_USE_ITEMS_LABEL',				'SCRIPT_USE_ITEMS_DESCRIPTION',				 4, 0, 0},
	{'SCRIPT_USE_SPECIAL_ABILITIES_LABEL',	'SCRIPT_USE_SPECIAL_ABILITIES_DESCRIPTION',	 5, 0, 0},
	{'SCRIPT_USE_OFFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_OFFENSIVE_SPELLS_DESCRIPTION',	 6, 0, 0},
	{'SCRIPT_USE_DEFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_DEFENSIVE_SPELLS_DESCRIPTION',	 7, 0, 0},
	{'SCRIPT_FIND_TRAPS_LABEL',				'SCRIPT_FIND_TRAPS_DESCRIPTION',			 8, 0, 0},
	{'SCRIPT_HIDE_IN_SHADOWS_LABEL',		'SCRIPT_HIDE_IN_SHADOWS_DESCRIPTION',		 9, 0, 0},
	{'SCRIPT_SING_BATTLESONG_LABEL',		'SCRIPT_SING_BATTLESONG_DESCRIPTION',		10, 0, 0},
	{'SCRIPT_TURN_UNDEAD_LABEL',			'SCRIPT_TURN_UNDEAD_DESCRIPTION',			11, 0, 0}
}

function handleScriptOptionChange(option)
	local wasOn = scriptOptions[option][4] == 2

	if option == 2 then --Melee
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 3 then --Ranged
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	elseif option == 8 then --Find Traps
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
			scriptOptions[option+3][4] = 0
			scriptOptions[option+3][5] = false
		end
	elseif option == 9 then --Hide
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
		end
	elseif option == 10 then --Sing
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 11 then --Turn
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-3][4] = 0
			scriptOptions[option-3][5] = false
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	else
		scriptOptions[option][4] = toggleFrame(scriptOptions[option][4])
		if scriptOptions[option][4] == 0 then
			scriptOptions[option][5] = false
		else
			scriptOptions[option][5] = true
		end
	end
end
`
menu
{
	name 'CHARACTER_SCRIPT'
	align center center
	ignoreesc
	onOpen 
	"
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		currentPanelID = const.SCRIPT_ID

		showingSmartOptions = (scriptList_idx == 2)
		scriptDescription = t(scriptOptions[scriptList_idx][2])

		for index, var in pairs(scriptOptions) do
			var[5] = characterScreen:GetTempSmartScriptLocal(var[3])
			if var[5] == false then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"
	label
	{
		area 0 0 864 710
		mosaic GUICHISD
	}
	label
	{
		area 84 12 700 44
		text	"SCRIPT_TITLE"
		text style	'title'
	}
	label
	{
		area 446 468 374 140
		rectangle 0
		enabled "showingSmartOptions == true"
	}
	label
	{
		area 36 120 788 44
		text	"CURRENT_SCRIPT_LABEL"
		text style	'label'
	}
	text
	{
		area 460 480 348 120
		text lua "scriptDescription"
		scrollbar 'GUISCRC'
		text style	normal
		enabled "showingSmartOptions == true"
	}

	text
	{
		area 446 190 376 422
		text lua "scriptDescription"
		scrollbar 'GUISCRC'
		text style	normal
		enabled "showingSmartOptions == false"
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "scriptList[rowNumber] ~= ''"
				text lua "formatScriptName(scriptList[rowNumber])"
				text style	"normal"
				pad 8 0 0 0
			}
			label
			{
				area -10 -10 10000 10000
				enabled "scriptList[rowNumber] == ''"
				rectangle	1
			}
		}
		area 40 194 360 414
		rowheight	18
		table		"scriptList"
		var			"scriptList_idx"
		scrollbar	'GUISCRC'
		action
		"
			showingSmartOptions = (scriptList_idx == 2)
			if scriptList[scriptList_idx] ~= '' then
				Infinity_OnScriptItemSelect(scriptList_idx - 1)
				doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
			else
				scriptList_idx = 0
				scriptDescription = ''
				doneEnabled = false
			end
		"
	}

	list
	{
		
		column 
		{ 
			width 80
			label
			{
				area 10 0 -1 -1
				text lua "t( scriptOptions[rowNumber][1])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		10 8 -1 -1
				bam			ROUNDBUT
				align 		left center
				frame		lua "scriptOptions[rowNumber][4]"
			}
		}

		area 444 194 376 266
		
		rowheight	50
		table		"scriptOptions"
		var			selScriptOpt
		scrollbar	'GUISCRC'
		enabled 	"showingSmartOptions == true"

		action		
		"
			scriptDescription = t(scriptOptions[selScriptOpt][2])
			selectedSL = 0
			selFeedOpt = 0

			if(cellNumber == 2) then
				handleScriptOptionChange(selScriptOpt)
			end
		"
	}

	button
	{
		on escape
		bam 'GUIOSTUL'
		sequence 0
		area 210 653 236 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		bam 'GUIOSTUR'
		sequence 0
		area 464 653 236 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			if showingSmartOptions == true then
				for index, var in pairs(scriptOptions) do
					characterScreen:SetTempSmartScriptLocal(var[3], var[5])
				end
			end

			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
			
		"
	}
}
`
list_GUIREC_13_0_idx = 0
characterExportCharacterEdit = ""
`
menu
{
	name 'CHARACTER_EXPORT'
	align center center
	modal
	ignoreEsc
	onOpen
	"
		currentPanelID = const.EXPORT_ID;
		Infinity_FocusTextEdit('characterExportCharacterEditArea');
	"
	label 
	{
		area 0 0 864 710
		mosaic	GUICHISD
	}
	label
	{
		area	74 10 716 44
		text	"EXPORT_TITLE"
		text style	title
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUIREC_13_0[rowNumber]"
				text style "list"
			}
		}
		area 44 194 356 412
		rowheight	18
		table		"list_GUIREC_13_0"
		var			"list_GUIREC_13_0_idx"
		scrollbar	'GUISCRC'
		action
		"
			Infinity_OnCharacterItemSelect(list_GUIREC_13_0_idx - 1)
		"
	}
	label
	{
		area		164 114 332 52
		text		"EXPORT_FILENAME_LABEL"
		text style	"label"
		text color 	3
	}
	edit
	{
		name		"characterExportCharacterEditArea"
		area		440 130 310 36
		var			characterExportCharacterEdit
		text style	"edit"
		maxlines	1
		action
		"
			if(characterExportCharacterEdit:len() > 7 and key_pressed ~= 8) then				
				return 0
			else
				Infinity_UpdateCharacterRecordExportPanel()
				return 1
			end
		"

	}
	text
	{
		area 446 194 374 412
		text 10962
		text style	normal
		scrollbar 'GUISCRC'
	}
	button
	{
		bam 'GUIOSTUL'
		on escape
		sequence 0
		area 210 653 236 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_EXPORT')
			currentPanelID = 0
		"
	}
	button
	{
		clickable	lua "characterScreen:IsDoneButtonClickable(currentID)"
		bam 'GUIOSTUR'
		sequence 0
		area  464 653 236 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
		"
	}
}
`
list_GUIREC_20_5_idx = 0
doneEnabled = 0
`
menu
{
	name 'CHARACTER_SOUND'
	align center center
	ignoreesc
	onOpen 
	"
		currentPanelID = const.SOUND_ID
		Infinity_OnSoundItemSelect(0)
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
	"
	label
	{
		area 0 0 864 710
		mosaic GUICHISD
	}
	label
	{
		area 82 12 700 44
		text	"SOUND_TITLE"
		text style	'title'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "getFileNameStringRef(rowNumber, list_GUIREC_20_5)"
				text style	"list"
				pad 8 0 0 0
			}
		}
		area 36 190 368 421
		rowheight	18
		table		"list_GUIREC_20_5"
		var			"list_GUIREC_20_5_idx"
		scrollbar	'GUISCRC'
		action
		"
			Infinity_OnSoundItemSelect(list_GUIREC_20_5_idx - 1)
			doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		"
	}
	text
	{
		area 446 194 378 417
		text 11315
		scrollbar 'GUISCRC'
		text style	normal
	}
	button
	{
		clickable lua "list_GUIREC_20_5_idx"
		bam 'GUIOSTCL'
		sequence 0
		area 272 120 300 44
		text style "button"
		text	"PLAY_SOUND_BUTTON"
		action 
		"	
			characterScreen:OnPlayButtonClick();			
		"
	}
	button
	{
		on escape
		bam 'GUIOSTUL'
		sequence 0
		area 210 653 236 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		bam 'GUIOSTUR'
		sequence 0
		area  464 653 236 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}
`
function toggleFrame(curFrame)
	if curFrame == 0 then 
		return 2
	else 
		return 0
	end 
end
function getSelected(cur, my)
	if cur == my then 
		return 1
	else 
		return 0
	end 
end
function removeStoryModeOption()
	table.remove(toggleTitles)
end
function addStoryModeOption()
	storymodeAdd = {'DIFFICULTY_LABEL_STORYMODE',	'DIFFICULTY_DESCRIPTION_STORYMODE_BG2EE',	65, 0, 0}
	table.insert(toggleTitles, 14, storymodeAdd)
end

function removeOptionFromList(list, option)
	local startingPoint = 1
	local found = false
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list-1, 1 do
			list[index] = list[index+1]
		end
		list[#list] = nil
	end
end

function optExistsInList(list, option)
	local found = false
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			found = true
			break
		end
	end
	return found
end

function optReplaceInList(list, option)
	local replace = OPTIONNIL
	startingPoint = 1
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			replace = t(list[startingPoint][1])
			break
		end
	end
	return replace
end

function enabledReplaceInList(list, option)
	local replace = OPTIONNIL
	startingPoint = 1
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			replace = rowNumber==startingPoint
			break
		end
	end
	return replace
end

function disabledReplaceInList(list, option)
	local replace = OPTIONNIL
	startingPoint = 1
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			replace = rowNumber~=startingPoint and rowNumber~=startingPoint-1
			break
		end
	end
	return replace
end


function optListOnOff(list, option)
	local startingPoint = 1
	local found = false
	local value = 1
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			value = 2
			break
		end
	end
	if value == 2 and list[startingPoint][4] == 2 then
		found = true
	end
	return found
end

function optListVarFive(list, option)
	local startingPoint = 1
	local found = false
	local value = 1
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			value = 2
			break
		end
	end
	if value == 2 and list[startingPoint][5] == 1 then
		found = true
	end
	return found
end

function optVarSelected(list, option)
	local startingPoint = 1
	local found = 1
	local value = 1
	local OnOff = 1
	for index = 1, #list, 1 do
		if list[index][3] == option then
			startingPoint = index
			value = 2
			break
		end
	end
	if value == 2 and startingPoint == selectedOpt then
		OnOff = 2
	end
	if OnOff == 2 and list[startingPoint][5] == 1 then
		found = true
	elseif OnOff == 2 and list[startingPoint][5] == 0 then
		found = false
	end
	return found
end

function changeOptList(list, option)
	local startingPoint = 1
	local value = 1
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			value = 2
			break
		end
	end
	if value == 2 and list[startingPoint][4] ~= 2 then
		list[startingPoint][4] = 2
		list[startingPoint][5] = 1		
	end
end


--			if list[index][3][4][5] == value then

-- this area sets the buttons that show in the gameplay area and what they do when toggled
toggleTitles = 
{


--{"WORLDMAP_HIGHLIGHT_LABEL",            "WORLDMAP_HIGHLIGHT_DESCRIPTION",     66, 0, 0},
{"NEWMP_LABEL",                        "NEWMP_DESC",                'opt_ag', 0, 0},
--{"MP_CHAT_LABEL",                        "MP_CHAT_DESCRIPTION",                67, 0, 0},
{"WEATHER_LABEL",                        "WEATHER_DESCRIPTION",                 47, 0, 0},
{"GROUP_INFRA_LABEL",                    "GROUP_INFRA_DESCRIPTION",             42, 0, 0},
{"HEAL_ON_REST_LABEL",                    "HEAL_ON_REST_DESCRIPTION",         50, 0, 0},
{"MAX_HP_ON_LEVEL_LABEL",                "MAX_HP_ON_LEVEL_DESCRIPTION",         55, 0, 0},
{"NO_DAMAGE_INCREASE_LABEL",            "NO_DAMAGE_INCREASE_DESCRIPTION",     64, 0, 0},
{'PROV_LABEL',                            'PROV_DESC',                 19, 0, 0},
{"AUTO_USE_MAGIC_AMMO_LABEL",            "AUTO_USE_MAGIC_AMMO_DESCRIPTION",     68, 0, 0},
{"QUICKLOOT_LABEL", 					"QUICKLOOT_DESC", 						'opt_a', 0, 0},
{"C_ESNEAK_LABEL", 					"C_ESNEAK_DESC", 						'opt_e', 0, 0},
{'COLORED_MARKERS_LABEL',			'COLORED_MARKERS_HELP', 			38, 0, 0, ["panelID"] = 9},
{'CLASSIC_MARKERS_LABEL',			'CLASSIC_MARKERS_HELP', 			45, 0, 0, ["panelID"] = 9},
{'DISABLE_COSMETIC_ATTACKS_LABEL',	'DISABLE_COSMETIC_ATTACKS_HELP', 	43, 0, 0, ["panelID"] = 9},
{"DIFFICULTY_LABEL_STORYMODE_MIXED",    "DIFFICULTY_DESCRIPTION_STORYMODE_BG2EE",    65, 0, 0},
{"ENABLE_CLOUD_LABEL",                    "ENABLE_CLOUD_DESCRIPTION",         60, 0, 0},
{"NOPAUSE_LABEL",                    "NOPAUSE_DESC",         'opt_ab', 0, 0},
}



selectedOpt = 0
helpString = 0

ttDelaySLDR = 0
keyboardSLDR = 0
mouseSLDR = 0
difficultySLDR = 0

panelID = 8

function getDifficulty(d)
	local text = ""
	if ( d ==0 ) then
		text = t("DIFFICULTY_LABEL_EASY")
	elseif (d == 1) then
		text = t("DIFFICULTY_LABEL_NORMAL")
	elseif (d == 2) then
		text = t("DIFFICULTY_LABEL_CORERULES")
	elseif (d == 3) then
		text = t("DIFFICULTY_LABEL_HARD")
	elseif (d == 4) then
		text = t("DIFFICULTY_LABEL_INSANE")
	elseif (d == 5) then
		text = string.upper(t("MULTIPLAYER_DIFFICULTY_LABEL")).." "..t("DIFFICULTY_LABEL_LEGACYOFBHAAL")
	end
	return text
end

graphicsToggles = {
{'FULL_SCREEN_LABEL',18000, 9 , 0, 0, 0},
{'HARDWARE_CURSOR_LABEL',93703, 13, 0, 0, 0},
{'SCALE_UI_LABEL',93704, 14, 0, 0, 0},
{'ZOOM_LOCK_LABEL',103188, 36, 0, 0, 0},
{'SPRITE_OUTLINE_LABEL',103189, 15, 0, 0, 0},
{'GREYSCALE_ON_PAUSE_LABEL',103190, 66, 0, 0, 0},
{'HIGHLIGHT_SPRITE_LABEL',103191, 67, 0, 0, 0},
{'DITHER_ALWAYS_LABEL',18021, 52, 0, 0, 0},
{'SHOW_HP_LABEL',103205, 53, 0, 0, 0},
{'SHOW_HEALTHBAR_LABEL',103192, 65, 0, 0, 0},
{'SHOW_BLACK_SPACE_LABEL','SHOW_BLACK_SPACE_DESCRIPTION', 69, 0, 0, 0},
{'CAST_AREA_LABEL','CAST_AREA_DESC','opt_b',0,0,0},
{'NEAREST_NEIGHBOUR_LABEL','NEAREST_NEIGHBOUR_DESCRIPTION', 70, 0, 0, 0},
{'ENABLE_CONFIRMATION_LABEL',		'ENABLE_CONFIRMATION_HELP', 		41, 0, 0, ["panelID"] = 9},
{'CRIT_LABEL','CRIT_DESC','opt_f',0,0,0},
{'MOVIE_LABEL','MOVIE_DESC','opt_g',0,0,0},
{'NOMAP_LABEL','NOMAP_DESC','opt_ah',0,0,0},
{'JOURNAL_POPUPS_LABEL',			'JOURNAL_POPUPS_HELP', 				44, 0, 0, ["panelID"] = 9},
{'DIRECTX_LABEL', 103148, 68, 0, 0, 0},
{'CS_','CS_','CS_','CS_','CS_','0'},
{'OPTDEBUG_LABEL','OPTDEBUG_DESC','opt_aa','CS_','CS_','0'},
{'LUA_LABEL','LUA_DESC','opt_ac',0,0,0},
{'DEBUG_LABEL','DEBUG_DESC','opt_c',0,0,0},
{'UIEDIT_LABEL','UIEDIT_DESC','opt_d',0,0,0},
{'SEARCH_LABEL','SEARCH_DESC','opt_h',0,0,0},
{'DYNAMIC_LABEL','DYNAMIC_DESC','opt_i',0,0,0},
{'TABICON_LABEL','TABICON_DESC','opt_aq',0,0,0},
{'STRREF_LABEL','STRREF_DESC','opt_ad',0,0,0},
{'COMINFO_LABEL','COMINFO_DESC','opt_ae',0,0,0},
{'FUNCB_LABEL','FUNCB_DESC','opt_af',0,0,0},
}



--addedDirectx = false
--function appendDirectXOption()
--	if addedDirectx == false then
--		dxOption = {'DIRECTX_LABEL', 103148, 68, 0, 0, 0}
--		table.insert(graphicsToggles, dxOption)
--		addedDirectx = true
--	end
--end

selectedGraphicOpt = 0

fontSizeSLDR = 0
fontSizeCancel = 0
function formatGraphicsInfoString()
	return options['Graphics']['version'] .. "\nrunning on " .. options['Graphics']['renderer'] .. "\ndriver provided by " .. options['Graphics']['vendor']
end
--autopause
autoPauseToggles = { 
{'WEAPON_UNUSABLE_LABEL',18036, 5 , 0, 0},
{'END_OF_ROUND_LABEL',10640, 25, 0, 0},
{'ENEMY_SIGHTED_LABEL',23514, 26, 0, 0},
{'SPELL_CAST_LABEL',31872, 31, 0, 0},
{'TRAP_FOUND_LABEL',58171, 34, 0, 0}
}

characterPauseToggles = { 
{'CENTER_MEMBER_LABEL',10571, 37, 0, 0},
{'CHARACTER_HIT_LABEL',18032, 1 , 0, 0},
{'CHARACTER_INJURED_LABEL',18033, 2 , 0, 0},
{'CHARACTER_DEATH_LABEL',18034, 3 , 0, 0},
{'CHARACTER_ATTACKED_LABEL',18035, 4 , 0, 0},
{'CHARACTER_TARGET_DESTROYED',18037, 13, 0, 0}
}

selOptAP = 0
--sounds
soundsToggles = {
{'CHARACTER_SUBTITLES_LABEL',18015, 5, 0, 0},
{'BATTLE_CRIES_LABEL',18013, 6, 0, 0},
{'MOVEMENT_SOUNDS_LABEL',18014, 7, 0, 0}
}
selectedsoundOpt = 0
command = {
{'ALWAYS_LABEL',0, 8, 0, 0},
{'SELDOM_LABEL',0, 9, 0, 0},
{'NEVER_LABEL',0, 10, 0, 0}
}
commandSel = 0
selectOpt = {
{'ALWAYS_LABEL',0, 58, 0, 0},
{'SELDOM_LABEL',0, 59, 0, 0},
{'NEVER_LABEL',0, 60, 0, 0}
}
commandView = 0
commView = {
{''},
{'COMMAND_SOUNDS_BUTTON'},
{''}
}
selectionsView = 0
selectView = {
{''},
{'SELECTION_BUTTON'},
{''}
}


selectSel = 0
ambientSLDR = 0
sfxSLDR = 0
voiceSLDR = 0
musicSLDR = 0
movieSLDR = 0
--feedback
feedbackToggles = {
{'COMBAT_INFO_LABEL',		'COMBAT_INFO_HELP', 	11, 0, 0},
{'SELECTION_TEXT_LABEL',	'SELECTION_TEXT_HELP',	14, 0, 0}
}

messagesToggles = { 
{'TO_HIT_ROLLS_LABEL',		'TO_HIT_ROLLS_HELP', 	10, 0, 0},
{'ACTIONS_LABEL', 			'ACTIONS_HELP', 		12, 0, 0}
}

messagesToggles1 = { 
{'MISC_LABEL',				'MISC_HELP', 			15, 0, 0},
{'STATE_CHANGES_LABEL',		'STATE_CHANGES_HELP', 	13, 0, 0}
}


selFeedOpt = 0
selMessageOpt = 0
helpString = 0

markerFeedSLDR = 0
locatorFeedSLDR = 0

deferredOptions = {}

function getDeferredOption(section, option)
	if (not deferredOptions[tostring(section)]) then
		deferredOptions[tostring(section)] = {}
	end
	if (not deferredOptions[section][tostring(option)]) then
		deferredOptions[section][tostring(option)] =  tonumber(Infinity_GetINIValue(section,option)) or 0
	end
	return deferredOptions[section][option]
end

function setDeferredOption(section, option, value)
	if (not deferredOptions[tostring(section)]) then
		deferredOptions[tostring(section)] = {}
	end
	deferredOptions[section][tostring(option)] = tonumber(value) or 0
end

function removeDeferredOptions()
	for s,t in pairs(deferredOptions) do
		for o,v in pairs(t) do
			Infinity_SetINIValue(s,o,v)
		end
	end
end

function tobool(value)
	return value and 1 or 0
end

function getFrequency(d,includeHighter)
	strref = ""
	if ( d ==0 ) then
		strref = "MINIMUM"
	elseif (d == 1) then
		strref = "LOW"
	elseif (d == 2) then
		strref = "MEDIUM"
	elseif (d == 3) then
		strref = "HIGH"
	elseif (d == 4 and includeHighter == true) then
		strref = "HIGHER"
	elseif (d == 4 and includeHighter == false) then
		strref = "MAXIMUM"
	elseif (d == 5) then
		strref = "MAXIMUM"
	end
	return t(strref)
end

function getOPTMenuArea() 

	local screenWidth, screenHeight = Infinity_GetScreenSize()
	Infinity_SetArea('OPTM', screenWidth*.075, nil, screenWidth*.85, screenHeight) -- .0725 / .85 norm
	--Infinity_SetArea('OPTPanel', screenWidth*.395, screenHeight*.035,screenWidth*.2, screenHeight*.1)
	
	Infinity_SetArea('gameplaylabel', screenWidth*.0843, screenHeight*.0835,screenWidth*.2, screenHeight*.86) -- .093 norm, -.0095
	Infinity_SetArea('gameplaytitle', screenWidth*.097, screenHeight*.1,screenWidth*.172, screenHeight*.04) 
	Infinity_SetArea('gameplayToggle', screenWidth*.097, screenHeight*.16,screenWidth*.172, screenHeight*.38) 
	
	Infinity_SetArea('graphiclabel', screenWidth*.288, screenHeight*.0835,screenWidth*.2, screenHeight*.57) 
	Infinity_SetArea('graphictitle', screenWidth*.301, screenHeight*.1,screenWidth*.172, screenHeight*.04)
	Infinity_SetArea('graphicToggle', screenWidth*.301, screenHeight*.16,screenWidth*.172, screenHeight*.459)

	Infinity_SetArea('soundslabel', screenWidth*.4865, screenHeight*.0835,screenWidth*.19, screenHeight*.583) 
	Infinity_SetArea('soundstitle', screenWidth*.498, screenHeight*.1,screenWidth*.167, screenHeight*.04) 
	Infinity_SetArea('soundsToggle', screenWidth*.498, screenHeight*.16,screenWidth*.167, screenHeight*.175) 
	Infinity_SetArea('commandtitle', screenWidth*.498, screenHeight*.324, screenWidth*.167, screenHeight*.16)
	Infinity_SetArea('commandToggle', screenWidth*.498, screenHeight*.324, screenWidth*.167, screenHeight*.16)
	Infinity_SetArea('selectiontitle', screenWidth*.498, screenHeight*.482, screenWidth*.167, screenHeight*.16)
	Infinity_SetArea('selectionToggle', screenWidth*.498, screenHeight*.482, screenWidth*.167, screenHeight*.16)
	
	Infinity_SetArea('aptitle', screenWidth*.097, screenHeight*.57,screenWidth*.172, screenHeight*.025) 
	Infinity_SetArea('aplistl', screenWidth*.097, screenHeight*.605,screenWidth*.089, screenHeight*.32) 
	Infinity_SetArea('aplistr', screenWidth*.183, screenHeight*.605,screenWidth*.089, screenHeight*.32)


	Infinity_SetArea('rightlabel', screenWidth*.677, screenHeight*.0835,screenWidth*.235, screenHeight*.86) 
	Infinity_SetArea('feedbacktitle', screenWidth*.691, screenHeight*.31,screenWidth*.2103, screenHeight*.025)
	Infinity_SetArea('messageToggle', screenWidth*.691, screenHeight*.35,screenWidth*.07, screenHeight*.115)	
	Infinity_SetArea('messageToggle1', screenWidth*.761, screenHeight*.35,screenWidth*.07, screenHeight*.115) 
	Infinity_SetArea('feedbackToggle', screenWidth*.831, screenHeight*.35,screenWidth*.07, screenHeight*.115) 
	
	Infinity_SetArea('desclabel', screenWidth*.288, screenHeight*.675,screenWidth*.389, screenHeight*.2) 
	Infinity_SetArea('desctext', screenWidth*.298, screenHeight*.697,screenWidth*.3625, screenHeight*.15) 

	Infinity_SetArea('assignkey', screenWidth*.386, screenHeight*.9, screenWidth*.095, screenHeight*.058)
	Infinity_SetArea('donebutton', screenWidth*.482, screenHeight*.9, screenWidth*.095, screenHeight*.058)
	Infinity_SetArea('langbutton', screenWidth*.29, screenHeight*.9, screenWidth*.095, screenHeight*.058)
	Infinity_SetArea('cutscenebutton', screenWidth*.578, screenHeight*.9, screenWidth*.095, screenHeight*.058)
	--Infinity_SetArea('specstext', screenWidth*.078, screenHeight*.88, screenWidth*.235, screenHeight*.1)
	
	Infinity_SetArea('difftitle', screenWidth*.6855, screenHeight*.22, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('diffsldr', screenWidth*.7959, screenHeight*.22, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('editdifftitle', screenWidth*.7959, screenHeight*.26, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('replacdifftitle', screenWidth*.6855, screenHeight*.24, screenWidth*.215, screenHeight*.0375)
	Infinity_SetArea('storydifftitle', screenWidth*.7959, screenHeight*.26, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('fakediffsldr', screenWidth*.7959, screenHeight*.22, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('storydiffcover', screenWidth*.7959, screenHeight*.22, screenWidth*.1046, screenHeight*.0375)
	
	Infinity_SetArea('markertitle', screenWidth*.6855, screenHeight*.12, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('markersldr', screenWidth*.7959, screenHeight*.12, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('locatortitle', screenWidth*.6855, screenHeight*.17, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('locatorsldr', screenWidth*.7959, screenHeight*.17, screenWidth*.1046, screenHeight*.0375)
		
	Infinity_SetArea('mouscrltitle', screenWidth*.6855, screenHeight*.48, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('mouscrlsldr', screenWidth*.7959, screenHeight*.48, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('keybscrltitle', screenWidth*.6855, screenHeight*.53, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('keybscrlsldr', screenWidth*.7959, screenHeight*.53, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('tooltiptitle', screenWidth*.6855, screenHeight*.58, screenWidth*.1046, screenHeight*.0375)  
	Infinity_SetArea('tooltipsldr', screenWidth*.7959, screenHeight*.58, screenWidth*.1046, screenHeight*.0375) 
	Infinity_SetArea('fonttitle', screenWidth*.6855, screenHeight*.63, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('fontsldr', screenWidth*.7959, screenHeight*.63, screenWidth*.1046, screenHeight*.0375) 
	
	--Infinity_SetArea('volumetitle', screenWidth*.6855, screenHeight*.58, screenWidth*.215, screenHeight*.05)

	Infinity_SetArea('cutscenetitle', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('cutscenesldr', screenWidth*.7959, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)	
	Infinity_SetArea('ambtitle', screenWidth*.6855, screenHeight*.73, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('ambsldr', screenWidth*.7959, screenHeight*.73, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('sofxtitle', screenWidth*.6855, screenHeight*.78, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('sofxsldr', screenWidth*.7959, screenHeight*.78, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('voicestitle', screenWidth*.6855, screenHeight*.83, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('voicessldr', screenWidth*.7959, screenHeight*.83, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('musicvtitle', screenWidth*.6855, screenHeight*.88, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('musicvsldr', screenWidth*.7959, screenHeight*.88, screenWidth*.1046, screenHeight*.0375)
	
	Infinity_SetArea('hiddenGameplayInvis', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('hiddenGameplayButton', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('hiddenMenuBackground', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('hiddenMenuList', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('frameratetitle', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('frameratesldr', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('actiontitle', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)
	Infinity_SetArea('actionsldr', screenWidth*.6855, screenHeight*.68, screenWidth*.1046, screenHeight*.0375)


end
`

menu
{
	name	'OPTIONS_GAMEPLAY' -- settings menu
	ignoreesc
	modal
	onOpen
	"
		Infinity_PlayMovie('OPTM','OPTM')
		getOPTMenuArea()
		panelID = 8
		helpString = 'GAMEPLAY_DESCRIPTION'
		selectedOpt = 0
		selectedSL = 0
		selectedGraphicOpt = 0
		selectedsoundOpt = 0
		commandSel = 0
		selectSel = 0
		selOptAPC = 0
		selOptAP = 0
		selFeedOpt = 0
		selFeedOpt1 = 0
		selFeedOpt2 = 0
		--selMessageOpt = 0

		if Infinity_GetOption(59, 8) ~= 0 and optExistsInList(toggleTitles, 65) == true then
			--removeStoryModeOption()
			removeOptionFromList(toggleTitles,65)
		elseif Infinity_GetOption(59, 8) == 0 and optExistsInList(toggleTitles, 65) == false then
			addStoryModeOption()
		end
		
		if not e:HasDirectX() then
			removeOptionFromList(graphicsToggles, 68)
		end

		-- gameplay sldrs
		difficultySLDR = Infinity_GetOption(12, panelID)
		markerFeedSLDR = Infinity_GetOption(8, 9)
		locatorFeedSLDR = Infinity_GetOption(9, 9)
		--display sldrs
		ttDelaySLDR = Infinity_GetOption(1, panelID)
		keyboardSLDR = Infinity_GetOption(3, panelID)
		mouseSLDR = Infinity_GetOption(2, panelID)
		fontSizeSLDR = Infinity_GetOption(22, 6)
		fontSizeCancel = Infinity_GetOption(22, 6)
		--sound sldrs
		
		if Infinity_GetINIValue('Y5 Options','setNoAmbience') == 1 then
			ambientSLDR = Infinity_GetINIValue('Y5 Options','setAmbienceAmount')
		else
			ambientSLDR = Infinity_GetOption(1, 7)
		end

		sfxSLDR = Infinity_GetOption(2, 7)
		voiceSLDR = Infinity_GetOption(3, 7)
		musicSLDR = Infinity_GetOption(4, 7)
		movieSLDR = Infinity_GetOption(22, 7)

		--gameplay info
		for index, var in pairs(toggleTitles) do
			if (var[3] == 'opt_a') then
				if optionQuickLoot == 0 then
						var[5] = 0
					else
						var[5] = 1
					end
			elseif (var[3] == 'opt_e') then
				if (getDeferredOption('Game Options', '3E Thief Sneak Attack') == 0) then
					var[5] = 0
				else
					var[5] = 1
				end
			elseif (var[3] == 'opt_ag') then
				if (getDeferredOption('Y5 Options','view allChat') == 0) then
					var[5] = 0
				else
					var[5] = 1
				end
			elseif (var[3] == 'opt_ab') then
				if optionNoPause == 0 then
					var[5] = 0
				else
					var[5] = 1
				end
			else
				var[5] = Infinity_GetOption(var[3], var['panelID'] or 8)
			end
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		--display info		
		for index, var in pairs(graphicsToggles) do
		if (var[3] == 'opt_b') then
			if optionSeeCast == 0 then
					var[5] = 0
				else
					var[5] = 1
				end
		elseif (var[3] == 'opt_c') then
			if (getDeferredOption('Program Options', 'Debug Mode') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_d') then
			if (getDeferredOption('Program Options', 'UI Edit Mode') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_f') then
			if (getDeferredOption('Game Options', 'Critical Hit Screen Shake') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_g') then
			if (getDeferredOption('Program Options', 'Disable Movies') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_h') then
			if (getDeferredOption('Game Options', 'Render Search Map') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_i') then
			if (getDeferredOption('Game Options', 'Render Dynamic Search Map') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_aq') then
			if (getDeferredOption('Game Options', 'Show Triggers On Tab') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_ad') then
			if (getDeferredOption('Program Options', 'Strref On') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_ac') then
			if (getDeferredOption('Y5 Options','view LuaConsole') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_ae') then
			if (getDeferredOption('Game Options','Combat UI') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_af') then
			if (getDeferredOption('Y5 Options','Function Binds') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		elseif (var[3] == 'opt_ah') then
			if (getDeferredOption('Y5 Options','Disable Maps') == 0) then
				var[5] = 0
			else
				var[5] = 1
			end
		else
			var[5] = Infinity_GetOption(var[3], var['panelID'] or 6)
		end
			var[6] = 0
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		--commands sounds info
		for index, var in pairs(command) do
			var[5] = Infinity_GetOption(var[3]	, 7)
				if var[5] == 0 then
					var[4] = 0
				else
				var[4] = 2
				commandSel = index
			end
		end
			
		--selections sounds info	
		for index, var in pairs(selectOpt) do
			var[5] = Infinity_GetOption(var[3], 7)
				if var[5] == 0 then
					var[4] = 0
				else
				var[4] = 2
				selectSel = index
			end
		end
		
		--character sounds info
		for index, var in pairs(soundsToggles) do
			var[5] = Infinity_GetOption(var[3], 7)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
		
		--autopause info
		for index, var in pairs(autoPauseToggles) do
			var[5] = Infinity_GetOption(var[3], 10)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		for index, var in pairs(characterPauseToggles) do
			var[5] = Infinity_GetOption(var[3], 10)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		--feedback info
		for index, var in pairs(feedbackToggles) do
				var[5] = Infinity_GetOption(var[3], 9)
				if var[5] == 0 then
					var[4] = 0
				else
					var[4] = 2
				end
			end

		for index, var in pairs(messagesToggles) do
			var[5] = Infinity_GetOption(var[3], 9)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		for index, var in pairs(messagesToggles1) do
			var[5] = Infinity_GetOption(var[3], 9)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
 
		if Infinity_CanCloudSave() == false and optExistsInList(toggleTitles, 60) == true then
			removeOptionFromList(toggleTitles, 60)
		end
		
		if e:IsTouchUI() then
			removeOptionFromList(graphicsToggles, 9)
			removeOptionFromList(graphicsToggles, 13)
		end
		
	"

	
	movie
	{
		name "OPTM"
	}
	
	label
	{
	name "gameplaylabel"
	area 123 64 294 660
	rectangle 4
	rectangle opacity 150
	}
	label
	{
		name "gameplaytitle"
		area		142 76 252 30
		text		"GAMEPLAY_TITLE"
		text style	title
		text color H
	}
	list -- gameplay options
	{
		
		column 
		{ 
			width 80
			label
			{
				area 10 0 -1 -1
				text lua "t( toggleTitles[rowNumber][1])"
				text style "button"
				text align left center
				text point 10
				text useFontZoom 0
				text color S
			}
--			label
--			{
--				area 10 0 -1 -1
--				enabled		"toggleTitles[rowNumber][1] == 1"
--				text lua "t( toggleTitles[rowNumber][1])"
--				text style "button"
--				text align left center
--				text point 10
--				text useFontZoom 0
--				text color S
--			}
		}
		column 
		{ 
			width 20
			label
			{
				area		10 4 -1 -1
				bam			ROUNDBUT
				align 		center center
				frame		lua "toggleTitles[rowNumber][4]"
			}
		}
		
		name "gameplayToggle"
		area 142 122 252 291
		rowheight 41
		table		"toggleTitles"
		var		selectedOpt
		hidehighlight
		scrollbar	'GUISCRC'

		action		
		"
			panelID = 8
			helpString = toggleTitles[selectedOpt][2]

			if(cellNumber == 2) then

				toggleTitles[selectedOpt][4] = toggleFrame(toggleTitles[selectedOpt][4])

				if toggleTitles[selectedOpt][4] == 0 then
					toggleTitles[selectedOpt][5] = 0
				else 
					toggleTitles[selectedOpt][5] = 1
				end
					
			end
			
			if optVarSelected(toggleTitles, 'opt_a') == false then
				optionQuickLoot = 0
			elseif optVarSelected(toggleTitles, 'opt_a') == true then
				optionQuickLoot = 1
			end
			if optVarSelected(toggleTitles, 'opt_ab') == false then
				optionNoPause = 0
			elseif optVarSelected(toggleTitles, 'opt_ab') == true then
				optionNoPause = 1
			end
		"
	}
--	label
--	{
--		name "specstext"
--		area		168 945 367 40
--		text		lua "formatGraphicsInfoString()"
--		text style	"normal"
--		text align	center center
--		text point 12
--		text useFontZoom 0
--	}
	label
	{
	name "soundslabel"
	area 715 64 279 447
	rectangle 4
	rectangle opacity 150
	}
	text
	{
		name "soundstitle"
		area		732 76 245 30
		text		"CHARACTER_SOUNDS_LABEL"
		text style	"title"
		text align 	center center
		text color H
	}
	list -- sounds
	{
		column 
		{ 
			width 85
			label
			{
				area 0 0 -1 -1
				text lua "t( soundsToggles[rowNumber][1])"
				text style "button"
				text align left center
				text point 10
				text color C
				text useFontZoom 0
			}
		}
		column 
		{ 
			width 15 
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				align 		center center
				frame		lua "soundsToggles[rowNumber][4]"
			}
		}

		area 732 122 245 134
		
		name "soundsToggle"
		rowheight	41
		table		"soundsToggles"
		hidehighlight
		var		selectedsoundOpt

		action		
		"
			panelID = 7
			helpString = soundsToggles[selectedsoundOpt][2]
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				soundsToggles[selectedsoundOpt][4] = toggleFrame(soundsToggles[selectedsoundOpt][4])

				if soundsToggles[selectedsoundOpt][4] == 0 then
					soundsToggles[selectedsoundOpt][5] = 0
				else 
					soundsToggles[selectedsoundOpt][5] = 1
				end
				
			end
		"
	}
	label
	{
	name "graphiclabel"
	area 423 64 294 437
	rectangle 4
	rectangle opacity 150
	}
	text
	{
		name "graphictitle"
		area		442 76 252 30
		text		"DISPLAY_OPTIONS_LABEL"
		text style	"title"
		text align 	center center
		text color H
		action
		"
			selectedGraphicOpt = 0
		"
	}
	list -- display options
	{
		column
		{ 
			width 80
			label
			{
				area 0 0 -1 -1
				enabled "disabledReplaceInList(graphicsToggles,'opt_aa')"
				text lua "t( graphicsToggles[rowNumber][1])"
				text style "button"
				text align left center
				text point 10
				text color G
				text useFontZoom 0
			}
			label
			{
				area 50 0 -1 -1
				enabled "enabledReplaceInList(graphicsToggles, 'opt_aa')"
				text lua "optReplaceInList(graphicsToggles, 'opt_aa')"
				text style "title"
				text align center center
				text point 14
				text color H
				text useFontZoom 0
			}
		}
		column 
		{ 
			width 20 
			label
			{
				area		10 4 -1 -1
				enabled "disabledReplaceInList(graphicsToggles,'opt_aa')"
				bam			ROUNDBUT
				align 		center center
				frame		lua "graphicsToggles[rowNumber][4]"
			}
		}

		area 442 122 252 352
		name "graphicToggle"
		rowheight	41
		table		"graphicsToggles"
		var		selectedGraphicOpt
		hidehighlight
		scrollbar	'GUISCRC'

		action		
		"
			panelID = 6
			helpString = graphicsToggles[selectedGraphicOpt][2]
			if(cellNumber == 2) then
				--Infinity_PlaySound('GAM_09')
				graphicsToggles[selectedGraphicOpt][4] = toggleFrame(graphicsToggles[selectedGraphicOpt][4])

				if graphicsToggles[selectedGraphicOpt][4] == 0 then
					graphicsToggles[selectedGraphicOpt][5] = 0
				else 
					graphicsToggles[selectedGraphicOpt][5] = 1
				end
				graphicsToggles[selectedGraphicOpt][6] = 1
				--Infinity_ChangeOption(graphicsToggles[selectedGraphicOpt][3], graphicsToggles[selectedGraphicOpt][5], panelID )
			end
			
			if optVarSelected(graphicsToggles, 'opt_b') == false then
				optionSeeCast = 0
			elseif optVarSelected(graphicsToggles, 'opt_b') == true then
				optionSeeCast = 1
			end
		"

	}	
	list
	{
		column
		{
			width 10
			label
			{
			area 0 0 -1 -1
			}
		}
		column
		{
			width 40
			label
			{
			area 0 0 -1 -1
			text lua "t(commView[rowNumber][1])"
			text style "title"
			text style "button"
			text align center center
			text useFontZoom 0
			text color H
			}
		}
		column 
		{
			width 5
			label
			{
			area 0 0 -1 -1
			}
		}
		column 
		{ 
			width 30
			label
			{
				area 0 0 -1 -1

			}
		}
		column 
		{ 
			width 15
			label
			{
				area		0 0 -1 -1
			}
		}

		area 732 248 245 122
		name "commandtitle"
		rowheight	41
		table		"commView"
		var		commandView
		hidehighlight
	}
	
	list
	{
		column
		{
			width 10
			label
			{
			area 0 0 -1 -1
			}
		}
		column
		{
			width 40
			label
			{
			area 0 0 -1 -1
			text point 12
			text style "button"
			text align center center
			text color H
			}
		}
		column 
		{
			width 5
			label
			{
			area 0 0 -1 -1
			}
		}
		column 
		{ 
			width 30
			label
			{
				area 0 0 -1 -1
				text lua "t( command[rowNumber][1])"
				text style	"normal"
				text color C
				text align center center
				text point 12
				text useFontZoom 0
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				text align 	center center
				frame		lua "command[rowNumber][4]"
			}
		}

		area 732 248 245 122
		name "commandToggle"
		rowheight	41
		table		"command"
		var		commandSel
		hidehighlight

		action		
		"
			panelID = 7
			helpString = 18016 
			if(cellNumber == 5) then
				command[1][4] = 0
				command[2][4] = 0
				command[3][4] = 0
				command[commandSel][4] = 2
			end
		"
	}

	list
	{
		column
		{
			width 10
			label
			{
			area 0 0 -1 -1
			}
		}
		column
		{
			width 40
			label
			{
			area 0 0 -1 -1
			text lua "t(selectView[rowNumber][1])"
			text style "title"
			text style "button"
			text align center center
			text useFontZoom 0
			text color H
			}
		}
		column 
		{
			width 5
			label
			{
			area 0 0 -1 -1
			}
		}
		column 
		{ 
			width 30
			label
			{
				area 0 0 -1 -1

			}
		}
		column 
		{ 
			width 15
			label
			{
				area		0 0 -1 -1
			}
		}

		area 732 370 245 122
		name "selectiontitle"
		rowheight	41
		table		"selectView"
		var		selectionsView
		hidehighlight
	}
	list
	{
		column
		{
			width 10
			label
			{
			area 0 0 -1 -1
			}
		}
		column
		{
			width 40
			label
			{
			area 0 0 -1 -1
			}
		}
		column
		{
			width 5
			label
			{
			area 0 0 -1 -1
			}
		}
		
		column 
		{ 
			width 30
			label
			{
				area 0 0 -1 -1
				text lua "t( selectOpt[rowNumber][1])"
				text style	"normal"
				text color C
				text align center center
				text point 12
				text useFontZoom 0
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				align 		center center
				frame		lua "selectOpt[rowNumber][4]"
			}
		}

		area 732 370 245 122
		name "selectionToggle"
		rowheight	41
		table		"selectOpt"
		var		selectSel
		hidehighlight
		action		
		"
			panelID = 7
			helpString = 11352 
			if(cellNumber == 5) then
				selectOpt[1][4] = 0
				selectOpt[2][4] = 0
				selectOpt[3][4] = 0
				selectedSoundOpt = 0
				selectOpt[selectSel][4] = 2
			end
		"
	}
	
	label -- label for feedback
	{
	name "rightlabel"
	area 995 64 345 660
	rectangle 4
	rectangle opacity 150
	}

	label
	{
		name "feedbacktitle"
		area		1015 238 309 19
		text		"FEEDBACK_MESSAGES_LABEL"
		text style	"title"
		text color H
		--text upper
		text align 	center center
	}
	list
	{
		
		column 
		{ 
			width 30 
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				align 		center center
				frame		lua "messagesToggles[rowNumber][4]"
			}
		}		
		column 
		{ 
			width 70
			label
			{
				area 5 0 -1 -1
				text lua "t( messagesToggles[rowNumber][1])"
				text style "normal"
				text point 11
				text useFontZoom 0
				text align left center
			}
		}


		name "messageToggle"
		area 1015 268 102 88
		rowheight	41
		table		"messagesToggles"
		var		selFeedOpt
		hidehighlight

		action		
		"
			helpString = messagesToggles[selFeedOpt][2]

			if(cellNumber == 1) then
				messagesToggles[selFeedOpt][4] = toggleFrame(messagesToggles[selFeedOpt][4])

				if messagesToggles[selFeedOpt][4] == 0 then
					messagesToggles[selFeedOpt][5] = 0
				else 
					messagesToggles[selFeedOpt][5] = 1
				end
			end
		"
	}
	list
	{
		
		column 
		{ 
			width 30 
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				align 		center center
				frame		lua "messagesToggles1[rowNumber][4]"
			}
		}		
		column 
		{ 
			width 70
			label
			{
				area 5 0 -1 -1
				text lua "t( messagesToggles1[rowNumber][1])"
				text style "normal"
				text point 11
				text useFontZoom 0
				text align left center
			}
		}


		name "messageToggle1"
		area 1118 268 102 88
		rowheight	41
		table		"messagesToggles1"
		var		selFeedOpt1
		hidehighlight

		action		
		"
			helpString = messagesToggles1[selFeedOpt1][2]

			if(cellNumber == 1) then
				messagesToggles1[selFeedOpt1][4] = toggleFrame(messagesToggles1[selFeedOpt1][4])

				if messagesToggles1[selFeedOpt1][4] == 0 then
					messagesToggles1[selFeedOpt1][5] = 0
				else 
					messagesToggles1[selFeedOpt1][5] = 1
				end
			end
		"
	}
	list
	{
		
		column 
		{ 
			width 30
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				align 		center center 
				frame		lua "feedbackToggles[rowNumber][4]"
			}
		}		
		column 
		{ 
			width 70
			label
			{
				area 5 0 -1 -1
				text lua "t( feedbackToggles[rowNumber][1])"
				text style "normal"
				text point 11
				text useFontZoom 0
				text align left center
			}
		}

		name "feedbackToggle"
		area 1221 268 102 88
		rowheight	41
		table		"feedbackToggles"
		var		selFeedOpt2
		hidehighlight

		action		
		"
			helpString = feedbackToggles[selFeedOpt2][2]

			if(cellNumber == 1) then
				feedbackToggles[selFeedOpt2][4] = toggleFrame(feedbackToggles[selFeedOpt2][4])

				if feedbackToggles[selFeedOpt2][4] == 0 then
					feedbackToggles[selFeedOpt2][5] = 0
				else 
					feedbackToggles[selFeedOpt2][5] = 1
				end
			end
		"
	}

	label
	{
		name "aptitle"
		area 142 437 252 19
		text "AUTO_PAUSE_TITLE"
		text style "title"
		--text color 255 183 0 255
	}	
	list
	{
		column
		{
			width 70
			label
			{
				--enabled "rowNumber > 1"
				area 0 0 -1 -1
				text lua "t(characterPauseToggles[rowNumber][1])"
				text style "label"
				text color R
				text point 11
				text align right center
				text useFontZoom 0
			}
		}
		column
		{
			width 30
			label
			{
				--enabled "rowNumber > 1"
				area 0 4 -1 -1
				bam ROUNDBUT
				align center center
				frame lua "characterPauseToggles[rowNumber][4]"
			}
		}
		
		name "aplistr"
		area 269 464 130 245
		rowheight 41
		hidehighlight
		table "characterPauseToggles"
		var selOptAPC

		action
		"
			helpString = characterPauseToggles[selOptAPC][2]

			if(cellNumber == 2) then
				characterPauseToggles[selOptAPC][4] = toggleFrame(characterPauseToggles[selOptAPC][4])
				if characterPauseToggles[selOptAPC][4] == 0 then
					characterPauseToggles[selOptAPC][5] = 0
				else
					characterPauseToggles[selOptAPC][5] = 1
				end
			end
		"
	}
	list
	{
		column 
		{ 
			width 30 
			label
			{
				area		0 4 -1 -1
				bam			ROUNDBUT
				align 		center center
				frame lua "autoPauseToggles[rowNumber][4]"
			}
		}
		column 
		{ 
			width 70 
			label
			{
				area 0 0 -1 -1
				text lua "t( autoPauseToggles[rowNumber][1])"
				text style "label"
				text color R
				text point 11
				text useFontZoom 0
				text align left center
			}
		}

		name "aplistl"
		area 142 464 130 245
		hidehighlight
		rowheight	41
		table		"autoPauseToggles"
		var		selOptAP
		

		action		
		"
			selOptAPC = 0
			helpString = autoPauseToggles[selOptAP][2]

			if(cellNumber == 1) then

				autoPauseToggles[selOptAP][4] = toggleFrame(autoPauseToggles[selOptAP][4])

				if autoPauseToggles[selOptAP][4] == 0 then
					autoPauseToggles[selOptAP][5] = 0
				else 
					autoPauseToggles[selOptAP][5] = 1
				end
			end
		"
	}	
	
	label
	{
		name "desclabel"
		area 423 518 571 153
		rectangle 4
		rectangle opacity 150
	}	
	text
	{
		name "desctext" 
		area		438 535 532 115
		pad 5 0 0 0
		--text		lua "t(helpString)"
		text		lua "getStringFromAmbiguousSource(helpString)"
		--text		lua "Infinity_FetchString(helpString)"
		text style	normal
		text point	13
		scrollbar	'GUISCRC'
	}	
		
	text 
	{
		name "markertitle"
		area		1007 92 153 28
		text		"MARKER_FEEDBACK_LABEL"
		text style "button"
		text align	right center
		text color S
		text point 12
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
		"
		
	}
	slider
	{
		name "markersldr"
		area		1169 92 153 28
		position "markerFeedSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	6
		pad 5 0 5 0
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
		"
	}
	text
	{
		name "locatortitle"
		area		1007 130 153 28	
		text		"LOCATOR_FEEDBACK_LABEL"
		text style "button"
		text align	right center
		text point 12
		text color S
		--text highlight lua "getSelected(selectedSL, 2)"
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP' 
		"
	}
	slider
	{
		name "locatorsldr"
		area 1169 130 153 28
		position "locatorFeedSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 5 0 5 0
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP' 
		"
	}	
	text
	{
		name "fonttitle"
		area		1007 483 153 28
		text		"FONT_SIZE_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color G
		text useFontZoom 1 
		action 
		"
			helpString = 17204 
		"
	}
	slider
	{
		name "fontsldr"
		area 1169 483 153 28
		position "fontSizeSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	7
		pad 4 0 4 0
		action
		"
			Infinity_ChangeOption( 22, fontSizeSLDR, 6)
			helpString = 17204 
		"
	}
	text
	{
		name "tooltiptitle"
		area		1007 445 153 28
		text		"TOOLTIP_DELAY_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color G
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION'
		" 
	}
	slider
	{
		name "tooltipsldr"
		area 1169 445 153 28
		position "ttDelaySLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
		" 
	}
	text
	{
		name "ambtitle"
		area		1007 560 153 28
		text		"AMBIENT_VOLUME_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color C
		action 
		"
			helpString = 18008 
		"
	}	
	slider
	{
		name "ambsldr"
		area 1169 560 153 28
		position "ambientSLDR"
		sliderBackground 'guisldrs'
		scaleToClip
		bam	 'SLDRSTAR'
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18008 
		"
	}
	text
	{
		name "sofxtitle"
		area		1007 599 153 28	
		text		"SFX_VOLUME_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color C
		action 
		"
			helpString = 18009 
		"
		
	}	
	slider
	{
		name "sofxsldr"
		area 1169 599 153 28
		sliderBackground 'guisldrs'
		scaleToClip
		bam 'SLDRSTAR'
		position "sfxSLDR"
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18009 
		"
	}
	text
	{
		name "voicestitle"
		area		1007 637 153 28	
		text		"VOICE_VOLUME_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color C
		action 
		"
			helpString = 18010 
		"
	}	
	slider
	{
		name "voicessldr"
		area 1169 637 153 28
		position "voiceSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action  
		"
			helpString = 18010 
		"
	}
	text
	{
		name "musicvtitle"
		area		1007 675 153 28	
		text		"MUSIC_VOLUME_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color C
		action 
		"
			helpString = 18011 
		"
		
	}	
	slider
	{
		name "musicvsldr"
		area 1169 675 153 28
		position "musicSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18011 
		"
	}	
	text
	{
		name "cutscenetitle"
		area		1007 522 153 28	
		text		"MOVIE_VOLUME_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color C
		action 
		"
			helpString = 18012
		"
	}	
	slider
	{
		name "cutscenesldr"
		area 1169 522 153 28
		position "movieSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18012
		"
	}	
	text
	{
		name "keybscrltitle"
		area		1007 407 153 28	
		text		"KEYBOARD_SCRLSPEED_LABEL"
		text style	"button"
		text align	right center
		text color G
		text point 12
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
		" 
	}	
	slider
	{
		name "keybscrlsldr"
		area 1169 407 153 28
		position "keyboardSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		--sequence 0
		--frame	 1
		settings	40
		--pad 4 0 4 0
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
		" 
	}
	text
	{
		name "mouscrltitle"
		area		1007 368 153 28	
		text		"MOUSE_SCRLSPEED_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color G
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
		" 
	}	
	slider
	{
		name "mouscrlsldr"
		area 1169 368 153 28
		position "mouseSLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		--sequence 0
		--frame	 1
		settings	40
		--pad 4 0 4 0
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
		" 
	}

	text
	{
		name "difftitle"
		area		1007 168 153 28
		text		"DIFFICULTY_LABEL"
		text style	"button"
		text align	right center
		text point 12
		text color S
		enabled "Infinity_GetOption(59, 8) == 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
		" 
	}	
	slider
	{
		name "diffsldr"
		area 1169 168 153 28
		position "difficultySLDR"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 4 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and optListOnOff(toggleTitles, 65) == false"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
		" 
	}
	label
	{
		name "editdifftitle"
		area		1169 199 153 28	
		text		lua "getDifficulty(difficultySLDR)"
		text style	"button"
		text color S
		text point 12
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and optListOnOff(toggleTitles, 65) == false"
	}	
	text
	{
		name "replacdifftitle"
		area		1007 184 316 28
		text		lua "getDifficulty(5)"
		text style	"button"
		text color S
		text point 14
		text useFontZoom 0
		text align	center center
		enabled "Infinity_GetOption(59, 8) ~= 0"
		action "helpString = 'DIFF_DESC_LOB'"
	}
	--fakes for story mode
	slider
	{
		name "fakediffsldr"
		area 1169 168 153 28
		position "0"
		bam	 'SLDRSTAR'
		sliderBackground 'guisldrs'
		scaleToClip
		sequence 0
		frame	 1
		settings	5
		pad 4 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and optListOnOff(toggleTitles, 65) == true"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
		" 
	}	
	label
	{
		name "storydifftitle"
		area		1169 199 153 28	
		text		lua "getDifficulty(0)"
		text style	"button"
		text point 12
		text color S
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and optListOnOff(toggleTitles, 65) == true"
	}	
	label
	{
		name "storydiffcover"
		area 1169 168 153 28
		enabled "Infinity_GetOption(59, 8) == 0 and optListOnOff(toggleTitles, 65) == true"
		rectangle 0
		rectangle opacity 150	
	}
	
	button
	{
		name "langbutton"
		bam			guichmid
		scaleToClip
		sequence	1
		area		426 691 139 44
		text		"LANGUAGE_BUTTON"
		text style	"button"
		enabled "not e:IsTouchUI()"
		action
		"
			--optionsScreen:SetEngineState(1)
			--startEngine:OnOptionsButtonClick()
			Infinity_PushMenu( 'OPTIONS_LANGUAGE' )
		"
	}
	
	button
	{
		name "assignkey"
		bam			guichmid
		scaleToClip
		sequence	0
		area		567 691 139 44
		text		"ASSIGN_KEYS_BUTTON"
		text style	"button"
		enabled "not e:IsTouchUI()"
		action
		"
			Infinity_PushMenu( 'OPTIONS_KEYBINDINGS' );
		"
	}

	label
    {
    area 0 0 50 50
    on escape
    action --exit menu on escape
    "
        if e:GetActiveEngine() == worldScreen then
			Infinity_PopMenu('OPTIONS_GAMEPLAY')
        else
            Infinity_PopMenu('OPTIONS_GAMEPLAY')
            startEngine:SetEngineState(0)
            e:SelectEngine(startEngine)
        end
    "
    }
	
	button
	{
		name "cutscenebutton"
		bam			guichmid
		scaleToClip
		sequence	3
		area		849 691 139 44
		text		"CUTSCENE_BUTTON"
		text style	"button"
		enabled "not e:IsTouchUI()"
		action
		"
		    e:SelectEngine(moviesScreen)
			Infinity_ChangeOption( 22, movieSLDR, 7)
		"
	}
	button
	{
		name "donebutton"
		area 708 691 139 44
		bam 'guichmid'
		scaleToClip
		sequence 2
		text 		"DONE_BUTTON" -- settings done
		text style	"button"
		action
		"
			if e:GetActiveEngine() == worldScreen then
				setNoEscMenu = 1
				e:SelectEngine(optionsScreen)
			end
		
			panelID = 8
			selectedOpt = 0
			selectedSL = 0
			selectedGraphicOpt = 0
			selectedsoundOpt = 0
			commandSel = 0
			selectSel = 0
			selOptAPC = 0
			selOptAP = 0
			selFeedOpt = 0
			selFeedOpt1 = 0
			selFeedOpt2 = 0

			
			
			--gameplay sldrs
			Infinity_ChangeOption( 12, difficultySLDR + 1, panelID) -- cannot set story mode through slider
			Infinity_ChangeOption( 8, markerFeedSLDR, 9)
			Infinity_ChangeOption( 9, locatorFeedSLDR, 9 )
			--display sldrs
			Infinity_ChangeOption( 1, ttDelaySLDR, panelID)
			Infinity_ChangeOption( 3, keyboardSLDR, panelID )
			Infinity_ChangeOption( 2, mouseSLDR, panelID )
			Infinity_ChangeOption( 22, fontSizeSLDR, 6)
			--sound sldrs
				
			if Infinity_GetINIValue('Y5 Options','setNoAmbience') == 1 then
				setAmbienceAmt = ambientSLDR
				Infinity_SetINIValue('Y5 Options','setAmbienceAmount',setAmbienceAmt)
				ambientSLDR = 0
			end
			
			Infinity_ChangeOption( 1, ambientSLDR, 7)
			Infinity_ChangeOption( 2, sfxSLDR, 7 )
			Infinity_ChangeOption( 3, voiceSLDR, 7 )
			Infinity_ChangeOption( 4, musicSLDR, 7)
			Infinity_ChangeOption( 22, movieSLDR, 7)
				
			--gameplay
			for index, var in pairs(toggleTitles) do
				if (var[3] == 'opt_a') then
					if optionQuickLoot == 0 then
						Infinity_SetINIValue('Y5 Options','view QuickLoot','0')
					else
						Infinity_SetINIValue('Y5 Options','view QuickLoot','1')
					end
				elseif (var[3] == 'opt_e') then
					setDeferredOption('Game Options', '3E Thief Sneak Attack', var[5])
				elseif (var[3] == 'opt_ag') then
					setDeferredOption('Y5 Options','view allChat', var[5])
					optionSeeChat3 = var[5]
				elseif (var[3] == 'opt_ab') then
					if optionNoPause == 0 then
						Infinity_SetINIValue('Y5 Options','cancelPause','0')
					else
						Infinity_SetINIValue('Y5 Options','cancelPause','1')
					end
				else
					Infinity_ChangeOption( var[3], var[5], var['panelID'] or 8)
				end
			end
			
			--display
			for index, var in pairs(graphicsToggles) do
				if ( var[6] == 1 ) then
					if (var[3] == 'opt_b') then
						setDeferredOption('Game Options', 'Show AOE', var[5])
					elseif (var[3] == 'opt_c') then
						setDeferredOption('Program Options', 'Debug Mode', var[5])
					elseif (var[3] == 'opt_d') then
						setDeferredOption('Program Options', 'UI Edit Mode', var[5])
					elseif (var[3] == 'opt_f') then
						setDeferredOption('Game Options', 'Critical Hit Screen Shake', var[5])
					elseif (var[3] == 'opt_g') then
						setDeferredOption('Program Options', 'Disable Movies', var[5])
					elseif (var[3] == 'opt_h') then
						setDeferredOption('Game Options', 'Render Search Map', var[5])
					elseif (var[3] == 'opt_i') then
						setDeferredOption('Game Options', 'Render Dynamic Search Map', var[5])
					elseif (var[3] == 'opt_aq') then
						setDeferredOption('Game Options', 'Show Triggers On Tab', var[5])
					elseif (var[3] == 'opt_ac') then
						setDeferredOption('Y5 Options','view LuaConsole', var[5])
						optionSeeLua = var[5]
					elseif (var[3] == 'opt_ad') then
						setDeferredOption('Program Options', 'Strref On', var[5])
					elseif (var[3] == 'opt_ae') then
						setDeferredOption('Game Options', 'Combat UI', var[5])
					elseif (var[3] == 'opt_af') then
						setDeferredOption('Y5 Options','Function Binds', var[5])
					elseif (var[3] == 'opt_ah') then
						setDeferredOption('Y5 Options','Disable Maps', var[5])
					else				
						Infinity_ChangeOption( var[3], var[5], var['panelID'] or 6)
					end
				end
			end
				
			--command sound
			for index, var in pairs(command) do
				Infinity_Log('Com var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, 7)
				end
			end
			
			--selections sound
			for index, var in pairs(selectOpt) do
				Infinity_Log('Sel var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, 7)	
				end	
			end

			--character sounds
			for index, var in pairs(soundsToggles) do				
				Infinity_ChangeOption( var[3], var[5], 7)						
			end
			
			--autopause
			for index, var in pairs(autoPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], 10)		
			end
			
			for index, var in pairs(characterPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], 10)		
			end
			
			--feedback
			for index, var in pairs(messagesToggles) do
				Infinity_ChangeOption( var[3], var[5], 9)		
			end
			
			for index, var in pairs(messagesToggles1) do
				Infinity_ChangeOption( var[3], var[5], 9)		
			end

			for index, var in pairs(feedbackToggles) do
				Infinity_ChangeOption( var[3], var[5], 9)		
			end

			
			removeDeferredOptions()
			
			local targetKey = Infinity_GetINIValue('Y5 Options','eval mapKey') 
			
			if Infinity_GetINIValue('Y5 Options','Disable Maps') == 1 then
				if keybindings[1][5][6] ~= 0 then
					keyCategory = 1
					key = 5
					setKey(0)
				end
			else
				if keybindings[1][5][6] ~= targetKey then
					keyCategory = 1
					key = 5
					setKey(targetKey)
				end
			end
			
			optionSeeLua = Infinity_GetINIValue('Y5 Options','view LuaConsole')
			optionQuickLoot = Infinity_GetINIValue('Y5 Options','view QuickLoot')		
			optionSeeCast = Infinity_GetINIValue('Game Options','Show AOE')
			optionNoPause = Infinity_GetINIValue('Y5 Options','cancelPause')
			optionChat1 = Infinity_GetINIValue('Y5 Options','worldChat Toggle')
			optionChat2 = Infinity_GetINIValue('Y5 Options','dialogChat Toggle')
			optionChat3 = Infinity_GetINIValue('Y5 Options','allChat Toggle')
			optionSeeChat3 = Infinity_GetINIValue('Y5 Options','view allChat')
			optionF5 = Infinity_GetINIValue('Y5 Options','Function Binds')
			optionChatLua = Infinity_GetINIValue('Y5 Options','luaChat Toggle')
			luaViewed = Infinity_GetINIValue('Y5 Options','lua menuToggle')
			

			if setNoEscMenu == 1 then
				setNoEscMenu = 0
				Infinity_PopMenu('OPTIONS_GAMEPLAY')
				e:SelectEngine(worldScreen)
				getMBWSize()
				getRSidebarSize()
				getMPCSize()
			else
				Infinity_PopMenu('OPTIONS_GAMEPLAY')
				startEngine:SetEngineState(0)
				e:SelectEngine(startEngine)
				getMenuPanelArea()
				getMPCSize()
			end
			
			
		"
	}

}
-- next menus here just so engine doesn't act weird
menu
{
	name	'OPTIONS_GRAPHICS'
	label
	{
	area 0 0 0 0
--	if e:HasDirectX() then
--		appendDirectXOption()
--	end
--	panelID = 6
--	helpString = 18042
--	selectedGraphicOpt = 0
	}
}	
menu
{
	name	'OPTIONS_AUTOPAUSE'
	label
	{
	area 0 0 0 0
--	panelID = 10
--	selOptAP = 0
--	autopauseString = 18044
	}
}		
menu
{
	name	'OPTIONS_SOUND'
	label
	{
	area 0 0 0 0
--	panelID = 8
--	helpString = 18042
--	selectedsoundOpt = 0
	}
}
menu
{
	name	'OPTIONS_FEEDBACK'
	label
	{
	area 0 0 0 0
--	panelID = 9
--	helpString = 'FEEDBACK_HELP'
--	selFeedOpt = 0
--	selMessageOpt = 0
	}
}
-- end menus
`
function getGooglePlaySignInText()
	if(Infinity_GooglePlaySignedIn() == 1) then
		return t("SIGN_OUT_BUTTON")
	else
		return t("SIGN_IN_BUTTON")
	end
end

keyCategory = 1
key = 0

function displayHelp()
	if not (key == 0) then
		return 102621
	end
	return 0
end

function formatKeyCode(number)
	local ret = ""

	if number < 127 and number > 32 then
		return string.format('%c', keybindings[keyCategory][rowNumber][6])
	end
	ret = t("SDL_" .. string.format('%d', keybindings[keyCategory][rowNumber][6]))
 
	return ret
end

function getHotkeyName(category,number)
	local ret = ""
	if category < 5 then
		ret = t(keybindings[category][number][4])
		if ret == keybindings[category][number][4] then
			ret = Infinity_FetchString(keybindings[category][number][4])
		end
	else
		ret = Infinity_FetchString(keybindings[category][number][4])
	end
	return ret
end
`
menu
{
	name	'OPTIONS_KEYBINDINGS' --keybindings menu, keybind menu
	modal
	align center center
	onOpen
	"
		local targetKey = Infinity_GetINIValue('Y5 Options','eval mapKey')
		if keybindings[1][5][6] ~= targetKey then
			keyCategory = 1
			key = 5
			setKey(targetKey)
		end
	"
	onClose
	"	
		local targetKey = Infinity_GetINIValue('Y5 Options','eval mapKey')
		if keybindings[1][5][6] ~= targetKey then
			Infinity_SetINIValue('Y5 Options','eval mapKey',keybindings[1][5][6])
		end
	"
	
	button -- Background
	{
		area 0 0 864 710
		mosaic GUICHISD 
	}
	
	label -- Title
	{
		area 82 12 700 40
		text  "ASSIGN_KEYS_TITLE" 
		text style	"title"
	}
	
	label -- Instruction
	{
		area 252 60 367 42
		text  "ASSIGN_KEYS_SUBTITLE" 
		text style	"label"
	}
	label -- Contextual instruction
	{
		area 42 112 778 50
		text lua "Infinity_FetchString(displayHelp())"
		text style	"label"
	}

	list -- Key categories
	{
		column 
		{ 
			width 100 
			label
			{
				area 0 0 -1 -1
				text lua "t(keycategories[rowNumber][2])"
				text style	"normal"
				text align	center center 
			}
		}
		area 42 190 360 420
		
		rowheight	24
		table		"keycategories"
		var			keyCategory
		scrollbar	'GUISCRC'
		action
		"
			Infinity_StopKeybind()
			key = 0
		"
	}

	
	list -- Key bindings
	{
		column 
		{ 
			width 90 
			label
			{
				area 0 0 -1 -1
				text lua "getHotkeyName(keyCategory,rowNumber)"
				text style	"normal"
				align left center
			}
		}
		column 
		{ 
			width 10
			label
			{
				area 0 0 -1 -1
				text lua "formatKeyCode(keybindings[keyCategory][rowNumber][6])"
				text style	"normal"
				text upper
				text align right center 
			}
		}
		
		area 448 190 372 420
		rowheight	24
		table		"keybindings[keyCategory]"
		var			key
		scrollbar	'GUISCRC'
		action
		"
		if(key > 0) then
			Infinity_StartKeybind(key);
			keybindings[keyCategory][key][6] = 0
		end
		"
	}
	
	button
	{
		area 464 654 236 44
		bam 'GUIOSTUR'
		sequence 0
		text		"DONE_BUTTON"
		text style	"button"
		action
		"
			Infinity_StopKeybind()
			key = 0
			Infinity_PopMenu();
		"	
	}

}
`
creditspage = 1
function GetCreditsTitle()
	return creditspage .. ' / ' .. #credits
end
`
menu
{
	name	'CREDITS'
	align center center
	
	label
	{
		area 0 0 1024 768
		mosaic GUISMBM
	}
	
	label
	{
		area 114 18 794 36
		text lua "GetCreditsTitle()"
		text style "title"
	}
	
	text
	{
		area 114 64 794 632
		text lua "Infinity_FetchString(credits[creditspage])"
		scrollbar	'GUISCRC'
		scrollbar func "resetScrollbar"
		text style "normal"
		text align center top
	}
	
	button
	{
		area		616 716 234 44
		bam			GUIOSTUR
		sequence	6
		text		"NEXT_BUTTON"
		text style "button"
		
		action
		"
			scrollbarReset = 1
			creditspage = creditspage + 1;
			if credits[creditspage] == nil then creditspage = 1 end
		"	
	}
	button
	{
		area		178 716 234 44
		bam			GUIOSTUL
		sequence	6
		text		"BACK_BUTTON"
		text style "button"
		
		action
		"
			scrollbarReset = 1
			creditspage = creditspage - 1;
			if credits[creditspage] == nil then creditspage = #credits end
		"	
	}
	
	button
	{
		area		412 716 204 44
		bam			GUIOSTUM
		sequence	6
		text  "DONE_BUTTON"
		text style "button"
		
		action
		"
			Infinity_PopMenu();
		"	
	}
}

`
language = 0
showsubtitles = 0
function languageDetails()
	if languages[language] ~= nil then
		return Infinity_FetchString(languages[language][2]) .. '\n'  .. Infinity_FetchString(languages[language][3])
	else
		return ""
	end
end
function findCurrentLanguage()
	local lang = Infinity_GetINIString('Language', 'Text', '')
	for k,v in pairs(languages) do
		if v[1] == lang then
			language = k
		end
	end
end
`
menu
{
	name	'OPTIONS_LANGUAGE'
	modal
	align center center
	onOpen
	"
		showsubtitles = Infinity_GetINIValue('Program Options', 'Display Subtitles', 1)
		findCurrentLanguage()
	"
	
	 button
	 {
		 area		0 0 1024 768
		 mosaic		'GUICREDT'
	 }
	
	label
	{
		area 92 10 840 44
		text "LANGUAGE_TITLE"
		text style "title"
	}

	list
	{
		column { 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "languages[rowNumber][4]"
				text style	"normal"
				text align center center 
			}
		}
	
		area		86 138 228 466
		rowheight	24
		table		"languages"
		var			language
		scrollbar	'GUISCRC'
	}
	label
	{
		area 326 138 610 508
		fill 112 111 111 64
	}
	text
	{
		area		326 138 610 508
		text lua	"languageDetails()"
		text style	normal
		text align	center top
		scrollbar	'GUISCRC'
	}
	
	label
	{
		area		86 614 170 34
		text	"SHOW_SUBTITLES_LABEL"
		text style	"label"
		text align	right center
		text upper
	}
	label
	{
		area		86 654 850 42
		text 	 	"LANG_PROMPT"
		text style	"normal"
		text align	center center
		text upper
	}
	label
	{
		area		120 58 784 72
		text  		"LANG_DESC"
		text style	"normal"
		text align	center center
		text color 	'$'
	}
	
	button
	{
		area		282 614 32 32
		bam			ROUNDBUT
		toggle		showsubtitles
	}
	
	button
	{
		area 278 714 236 44
		on escape
		bam 'GUIOSTUL'
		sequence 0
		text	"CANCEL_BUTTON"
		text style	"button"
		action
		"
			-- cancel
			for index, var in pairs(languages) do
				Infinity_Log(var[3])
			end
			Infinity_PopMenu('OPTIONS_LANGUAGE')
			--startEngine:SetEngineState(0)
			--e:SelectEngine(startEngine)
		"
	}
	
	button
	{
		area 532 714 236 44
		bam 'GUIOSTUR'
		sequence 0
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			-- done
			Infinity_SetLanguage(languages[language][1],showsubtitles)
			Infinity_PopMenu('OPTIONS_LANGUAGE')
			--startEngine:SetEngineState(0)
			--e:SelectEngine(startEngine)
		"
	}
	
}
`
function restoreOverlayFromQuit()
	--restore the old overlay if applicable
	if(oldOverlayMenuName) then
		Infinity_SetOverlay(oldOverlayMenuName)
	else
		Infinity_SetOverlay(nil)
	end
end
`
menu
{
	name 'QuitMenu'
	modal
	align center center
	label -- Background
	{
		area 0 0 682 234
		mosaic GUIERR6 
	}
	label --Title
	{
		area 36 24 600 120
		text  20186
		text style	"label"
	}
	button
	{
		area		88 170 234 44
		bam			GUIOSTUL
		sequence	0
		text  "QUIT_GAME_BUTTON"
		text style	"button"
		on 			return
		action
		"
			restoreOverlayFromQuit()
			Infinity_ShutdownGame()
		"	
	}
	button
	{
		area		370 170 234 44
		bam			GUIOSTUR
		sequence	0
		text  "CANCEL_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			restoreOverlayFromQuit()
			Infinity_PopMenu('QuitMenu')
		"	
	}
}

`
selectedSlot = nil
itemRequestAmt = 0

function showItemAmountRequester(slotName)
	local slot = characters[id].equipment[slotName]
	if(slot.item.count == nil) then
		Infinity_Log("Nil count in requester!")
		return
	end
	if(slot.item.count > 1) then
		selectedSlot = slotName
		popupRequester(slot.item.count, inventorySplitStack, false)
	end
end
function inventorySplitStack(cnt)
	Infinity_SplitItemStack(characters[id].equipment[selectedSlot].id, cnt,'slot_inv_' .. characters[id].equipment[selectedSlot].id)
end

function GetAbilityIdentifyString()
	if(characters[id].equipment[selectedSlot].item.identified == 0) then
		return t("IDENTIFY_BUTTON")
	end
	
	if(characters[id].equipment[selectedSlot].abilityMode == 1) then
		return t("ABILITIES_BUTTON")
	end
	
	return ""
end
requester = {}
requester.requesterMax = 0
requester.requesterFunc = nil
requester.selling = false
`
menu
{
	name 'POPUP_REQUESTER'
	align center center
	modal
	onOpen
	"
		if requester.selling == false then
			itemRequestAmt = 1
		else
			itemRequestAmt = requester.requesterMax
		end
	"
	
	label
	{
		area 0 0 465 500
		mosaic GUIERR
	}
	label
	{
		area	102 116 208 47
		text	"CHOOSE_AMT_LABEL"
		text align center center
		text style "label"
	}
	edit
	{
		area		156 216 86 48
		var			itemRequestAmt
		text style	"edit"
		align center center
		maxlines	1
		action
		"
			-- only permit numbers as letters.
			-- character limit of 4
			if((tonumber(letter_pressed) ~= nil and #tostring(itemRequestAmt) < 4) or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		bam			GUIOSTUM
		sequence	6
		area		102 318 201 43
		text  "CANCEL_BUTTON"
		text style	"button"
		action
		"
			Infinity_PopMenu()
		"
	}	
	button
	{
		bam			GUIOSTCL
		sequence	6
		area		52 264 299 45
		text  "DONE_BUTTON"
		text style	"button"
		on return
		action
		"
			local cnt = tonumber(itemRequestAmt)
			Infinity_PopMenu()
			if(cnt and cnt > 0 and cnt <= requester.requesterMax) then
				requester.requesterFunc(cnt)
			end
		"
	}

	button
	{
		bam GUIOSW
		area 248 220 44 44
		sequence 0
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
			end
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
			end
		"
	}
	button
	{
		bam GUIOSW
		area 296 220 44 44
		sequence 1
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
			end
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
			end
		"
	}
}
`
selectedAbility = -1
function initAbilities()
	--initialize selected ability
	local i = 1
	while ( i < 4 ) do
		local ability = characters[id].equipment[selectedSlot].abilities[i]
		if(ability ~= nil) then
			if(ability.selected == 1) then
				selectedAbility = i
				return
			end
		end
		i = i + 1
	end
end
`
menu
{
	name 'ITEM_ABILITIES'
	align center center
	onOpen "initAbilities()"
	
	label
	{
		area	0 0 864 710
		mosaic	GUIMGX
	}
	label
	{
		area 73 12 725 44
		text "ITEM_ABILITIES_TITLE"
		text style	"title"
	}
	text
	{
		area 180 202 496 52
		text highlight lua "selectedAbility == 1"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[1].text"
		text style	"label"
		action "selectedAbility = 1"
	}
	button
	{
		area 180 202 52 52
		bam "STONSLOT"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[1].icon"
		action "selectedAbility = 1"
	}

	
	text
	{
		area 180 266 496 52
		text highlight lua "selectedAbility == 2"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[2].text"
		text style	"label"
		action "selectedAbility = 2"
	}
	button
	{
		area 180 266 52 52
		bam "STONSLOT"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[2].icon"
		action "selectedAbility = 2"
	}

	text
	{
		area 180 330 496 52
		text highlight lua "selectedAbility == 3"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[3].text"
		text style	"label"
		action "selectedAbility = 3"
	}
	button
	{
		area 180 330 52 52
		bam "STONSLOT"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[3].icon"
		action "selectedAbility = 3"
	}
	
	label
	{
		area 268 552 344 128
		text 11322
		text style "label"
	}
	
	button
	{
		area 572 636 232 44
		bam			GUIOSTUR
		text "DONE_BUTTON"
		text style "button"
		action
		"
			local itemNum = characters[id].equipment[selectedSlot].abilities[selectedAbility].itemNum
			Infinity_SelectItemAbility(selectedAbility - 1, itemNum, characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
		"
	}
	
	button
	{
		area 54 636 232 44
		bam			GUIOSTUL
		text "CANCEL_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu()
		"
	}

}
`
TEXT_popup_info = 0
`
menu
{
	name 'POPUP_INFO' --misc popup info
	align center center
	modal

	label
	{
		area 0 0 408 418
		mosaic GUIERR
	}
	label
	{
		area 70 78 258 84
		text lua "getStringFromAmbiguousSource(TEXT_popup_info)"
		text style	"label"
	}
	button
	{
		area 104 318 200 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'POPUP_TWOBUTTON'
	align center center
	modal
	onOpen
	"
	if Infinity_IsMenuOnStack('STORE_ROOMS') then
		Popup2Button.okFunc()
		Infinity_PopMenu('POPUP_TWOBUTTON')
	end
	"
	
	label
	{
		area 0 0 406 415
		mosaic 'GUIERR'

	}
	label
	{
		area 70 86 264 76
		text lua "getStringFromAmbiguousSource(Popup2Button.info)"
		text style	"label"
		text align center center
	}
	button
	{
		area 52 218 302 44
		bam GUIOSTCL
		align center center
		text lua "t(Popup2Button.cancelText or 'CANCEL_BUTTON')"
		text style	"button"
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.cancelFunc) then
				Popup2Button.cancelFunc()
			end
		"
	}
	button
	{
		area 52 266 302 44
		bam GUIOSTCL
		align center center
		text style	"button"
		text lua "t(Popup2Button.okText or 'DONE_BUTTON')"
		on backspace
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.okFunc) then
				Popup2Button.okFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_THREEBUTTON'
	align center center
	modal
	label
	{
		area 0 0 406 415
		mosaic 'GUIERR'

	}
	label
	{
		area 74 68 254 94
		text lua "getStringFromAmbiguousSource(Popup3Button.info)"
		text style	"label"
		text align center center
	}
	button
	{
		area 52 218 308 44
		bam GUIOSTCL
		align center center
		text lua "t(Popup3Button.rightText)"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.rightFunc) then
				Popup3Button.rightFunc()
			end
		"
	}
	button
	{
		area 52 266 308 44
		bam GUIOSTCL
		align center center
		text style	"button"
		text lua "t(Popup3Button.midText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.midFunc) then
				Popup3Button.midFunc()
			end
		"
	}
	button
	{
		area 103 320 200 44
		bam GUIOSTLM
		align center center
		text style	"button"
		text lua "t(Popup3Button.leftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.leftFunc) then
				Popup3Button.leftFunc()
			end
		"
	}
}
`
function forceAmbience()
	Infinity_SetINIValue('Y5 Options','setNoAmbience',0)
	ambientSLDR = Infinity_GetINIValue('Y5 Options','setAmbienceAmount')
	setNoEscMenu = 1
	e:SelectEngine(optionsScreen)
	Infinity_ChangeOption( 1, ambientSLDR, 7)
	setNoEscMenu = 0
end
`
menu
{
	name 'POPUP_FOURBUTTON' -- exit menu options
	align center center
	modal
	label
	{
		area 0 0 900 234
		mosaic GUIERR7
	}
	label
	{
		area 55 21 789 126
		text lua "getStringFromAmbiguousSource(Popup4Button.info)"
		text style	"label"
		text align center center
	}
	button
	{
		area 656 170 204 44
		bam		GUIOSTLM
		text lua "t(Popup4Button.farRightText)"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farRightFunc) then
				Popup4Button.farRightFunc()
			end
		"
	}
	button
	{
		area 448 170 204 44
		bam		GUIOSTLM
		text style	"button"
		text lua "t(Popup4Button.rightText)"
		action 
		"
			Infinity_PopMenu()
			Infinity_SetINIValue('Y5 Options','AI Enabled',aiButtonToggle)
			forceAmbience()
			if (Popup4Button.rightFunc) then
				Popup4Button.rightFunc()
			end
		"
	}
	button
	{
		area 242 170 204 44
		bam		GUIOSTLM
		text style	"button"
		text lua "t(Popup4Button.leftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.leftFunc) then
				Popup4Button.leftFunc()
			end
		"
	}
	button
	{
		area 38 170 204 44
		bam		GUIOSTLM
		text style	"button"
		text lua "t(Popup4Button.farLeftText)"
		action
		"
			Infinity_PopMenu()
			if (Popup4Button.farLeftFunc) then
				Popup4Button.farLeftFunc()
			end
		"
	}
}

`
function showItemDescriptionInventory(slotName)
	if(characters[id].equipment[slotName].empty ~= 0) then
		return
	end

	selectedSlot = slotName
 
	Infinity_CheckItemIdentify(characters[id].equipment[slotName].id)
	showItemDescription(characters[id].equipment[slotName], 0)
end

itemDesc = {}
function showItemDescription(item, mode)
	if (item.item ~= nil) then
		itemDesc = item
	else
		itemDesc.item = item
	end
	itemDesc.mode = mode
	Infinity_PushMenu('ITEM_DESCRIPTION',0,0)
end

function itemDescLeftButtonEnabled()
	if(itemDesc.mode == 0) then
		return itemDesc.item.identified == 0 or itemDesc.abilityMode == 1
								
							
	end
	return 0
end
function itemDescLeftButtonText()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			return t("IDENTIFY_BUTTON") .. ': ' .. t("SPELL_BUTTON")
		end
		return t("ABILITIES_BUTTON")
	end
	return ""
end
function itemDescLeftButtonAction()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			Infinity_OnSpellIdentify(itemDesc.id)
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		else
			Infinity_PushMenu('ITEM_ABILITIES',0,0)
		end
								 
										
					
	end
end

function itemDescRightButtonEnabled()
	if(itemDesc.mode == 0) then
		return itemDesc.item.identified == 0 or itemDesc.useMode ~= -1
	 
		  
	end
	return itemDesc.mode == 1 and itemDesc.item.isBag
end
function itemDescRightButtonText()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			return t("IDENTIFY_BUTTON") .. ': ' .. t("SCROLL_BUTTON")
		end
		return Infinity_GetUseButtonText(itemDesc.id, itemDesc.useMode)
	elseif(itemDesc.mode == 1) then
		return t('OPEN_CONTAINER_BUTTON')
	end
	return ""
end
function itemDescRightButtonAction()
	if(itemDesc.mode == 0) then
		if(itemDesc.item.identified == 0) then
			Infinity_OnScrollIdentify(itemDesc.id)
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		else
			Infinity_PopMenu()
			Infinity_OnUseButtonClick(itemDesc.id, itemDesc.useMode)
		end
	elseif(itemDesc.mode == 1) then
		storeScreen:OpenBag(itemDesc.item.res)
		Infinity_PopMenu()
	end
end
function computeSplitPosition(str, name)
	startPos = -1
	local firstChar = str:len() > 0 and str:byte() or 0
	if firstChar >= 65 and firstChar <= 90 then startPos = 2
	elseif firstChar >= 97 and firstChar <= 122 then startPos = 2
	elseif firstChar == 195 then startPos = 3 end
	splitPos = startPos
	curPos = startPos
	while splitPos ~= -1 do
		local b = str:byte(curPos)
		if b == nil then
			splitPos = curPos
		elseif b >= 240 then
			curPos = curPos + 3
		elseif b >= 224 then
			curPos = curPos + 2
		elseif b >= 194 then
			curPos = curPos + 1
		elseif b == 10 or b == 32 then
			splitPos = curPos
		end
		Infinity_ScaleToText(name)
		local x,y,w,h = Infinity_GetArea(name)
		if h > 50 or curPos > str:len() then break end
		curPos = curPos + 1
	end
end
`
menu
{
	name 'ITEM_DESCRIPTION'
	align center center
	modal
	onOpen
	"
		Infinity_PlaySound('GAM_03')
		computeSplitPosition(itemDesc.item.description, 'itemDescriptionSplit')
	"
	onClose
	"
		Infinity_PlaySound('GAM_04')
	"
	label
	{
		area 0 0 864 710
		mosaic GUIINVHI
	}
	label
	{
		area 81 11 700 44
		text "ITEM_TITLE"
		text style title
	}
	label
	{
		area 95 70 52 52
		bam STONSLOT
		icon lua "itemDesc.item.icon"
	}
	label
	{
		area 282 67 300 50
		text lua "itemDesc.item.name"
		text align center center
		text style "label"
	}
	label
	{
		name "itemDescriptionSplit"
		enabled "false"
		area 0 0 380 -1
		text lua "itemDesc.item.description:sub(startPos, curPos)"
		text style "parchment"
		scrollbar 'GUISBR'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == 1"
				area 0 0 40 38
				bam INITIALS
				sequence lua "itemDesc.item.description:byte(startPos - 1) - 1"
			}
			label
			{
				enabled "rowNumber == 1"
				area 44 0 -1 -1
				text lua "itemDesc.item.description:sub(startPos, splitPos - 1)"
				text style "parchment"
			}
			label
			{
				enabled "rowNumber == 2"
				area 0 0 -1 -1
				text lua "itemDesc.item.description:sub(splitPos + 1)"
				text style "parchment"
			}
		}
		enabled "splitPos ~= -1"
		rowheight dynamic
		hidehighlight
		table "makeTable(2)"
		area 356 185 430 340
		scrollbar 'GUISBR'
	}
	text
	{
		enabled "splitPos == -1"
		area 356 185 430 340
		text lua "itemDesc.item.description"
		scrollbar 'GUISBR'
		text style "parchment"
	}
	text
	{
		area 66 185 280 28
		enabled "itemDesc.item.identified == 0"
		text style "parchment"
		text align center center
		text lua "Infinity_FetchString(17108)"
	}
	label
	{
		area 66 185 280 340
		bam lua "itemDesc.item.descPicture"
		sequence 0
		frame 0
		align center center
	}
	button
	{
		bam			GUIOSTUL
			
		area		57 638 234 44
		enabled "itemDescLeftButtonEnabled()"
		clickable lua "itemDesc.item.identified == 1 or Infinity_GetSpellIdentifyEnabled(itemDesc.id)"
		text lua "itemDescLeftButtonText()"
		text style "button"
		action
		"
			itemDescLeftButtonAction()
		"
	}
	button
	{
		bam			GUIOSTUM
			
		area		327 638 201 44
		text  "DONE_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu()
		"
	}
	button
	{
		bam			GUIOSTUR
			
		area		572 638 234 44
		enabled "itemDescRightButtonEnabled()"
		clickable lua "itemDesc.item.identified == 1 or Infinity_GetScrollIdentifyEnabled(itemDesc.id)"
		text lua "itemDescRightButtonText()"
		text style "button"
		action
		"
			itemDescRightButtonAction()
		"
	}
}
`
function highlightSidebarButton(engine)
	return (engine == e:GetActiveEngine())
end
sidebarVisible =
{
	LEFT = 1,
	RIGHT = 1
}
function toggleSidebar(side)
	local show = side .. "_SIDEBAR"
	local hide = show .. "_HIDDEN"
	if(sidebarVisible[side] == 1) then
		local temp = show
		show = hide
		hide = temp
		sidebarVisible[side] = 0
	else
		sidebarVisible[side] = 1
	end
	Infinity_PushMenu(show)
	Infinity_PopMenu(hide)
end
sidebarForceTooltips = 0
`
--menu
--{
--	name 'LEFT_SIDEBAR' -- left sidebar
--	align left top
--	ignoreEsc
--	onOpen 
--	"
--		if(sidebarVisible.LEFT == 1) then
--			Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM')
--		else
--			Infinity_PopMenu('LEFT_SIDEBAR')
--			Infinity_PushMenu('LEFT_SIDEBAR_HIDDEN')
--		end
--		if(showJournal == 1) then
--			Infinity_PushMenu('JOURNAL')
--		end
--		sidebarForceTooltips = 0
--	"
--	onClose 
--	"
--		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM')
--		Infinity_PopMenu('JOURNAL')
--	"
----	label
----	{
----		name 'leftSidebarBackground'
----		area 0 0 80 1536
----		mosaic GUIWLSP
----	}
--	label
--	{
--
--		area 0 1536 80 1536
--		mosaic GUIWLSP
--	}
--	button
--	{
--		area 3 20 71 48
--		bam GUILS10
--		sequence 0
--		scaleToClip
--		tooltip lua "getTooltipWithHotkey(2,16313)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
----		glow lua "highlightSidebarButton(worldScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(0) -- return to game
--		"
--	}
--	button
--	{
--		area 3 70 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 1
--		tooltip lua "getTooltipWithHotkey(4,15418)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(mapScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(1) -- map
--		"
--	}
--	button
--	{
--		area 3 120 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 2
--		tooltip lua "getTooltipWithHotkey(3,16308)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "showJournal == 1"
--		clickable lua "sidebarsGreyed ~= 1 and game:GetJournalOpenable()"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(2) -- quests
--		"
--	}
--	button
--	{
--		area 3 170 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 3
--		tooltip lua "getTooltipWithHotkey(0,16307)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(inventoryScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(3) -- equipment
--		"
--	}
--	button
--	{
--		area 3 220 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 4
--		tooltip lua "getTooltipWithHotkey(1,16306)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(characterScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(4) -- statistics for character
--		"
--	}
--	button
--	{
--		area 3 270 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 5
--		tooltip lua "getTooltipWithHotkey(5,16309)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(mageScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(5) -- arcane spells
--		"
--	}
--	button
--	{
--		area 3 320 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 6
--		tooltip lua "getTooltipWithHotkey(6,14930)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(priestScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(6) -- priest spells
--		"
--	}
--	button
--	{
--		area 3 370 71 48
--		bam GUILS10
--		scaleToClip
--		sequence 7
--		tooltip lua "getTooltipWithHotkey(7,16311)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(optionsScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(7) -- game exit menu
--		"
--	}
--	button
--	{
--		area 3 420 71 48
--		enabled "e:IsMultiplayer()"
--		bam GUILS10
--		scaleToClip
--		sequence 8
--		tooltip lua "getTooltipWithHotkey(8,16312)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		glow lua "highlightSidebarButton(multiplayerScreen)"
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnLeftPanelButtonClick(8) -- mp character menu
--		"
--	}
--
--	button
--	{
--		area 6 0 67 16
--		bam GUIPNL10
--		action
--		"
--			toggleSidebar('LEFT')
--		"
--	}
--}

--menu
--{
--	name 'LEFT_SIDEBAR_BOTTOM'
--	align left bottom
--	offset 0 -22
--	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
--	ignoreEsc
--	button
--	{
--		area 3 0 73 55
--		enabled "worldScreen == e:GetActiveEngine()"
--		bam GUILS10
--		sequence 15
--		tooltip lua "getTooltipWithHotkey(28,74261)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			worldScreen:OnQuickSaveButtonClick(false)
--		"
--		actionAlt
--		"
--			worldScreen:OnQuickSaveButtonClick(true)
--		"
--	}
--	button
--	{
--		area 3 56 73 55
--		enabled "worldScreen == e:GetActiveEngine()"
--		bam GUILS10
--		sequence 16
--		tooltip lua "Infinity_FetchString(74270)" --"getTooltipWithHotkey(16,74270)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			Infinity_PushMenu('HELP')
--		"
--	}
--	button
--	{
--		area 3 110 73 55
--		bam GUILS10
--		sequence 9
--		tooltip lua "getTooltipWithHotkey(31,11942)"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			e:GetActiveEngine():OnRestButtonClick()
--		"
--	}
--	
--	
--	--begin clock
--	label
--	{
--		enabled "worldScreen == e:GetActiveEngine()"
--		area 0 182 73 55
--		bam "CGEAR"
--		frame lua "timer:GetCurrentTime() % 24"
--		useOverlayTint "worldScreen:CheckIfPaused()"
--		overlayTint 180 180 180
--	}
--	label
--	{
--		enabled "worldScreen == e:GetActiveEngine()"
--		area 0 182 73 55
--		bam "CDIAL"
--		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
--		useOverlayTint "worldScreen:CheckIfPaused()"
--		overlayTint 180 180 180
--	}
--	label
--	{
--		enabled "worldScreen == e:GetActiveEngine()"
--		area 0 182 73 55
--		bam "CPEN"
--		frame lua "timer:GetCurrentTime() % 24"
--		useOverlayTint "worldScreen:CheckIfPaused()"
--		overlayTint 180 180 180
--	}
--	button
--	{
--		enabled "worldScreen == e:GetActiveEngine()"
--		area 0 182 73 55
--		tooltip lua "worldScreen:GetCurrentTimeString()"
--		tooltip force lua "sidebarForceTooltips == 1"
--		tooltip force top
--		clickable lua "sidebarsGreyed ~= 1"
--		action
--		"
--			worldScreen:TogglePauseGame(true)
--		"
--	}
--	--end clock
--	label
--	{
--		--area is preset
--		enabled "gameOptions.m_bRenderFrameTimes"
--		frameTimes
--	}
--}

menu
{
	name 'LEFT_SIDEBAR_HIDDEN'
--	align left top
--	ignoreEsc
--	button
--	{
--		area 6 0 67 16
--		bam GUIPNL10
--		action
--		"
--			toggleSidebar('LEFT')
--		"
--	}
label {area 0 0 0 0}
}
`
	mouseOverPortrait = -1
	ovrCharScreen = ovrCharScren and ovrCharScreen or 7
	draggedPortrait = nil
	function swapPortraits(dest)
		worldScreen:SwapPortraits(dest,draggedPortrait)
		draggedPortrait = nil
	end

	function getPartyAITooltip()
		if aiButtonToggle == 1 then
			return Infinity_FetchString(15918)
		else
			return Infinity_FetchString(15917)
		end
	end

	function getRSidebarSize()
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		Infinity_SetArea('portrait0', screenWidth*.94, screenHeight*.00825, screenWidth*.0568, screenHeight*.151)
		Infinity_SetArea('portrait1', screenWidth*.9453, screenHeight*.157, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portrait2', screenWidth*.9453, screenHeight*.292, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portrait3', screenWidth*.9453, screenHeight*.427, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portrait4', screenWidth*.9453, screenHeight*.562, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portrait5', screenWidth*.9453, screenHeight*.697, screenWidth*.0515, screenHeight*.138)
	end	
`
menu
{
	name 'RIGHT_SIDEBAR' --right sidebar
	ignoreEsc
	--align right top
	onOpen 
	"
		if(sidebarVisible.RIGHT == 1) then
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('RIGHT_SIDEBAR')
			Infinity_PushMenu('RIGHT_SIDEBAR_HIDDEN')
		end
		if(worldScreen == e:GetActiveEngine() and game:GetPartyAI()) then aiButtonToggle = 1 end
		if(worldScreen == e:GetActiveEngine()) then Infinity_PushMenu('WORLD_LEVEL_UP_BUTTONS') end
		getRSidebarSize()
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
		Infinity_PopMenu('WORLD_LEVEL_UP_BUTTONS')
	"
--	label
--	{
--		name 'rightSidebarBackground'
--		area 0 0 0 1536
--		mosaic GUIWRSP
--	}
--	label
--	{
--		area 0 1536 0 1536
--		mosaic GUIWRSP
--	}



	button
	{
		name "portrait0"
		area 1381 6 83 115
		portrait 0
		bam portrab
		scaleToClip
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "draggedPortrait and draggedPortrait ~= 0"
		action 
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 0
				e:SelectEngine(characterScreen)
				Infinity_OnPortraitLClick(0)
				e:SelectEngine(worldScreen)
				Infinity_PushMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 8
			elseif e:GetActiveEngine() == worldScreen then
				Infinity_OnPortraitLClick(0)
			end
		"
		actionAlt "Infinity_OnPortraitDblClick(0)"
		actionDbl "Infinity_OnPortraitRClick(0)"
		actiondrag "Infinity_SwapWithPortrait()"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 0"
		actionSimpleDrop "swapPortraits(0)"
		--tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}

	button
	{
		name "portrait1"
		area 1389 120 75 105
		portrait 1
		bam portrab
		scaleToClip
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "draggedPortrait and draggedPortrait ~= 1"
		action 
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 1
				e:SelectEngine(characterScreen)
				Infinity_OnPortraitLClick(1)
				e:SelectEngine(worldScreen)
				Infinity_PushMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 8
			elseif e:GetActiveEngine() ~= characterScreen then
				Infinity_OnPortraitLClick(1)
			end
		"
		actionAlt "Infinity_OnPortraitDblClick(1)"
		actionDbl "Infinity_OnPortraitRClick(1)"
		actiondrag "Infinity_SwapWithPortrait(1)"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 1"
		actionSimpleDrop "swapPortraits(1)"
		--tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}

	button
	{
		name "portrait2"
		area 1389 224 75 105
		portrait 2
		bam portrab
		scaleToClip
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "draggedPortrait and draggedPortrait ~= 2"
		action 
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 2
				e:SelectEngine(characterScreen)
				Infinity_OnPortraitLClick(0)
				e:SelectEngine(worldScreen)
				Infinity_PushMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 8
			elseif e:GetActiveEngine() ~= characterScreen then
				Infinity_OnPortraitLClick(2)
			end
		"
		actionAlt "Infinity_OnPortraitDblClick(2)"
		actionDbl "Infinity_OnPortraitRClick(2)"
		actionDbl "Infinity_OnPortraitDblClick(2)"
		actiondrag "Infinity_SwapWithPortrait(2)"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 2"
		actionSimpleDrop "swapPortraits(2)"
		--tooltip lua "Infinity_GetPortraitTooltip(2)"
		clickable lua "sidebarsGreyed ~= 1"
	}

	button
	{
		name "portrait3"
		area 1389 327 75 105
		portrait 3
		bam portrab
		scaleToClip
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "draggedPortrait and draggedPortrait ~= 3"
		action 
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 3
				e:SelectEngine(characterScreen)
				Infinity_OnPortraitLClick(0)
				e:SelectEngine(worldScreen)
				Infinity_PushMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 8
			elseif e:GetActiveEngine() ~= characterScreen then
				Infinity_OnPortraitLClick(3)
			end
		"
		actionAlt "Infinity_OnPortraitDblClick(3)"
		actionDbl "Infinity_OnPortraitRClick(3)"
		actiondrag "Infinity_SwapWithPortrait(3)"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 3"
		actionSimpleDrop "swapPortraits(3)"
		--tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}

	button
	{
		name "portrait4"
		area 1389 431 75 105
		portrait 4
		bam portrab
		scaleToClip
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "draggedPortrait and draggedPortrait ~= 4"
		action 
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 4
				e:SelectEngine(characterScreen)
				Infinity_OnPortraitLClick(0)
				e:SelectEngine(worldScreen)
				Infinity_PushMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 8
			elseif e:GetActiveEngine() ~= characterScreen then
				Infinity_OnPortraitLClick(4)
			end
		"
		actionAlt "Infinity_OnPortraitDblClick(4)"
		actionDbl "Infinity_OnPortraitRClick(4)"
		actiondrag "Infinity_SwapWithPortrait(4)"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 4"
		actionSimpleDrop "swapPortraits(4)"
		--tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}

	button
	{
		name "portrait5"
		area 1389 535 75 105
		portrait 5
		bam portrab
		scaleToClip
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "draggedPortrait and draggedPortrait ~= 5"
		action 
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 5
				e:SelectEngine(characterScreen)
				Infinity_OnPortraitLClick(0)
				e:SelectEngine(worldScreen)
				Infinity_PushMenu('OVERLAY_CHARACTER')
				ovrCharScreen = 8
			elseif e:GetActiveEngine() ~= characterScreen then
				Infinity_OnPortraitLClick(5)
			end
		"
		actionAlt "Infinity_OnPortraitDblClick(5)"
		actionDbl "Infinity_OnPortraitRClick(5)"
		actiondrag "Infinity_SwapWithPortrait(5)"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 5"
		actionSimpleDrop "swapPortraits(5)"
		--tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
--	button
--	{
--		area 10 0 67 16
--		bam GUIPNL10
--		action
--		"
--			toggleSidebar('RIGHT')
--		"
--	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM' --right bottom sidebar, sidebar bottom, bottom sidebar
	align right bottom
	ignoreEsc
	button
	{
		area 6 0 71 48
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		toggle selectionButtonToggle
		bam sdbtn1
		tooltip lua "Infinity_FetchString(11942)"
		tooltip force lua "sidebarForceTooltips == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnSelectionButtonClick()
		"
	}
	button
	{
		--area 6 52 70 50
		area 7 49 68 49
		enabled "inventoryScreen ~= e:GetActiveEngine()"
		toggle highlightButtonToggle
		bam Y5GUIB20
		scaleToClip
		sequence 13
		tooltip lua "Infinity_FetchString(103144)"
		tooltip force lua "sidebarForceTooltips == 1"
		clickable lua "e:GetActiveEngine() == worldScreen and Infinity_IsMenuOnStack('WORLD_DIALOG') ~= 1"
		action
		"
			
			worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
			if Infinity_GetINIValue('Y5 Options','Highlight Enabled') == 0 then
				Infinity_SetINIValue('Y5 Options','Highlight Enabled',1)
			else
				Infinity_SetINIValue('Y5 Options','Highlight Enabled',0)
			end
		"
	}
	button
	{
		area 7 99 68 48
		enabled "inventoryScreen ~= e:GetActiveEngine()"
		toggle aiButtonToggle
		bam Y5GUIB20
		sequence 12
		scaleToClip
		tooltip lua "getPartyAITooltip()"
		tooltip force lua "sidebarForceTooltips == 1"
		clickable lua "e:GetActiveEngine() == worldScreen and Infinity_IsMenuOnStack('WORLD_DIALOG') ~= 1"
			 
		action
		"
			game:ToggleAI()
		"
	}

}
menu
{
	name 'RIGHT_SIDEBAR_HIDDEN'
	align right top
	offset -3 0
	ignoreEsc
	button
	{
		area 10 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('RIGHT')
		"
	}
}
`
TEXT_inventoryError = ""
inventoryStats = {}
inventoryShow = {1,1,1,1,1,1,1,1,1}
savedID = 0
savedHeight = 0
itemComparison = true
forceGroundScroll = false
charTable = {}
curCharId = id

function resetStatsDisplay()
	tempStats = {}
end
function getTempDamage()
	local dmgMinTemp = tempStats[id]['dmgMin']
	local dmgMaxTemp = tempStats[id]['dmgMax']
	if characters[id].damage.min ~= dmgMinTemp or characters[id].damage.max ~= dmgMaxTemp then
		local old = (characters[id].damage.min + characters[id].damage.max) / 2
		local new = (dmgMinTemp + dmgMaxTemp) / 2
		local score = (new - old)
		local str = formatString(dmgMinTemp .. '-' .. dmgMaxTemp, score, 1)
		table.insert(inventoryStats, {3,t("DAMAGE_LABEL"),str})
	end
end

function getStat(old, newName, coeff)
	return old
end
function getTempStat(old, newName, name, coeff)
	local new = tempStats[id][newName]
	local score = (new - old)
	if score ~= 0 then
		local str = formatString(new, score, coeff)
		table.insert(inventoryStats, {3,name,str})
	end
end
function getStatsTitle()
	if(tempStats[id] ~= nil) then
		return tempStats[id].tempItem
	else
		return ""
	end
end
function formatString(value, score, coeff)
	local str = value .. " (-)"
	if score < 0 then
		str = value .. " (" .. score .. ")"
	elseif score > 0 then
		str = value .. " (+" .. score .. ")"
	end
	if coeff * score < 0 then return "^R" .. str .. "^-" end
	if coeff * score > 0 then return "^G" .. str .. "^-" end
	return str
end
function slotDoubleClick(slotName, force)
	local slot = characters[id].equipment[slotName]
	
	if(string.sub(slotName,1,6) == "ground" and force == nil) then
		--this hack is needed because the unlike other slots, ground item add/remove is a message (doesnt get executed immediately)
		--since the double click removes the item before re-adding it, we need to wait for that re-add to complete before continuing.
		doubleClickEventScheduled = slotName
		return
	end
	
	if(slot ~= nil) then
		if(slot.item.isBag ~= 0) then
			Infinity_OpenInventoryContainer(slot.item.res)
		else
			showItemAmountRequester(slotName)
		end
	end
	
end

function checkDoubleClickScheduled(slotName)
	if(doubleClickEventScheduled == slotName) then
		slotDoubleClick(doubleClickEventScheduled, true)
		doubleClickEventScheduled = nil
	end
end
function checkDoubleClickScheduled(slotName)
	if(doubleClickEventScheduled == slotName) then
		slotDoubleClick(doubleClickEventScheduled, true)
		doubleClickEventScheduled = nil
	end
end


function getTempHP()
	local maxHP = getTempStat(characters[id].HP.max,'maxHP',1)
	local currentHP = getTempStat(characters[id].HP.current, 'currentHP',1)
	if(maxHP == "-" and currentHP == "-") then
		--nothing changed.
		return "-"
	end
	if(maxHP == "-") then
		--only current HP changed.
		maxHP = characters[id].HP.max
	end
	if(currentHP == "-") then
		--only max HP changed.
		currentHP = characters[id].HP.current
	end
	
	return currentHP .. '/' .. maxHP
end
function shouldGreyOutInventory()
	return characters[id].HP.current <= 0 or inventoryScreen:IsSpriteOrderable() == false
end
function getInventoryTHAC0()
	local str = characters[id].THAC0.current
	if(characters[id].THAC0.offhand) then
		str = str .. "\n" .. characters[id].THAC0.offhand
	end
	return str
end
function getInventoryDamage()
	local str = characters[id].damage.min .. '-' .. characters[id].damage.max
	if(characters[id].damage.minOffhand and characters[id].damage.maxOffhand) then
		str = str .. "\n" .. characters[id].damage.minOffhand .. '-' .. characters[id].damage.maxOffhand 
	end
	return str
end


function getInventoryDamageDetails()
	if characters[id].damage.detailsOffhand == nil or characters[id].damage.detailsOffhand == "" then
		return "Main Hand:"..'\n'..characters[id].damage.details
	else
		return "Main Hand:"..'\n'..characters[id].damage.details.."\n\n".. "Offhand:"..'\n'..characters[id].damage.detailsOffhand
	end
end


function getInventoryTHAC0Details()
	if characters[id].THAC0.detailsOffhand == nil or characters[id].THAC0.detailsOffhand == "" then
		return "Main Hand:"..'\n'..characters[id].THAC0.details
	else
		return "Main Hand:"..'\n'..characters[id].THAC0.details.."\n\n".."Offhand:"..'\n'..characters[id].THAC0.detailsOffhand
	end
end

function GetInvenAPRandPROF()
	if characters[id].proficiencies.fightingstyles.current == nil or characters[id].proficiencies.fightingstyles.current == "" then
		return t("NUM_ATTACKS_LABEL") .. ':' .. characters[id].proficiencies.numAttacks.current .. '\n\n' .. t("FIGHTING_STYLES_LABEL") .. ':' .. '\n'..characters[id].proficiencies.weapons.current
	end
end

function scrollGroundItems()
	if scrollDirection > 0 then
		Infinity_OnGroundPage(-1)
		forceGroundScroll = true
	elseif scrollDirection < 0 then
		Infinity_OnGroundPage(1)
		forceGroundScroll = true
	end
end
function inventoryScroll(top, height, contentHeight)
	savedHeight = contentHeight
	if id ~= savedID then
		savedID = id
		return 0
	end
	return nil
end
function groundTable()
	local t = {}
	for i=0,Infinity_GetMaxGroundPage() do
		table.insert(t, 1, '')
	end
	return t
end
function groundScroll(top, height, contentHeight)
	local curPage = Infinity_GetCurrentGroundPage()

	if forceGroundScroll then
		forceGroundScroll = false
		return -curPage * 106
	end

	local page = math.floor((-top + 53) / 106)
	if page ~= curPage then
		Infinity_OnGroundPage(page - curPage)
	end
	return nil
end

function makeTable(length)
	local t = {}
	for i=0,length do
		table.insert(t, 1, '')
	end
	return t
end

--function empty(t)
--	if next(t) == nil then
--		return true
--	end
--	return false
--end

function displayDMG()
	dmgtxt = ''
	dmgtxt = characters[currentID].damage.min .. '-' .. characters[currentID].damage.max

	if ( characters[currentID].damage.maxOffhand ) then
		dmgtxt = dmgtxt .. '\n' .. characters[currentID].damage.minOffhand .. '-' .. characters[currentID].damage.maxOffhand
	end

	return dmgtxt
end

--savesInvenFunction

function buildSavingThrowsStats()
	inventoryStats = {}

	table.insert(inventoryStats, {1,t("SAVING_THROWS_LABEL"),7})
	if inventoryShow[7] == 1 then
		for s in (characters[id].proficiencies.savingThrows.."\n"):gmatch("(.-)\n") do
			local pos = s:find(":", 3)
			table.insert(inventoryStats, {3,s:sub(1, pos - 1),s:sub(pos + 2)})
		end
	end	

	return inventoryStats
end

function buildResistanceStats()
	inventoryStats = {}
	
	table.insert(inventoryStats, {1,t("RESISTANCES_LABEL"),8})

	if inventoryShow[8] == 1 then
		table.insert(inventoryStats, {2,characters[id].proficiencies.resistances:gsub('None','',1)})
	end
	
--	if {} == {{1,t("RESISTANCES_LABEL"),8},{2,''}} then
--		inventoryStats = {}
--		table.insert(inventoryStats, {1,t("RESISTANCES_LABEL"),8})
--		table.insert(inventoryStats, {1,t("^0xFFCECECENone"),8})
--	end
	
	return inventoryStats
end

	

function buildStatusEffectsStats()
	inventoryStats = {}

	
	table.insert(inventoryStats, {1,t("STATUS_EFFECTS_LABEL"),9})
	if inventoryShow[9] == 1 then
		for k, v in pairs(characters[id].statusEffects) do
			table.insert(inventoryStats, {4,v})
		end
	end
--	if empty(characters[id].statusEffects) then
--		table.insert(inventoryStats, {1,t("^0xFFCECECENone"),9})
--	end	

	return inventoryStats
end




--function dragInventory()
--	local offsetX,offsetY,menuWidth,menuHeight = Infinity_GetMenuArea('INVENTORY')
--	offsetX = offsetX + motionX
--	offsetY = offsetY + motionY
--	
--	--clamping
--	if(offsetX < 0) then
--		offsetX = 0
--	end
--	if(offsetY < 50) then
--		offsetY = 50
--	end
--	
--	local screenWidth, screenHeight = Infinity_GetScreenSize()
--	if(offsetX > screenWidth - 0 - menuWidth) then
--		offsetX = screenWidth - 0 - menuWidth
--	end
--	if(offsetY > screenHeight - menuHeight) then
--		offsetY = screenHeight - menuHeight
--	end
--	
--	Infinity_SetOffset('INVENTORY', offsetX, offsetY)
--end

function showChar()
	if Infinity_GetNumCharacters() > 0 then
		return
	elseif Infinity_GetNumCharacters() > 1 then
		return
	elseif Infinity_GetNumCharacters() > 2 then
		return
	elseif Infinity_GetNumCharacters() > 3 then
		return
	elseif Infinity_GetNumCharacters() > 4 then
		return
	elseif Infinity_GetNumCharacters() > 5 then
		return
	else
		return nil
	end
end

function getItemSlot1(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group0 or {}
end
function getItemSlot2(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group1 or {}
end
function getItemSlot3(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group2 or {}
end
function getItemSlot4(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group3 or {}
end
function getItemSlot5(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group4 or {}
end
function getItemSlot6(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group5 or {}
end
function getItemSlot7(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group6 or {}
end
function getItemSlot8(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group7 or {}
end
function getItemSlot9(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group8 or {}
end
function getItemSlot10(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group9 or {}
end
function getItemSlot11(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group10 or {}
end
function getItemSlot12(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group11 or {}
end
function getItemSlot13(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group12 or {}
end
function getItemSlot14(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group13 or {}
end
function getItemSlot15(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group14 or {}
end
function getItemSlot16(num)
    local exactCharId = charTable[num]
    return exactCharId and characters[exactCharId].equipment.group15 or {}
end


function updateEnt()
	charTable = {}
    local curCharId = id
    

    Infinity_OnPortraitLClick(0)
    local CharId1 = id
    table.insert(charTable, CharId1)
	

	if Infinity_GetNumCharacters() > 1 then
		Infinity_OnPortraitLClick(1)
		local CharId2 = id
		table.insert(charTable, CharId2)
	end
	

	if Infinity_GetNumCharacters() > 2 then
		Infinity_OnPortraitLClick(2)
		local CharId3 = id
		table.insert(charTable, CharId3)
	end
	

	if Infinity_GetNumCharacters() > 3 then
		Infinity_OnPortraitLClick(3)
		local CharId4 = id
		table.insert(charTable, CharId4)
	end
	

	if Infinity_GetNumCharacters() > 4 then
		Infinity_OnPortraitLClick(4)
		local CharId5 = id
		table.insert(charTable, CharId5)
	end
	

	if Infinity_GetNumCharacters() > 5 then
		Infinity_OnPortraitLClick(5)
		local CharId6 = id
		table.insert(charTable, CharId6)
	end

	if curCharId == charTable[1] then 
		Infinity_OnPortraitLClick(0) 
    elseif curCharId == charTable[2] then 
		Infinity_OnPortraitLClick(1)  
    elseif curCharId == charTable[3] 
		then Infinity_OnPortraitLClick(2) 
    elseif curCharId == charTable[4] then 
		Infinity_OnPortraitLClick(3) 
    elseif curCharId == charTable[5] then 
		Infinity_OnPortraitLClick(4) 
    elseif curCharId == charTable[6] then 
		Infinity_OnPortraitLClick(5) 
    end
    
end

function chrSelect()
	local curCharId = id
	if curCharId == charTable[1] then 
		curCharSelect=1 
    elseif curCharId == charTable[2] then 
		curCharSelect=2  
    elseif curCharId == charTable[3] then 
		curCharSelect=3 
    elseif curCharId == charTable[4] then 
		curCharSelect=4 
    elseif curCharId == charTable[5] then 
		curCharSelect=5 
    elseif curCharId == charTable[6] then 
		curCharSelect=6 
    end
end


function updateExit()
    local curCharId = id

	if Infinity_GetNumCharacters() > 1 then	
		Infinity_OnPortraitLClick(0)
	end
	if Infinity_GetNumCharacters() > 2 then
		Infinity_OnPortraitLClick(1)
	end
	if Infinity_GetNumCharacters() > 3 then
		Infinity_OnPortraitLClick(2)
	end
	if Infinity_GetNumCharacters() > 4 then
		Infinity_OnPortraitLClick(3)
	end
	if Infinity_GetNumCharacters() > 5 then
		Infinity_OnPortraitLClick(4)
	end
	if Infinity_GetNumCharacters() > 6 then
		Infinity_OnPortraitLClick(5)
	end
	
    if curCharId == charTable[1] then 
		Infinity_OnPortraitLClick(0)
	elseif curCharId == charTable[2] then 
		Infinity_OnPortraitLClick(1) 
    elseif curCharId == charTable[3] then 
		Infinity_OnPortraitLClick(2) 
    elseif curCharId == charTable[4] then 
		Infinity_OnPortraitLClick(3)  
    elseif curCharId == charTable[5] then 
		Infinity_OnPortraitLClick(4)  
    elseif curCharId == charTable[6] then 
		Infinity_OnPortraitLClick(5)  
    end
	
end


function getINVSize()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	Infinity_SetArea('qkweap', screenWidth*.0765, screenHeight*.201, screenWidth*.109, screenHeight*.030)
	Infinity_SetArea('slot_inv_1', screenWidth*.0745, screenHeight*.243, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_2', screenWidth*.1016, screenHeight*.243, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_3', screenWidth*.1288, screenHeight*.243, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_4', screenWidth*.156, screenHeight*.243, screenWidth*.0275, screenHeight*.052)
	
	Infinity_SetArea('qkitem', screenWidth*.0765, screenHeight*.306, screenWidth*.0935, screenHeight*.030)
	Infinity_SetArea('slot_inv_5', screenWidth*.0751, screenHeight*.3465, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_6', screenWidth*.1029, screenHeight*.3465, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_7', screenWidth*.1305, screenHeight*.3465, screenWidth*.0275, screenHeight*.052)
	
	Infinity_SetArea('slot_inv_11', screenWidth*.1875, screenHeight*.098, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_12', screenWidth*.2157, screenHeight*.098, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_13', screenWidth*.2439, screenHeight*.098, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_14', screenWidth*.2721, screenHeight*.098, screenWidth*.0275, screenHeight*.052)
	
	Infinity_SetArea('qkquiver', screenWidth*.1045, screenHeight*.098, screenWidth*.0785, screenHeight*.030)
	Infinity_SetArea('slot_inv_15', screenWidth*.1007, screenHeight*.138, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_16', screenWidth*.1285, screenHeight*.138, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_17', screenWidth*.1561, screenHeight*.138, screenWidth*.0275, screenHeight*.052)
	
	Infinity_SetArea('slot_inv_21', screenWidth*.2658, screenHeight*.36, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_22', screenWidth*.1745, screenHeight*.302, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_23', screenWidth*.302, screenHeight*.302, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_24', screenWidth*.2083, screenHeight*.36, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_25', screenWidth*.2373, screenHeight*.36, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('slot_inv_26', screenWidth*.3015, screenHeight*.244, screenWidth*.0275, screenHeight*.052)
	
	Infinity_SetArea('invenb', screenWidth*.016, screenHeight*.429, screenWidth*.038, screenHeight*.089)
	
	Infinity_SetArea('chrcolor1', screenWidth*.3029, screenHeight*.096, screenWidth*.0275, screenHeight*.052)
	Infinity_SetArea('chrcolor2', screenWidth*.3029, screenHeight*.153, screenWidth*.0275, screenHeight*.052)
	
	
	Infinity_SetArea('paperdoll1', screenWidth*.2195, screenHeight*.176, screenWidth*.067, screenHeight*.160)
	
	
end

--Infinity_UpdateInventoryRequesterPanel()
--Infinity_ActivateInventory()
--Infinity_UpdateLua()


`
menu
{
	name 'INVENTORY' --inventory menu
	align  center top
	ignoreEsc
	onOpen
	"
		--getINVSize()
		chatboxScrollToBottom = 1

		popSidebars()
		doubleClickEventScheduled = nil
		updateEnt()
		chrSelect()
		Infinity_PushMenu('invenOverlay')
			
	"
	onClose
	"	
		charTable = {}
		mpChatTable = {}
		Infinity_PopMenu('CHARACTER_COLOR')
		Infinity_PopMenu('ITEM_DESCRIPTION')
		Infinity_PopMenu('invenOverlay')
		pushSidebars()
		curCharSelect = 0
	"
	label
	{
		area 0 0 1273 710
		mosaic y5inven
	}

	label
	{
		area 286 6 700 42
		text "INVENTORY_TITLE"
		text style "title"
	}

	label
	{
		area 229 52 188 36
		text lua "characters[id].name"
		text style "label"
	}
	label
	{
		area 415 52 212 36
		text lua "characters[id].class"
		text style "label"
	}
	label
	{
		name "qkquiver"
		area 200 98 150 30
		text "QUIVER_LABEL"
		text style "label"
	}
	label
	{	
		name "qkweap"
		area 146 201 209 30
		text "QUICK_WEAPONS_LABEL"
		text style "label"
	}
	label
	{
		name "qkitem"
		area 146 306 179 30
		text "QUICK_ITEMS_LABEL"
		text style "label"
	}
	button
	{
		name "paperdoll1"
		area 421 176 128 160
		paperdoll 1
		actionDrag "Infinity_SwapWithAppearance()"
	}
	label
	{
		area 509 492 118 22
		text lua "characters[id].gold"
		text style "label"
	}
	text
	{
		area 143 452 326 40 --26
		text lua "TEXT_inventoryError"
		text style normal
		scrollbar 'GUISCRC'
	}
	label
	{
	area 0 535 665 175
	rectangle 4
	rectangle opacity 200
	}
	--stat details begin
	label
	{
		area		60 96 58 52
		text lua	"characters[id].AC.current"
		text style	"label"
		text point 10
		align center center
	}
	button
	{
		area		20 96 102 52
		tooltip lua "characters[id].AC.details"
	}
	label
	{
		area		60 164 58 52
		text lua	"characters[id].HP.current .. '\n' .. characters[id].HP.max"
		text style	"label"
		text point 10
		align center center
	}
	button
	{
		area		20 164 102 52
		tooltip lua "characters[id].HP.details"
	}
	label
	{
		area		60 231 58 52
		text lua	"getInventoryTHAC0()"
		text style	"label"
		text point 10
		align center center
	}
	button
	{
		area		20 231 102 52
		tooltip lua "getInventoryTHAC0Details()"
	}
	label
	{
		area		67 296 45 52
		text lua	"getInventoryDamage()"
		text style	"label"
		text point 10
		align center center
	}
	button
	{
		area		20 296 102 52
		tooltip lua "getInventoryDamageDetails()"
	}
	label
	{
		area		60 361 58 52
		text lua	"characters[id].proficiencies.numAttacks.current"
		text style	"label"
		text point 10
		align center center
	}
	button
	{
		area		20 361 102 52
		tooltip lua "GetInvenAPRandPROF()"
	}
	--stat details end
	list
	{
		column 
		{ 
			width 100
			label -- title for attributes
			{
				area		0 0 -1 -1 
				enabled		"inventoryStats[rowNumber][1] == 1"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'normal'
				text color  D
				text point 12
				text align	center center
				text useFontZoom 0
				pad 0 0 0 5
			}	
			label -- saving throws desc
			{
				area		0 0 -1 -1
				enabled		"inventoryStats[rowNumber][1] == 3"
				text		lua "inventoryStats[rowNumber][2] .. ':' .. ' ' .. inventoryStats[rowNumber][3]"
				text style  'normal'
				text align	center center
				text point 12
				text useFontZoom 0
				pad 0 0 0 2
			}	
		}
		area 25 555 189 140
		rowheight	dynamic
		hidehighlight
		table		"buildSavingThrowsStats()"
		var			inventoryVar1
		scrollbar	'GUISCRC'
		scrollbar func "inventoryScroll"

	}

	list
	{
		column 
		{ 
			width 100
			label -- title for attributes
			{
				area		0 0 -1 -1
				enabled "inventoryStats[rowNumber][1] == 1"
				text lua "inventoryStats[rowNumber][2]"
				text style  'normal'
				text color  D
				text point 12
				text align	center center
				text useFontZoom 0
				pad 0 0 0 5
			}	
			label -- res/armor/hit points/thac0/damage desc
			{
				area		0 0 -1 -1
				enabled		"inventoryStats[rowNumber][1] == 2"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'normal'
				text align	center center
				text useFontZoom 0
			}	
		}
		area 214 555 186 140
		rowheight	dynamic
		hidehighlight
		table		"buildResistanceStats()"
		var			inventoryVar2
		scrollbar	'GUISCRC'
		scrollbar func "inventoryScroll"
--		action
--		"
--			if inventoryStats[inventoryVar] ~= nil and inventoryStats[inventoryVar][1] == 1 then
--				local idx = inventoryStats[inventoryVar][3]
--				if idx ~= nil then
--					local value = 1
--					if inventoryShow[idx] == 1 then value = 0 end
--					inventoryShow[idx] = value
--				end
--			end
--		"
	}
	
	list
	{
		column 
		{ 
			width 100
			label -- title for attributes
			{
				area		0 0 -1 -1 
				enabled		"inventoryStats[rowNumber][1] == 1"
				text		lua "inventoryStats[rowNumber][2]"
				text style  'normal'
				text color  D
				text point 12
				text align center center
				text useFontZoom 0
				pad 0 0 0 5
			}	
			label -- status effects icon
			{
				area		0 0 17 17
				enabled		"inventoryStats[rowNumber][1] == 4"
				bam			lua "inventoryStats[rowNumber][2].bam"
				sequence	lua "inventoryStats[rowNumber][2].current"
				--text align	center center
				text useFontZoom 0
				scaleToClip
				pad 0 0 0 3
			}
			label -- status effect name
			{
				area		22 0 -1 -1
				text		lua "Infinity_FetchString(inventoryStats[rowNumber][2].strRef)"
				text style  'normal'
				text align	left center
				text useFontZoom 0
				pad 0 0 0 3
			}
		}
		area 410 555 235 135
		rowheight	dynamic
		hidehighlight
		table		"buildStatusEffectsStats()"
		var			inventoryVar3
		scrollbar	'GUISCRC'
		scrollbar func "inventoryScroll"
	}


	--  inventory portraits

	button
	{
		name "invPortrait0"
		area 680 62 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0"
		action "Infinity_OnPortraitLClick(0);curCharSelect = 1"
		actionAlt "Infinity_OnPortraitRClick(0)"
		actionDbl "Infinity_OnPortraitDblClick(0);curCharSelect = 1"
		actiondrag "Infinity_SwapWithPortrait(0)"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"		
		tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}
--	button
--	{
----		--name "invPortrait0"
--		area 1280 52 78 599
--		--portrait 7
--		--portrait 4
--		
----		enabled "Infinity_GetNumCharacters() > 0"
----		action "Infinity_OnPortraitLClick()"
----		actionAlt "Infinity_OnPortraitRClick()"
----		actionDbl "Infinity_OnPortraitDblClick()"
--		actiondrag "Infinity_SwapWithPortrait()"
----		actionEnter "mouseOverPortrait = 0"
----		actionExit "mouseOverPortrait = -1"		
----		tooltip lua "Infinity_GetPortraitTooltip()"
----		clickable lua "sidebarsGreyed ~= 1"
--		
--	}
	

	button
	{
		name "invPortrait1"
		area 680 171 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1"
		action "Infinity_OnPortraitLClick(1);curCharSelect = 2"
		actionAlt "Infinity_OnPortraitRClick(1)"
		actionDbl "Infinity_OnPortraitDblClick(1);curCharSelect = 2"
		actiondrag "Infinity_SwapWithPortrait(1)"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "invPortrait2"
		area 680 280 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2"
		action "Infinity_OnPortraitLClick(2);curCharSelect = 3"
		actionAlt "Infinity_OnPortraitRClick(2)"
		actionDbl "Infinity_OnPortraitDblClick(2);curCharSelect = 3"
		actiondrag "Infinity_SwapWithPortrait(2)"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(2)"		
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "invPortrait3"
		area 680 389 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3"
		action "Infinity_OnPortraitLClick(3);curCharSelect = 4"
		actionAlt "Infinity_OnPortraitRClick(3)"
		actionDbl "Infinity_OnPortraitDblClick(3);curCharSelect = 4"
		actiondrag "Infinity_SwapWithPortrait(3)"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "invPortrait4"
		area 680 498 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4"
		action "Infinity_OnPortraitLClick(4);curCharSelect = 5"
		actionAlt "Infinity_OnPortraitRClick(4)"
		actionDbl "Infinity_OnPortraitDblClick(4);curCharSelect = 5"
		actiondrag "Infinity_SwapWithPortrait(4)"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1;"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "invPortrait5"
		area 680 603 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5"
		action "Infinity_OnPortraitLClick(5);curCharSelect = 6"
		actionAlt "Infinity_OnPortraitRClick(5)"
		actionDbl "Infinity_OnPortraitDblClick(5);curCharSelect = 6"
		actiondrag "Infinity_SwapWithPortrait(5)"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	
	--  inventory bags

	label
	{
		name "invenb"
		area 30 430 72 89
		encumbrance 
	}



	-- 	equipable items
	slot {name "slot_inv_1"		area 143 243 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.weapon0"}
	slot {name "slot_inv_2"		area 195 243 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.weapon1"}
	slot {name "slot_inv_3"		area 247 243 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.weapon2"}
	slot {name "slot_inv_4"		area 299 243 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.weapon3"}
	slot {name "slot_inv_5"		area 144 347 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.personal0"}
	slot {name "slot_inv_6"		area 197 347 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.personal1"}
	slot {name "slot_inv_7"		area 250 347 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.personal2"}
	slot {name "slot_inv_11"	area 360 98 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.armor"}
	slot {name "slot_inv_12"	area 414 98 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.gauntlets"}
	slot {name "slot_inv_13"	area 468 98 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.helmet"}
	slot {name "slot_inv_14"	area 522 98 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.amulet"}
	slot {name "slot_inv_15"	area 193 138 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.quiver0"}
	slot {name "slot_inv_16"	area 246 138 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.quiver1"}
	slot {name "slot_inv_17"	area 299 138 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.quiver2"}
	slot {name "slot_inv_21"	area 510 361 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.belt"}
	slot {name "slot_inv_22"	area 335 302 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.ringleft"}
	slot {name "slot_inv_23"	area 579 302 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.ringright"}
	slot {name "slot_inv_24"	area 399 361 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.cloak"}
	slot {name "slot_inv_25"	area 455 361 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.boots"}
	slot {name "slot_inv_26"	area 578 244 52 52		bam STONSLOT	scaleToClip		slotinfo "characters[id].equipment.shield"}

	--party0
	slot {name "slot_inv_30"	area 764 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot1(1)"}
	slot {name "slot_inv_31"	area 764 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot2(1)"}
	slot {name "slot_inv_32"	area 813 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot3(1)"}
	slot {name "slot_inv_33"	area 813 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot4(1)"}
	slot {name "slot_inv_34"	area 862 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot5(1)"}
	slot {name "slot_inv_35"	area 862 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot6(1)"}
	slot {name "slot_inv_36"	area 911 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot7(1)"}
	slot {name "slot_inv_37"	area 911 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot8(1)"}
	slot {name "slot_inv_38"	area 960 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot9(1)"}
	slot {name "slot_inv_39"	area 960 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot10(1)"}
	slot {name "slot_inv_40"	area 1009 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot11(1)"}
	slot {name "slot_inv_41"	area 1009 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot12(1)"}
	slot {name "slot_inv_42"	area 1058 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot13(1)"}
	slot {name "slot_inv_43"	area 1058 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot14(1)"}
	slot {name "slot_inv_44"	area 1107 61 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot15(1)"}
	slot {name "slot_inv_45"	area 1107 110 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot16(1)"}

--	--party1
	slot {name "slot_inv_30"	area 764 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot1(2)"}
	slot {name "slot_inv_31"	area 764 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot2(2)"}
	slot {name "slot_inv_32"	area 813 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot3(2)"}
	slot {name "slot_inv_33"	area 813 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot4(2)"}
	slot {name "slot_inv_34"	area 862 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot5(2)"}
	slot {name "slot_inv_35"	area 862 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot6(2)"}
	slot {name "slot_inv_36"	area 911 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot7(2)"}
	slot {name "slot_inv_37"	area 911 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot8(2)"}
	slot {name "slot_inv_38"	area 960 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot9(2)"}
	slot {name "slot_inv_39"	area 960 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot10(2)"}
	slot {name "slot_inv_40"	area 1009 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot11(2)"}
	slot {name "slot_inv_41"	area 1009 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot12(2)"}
	slot {name "slot_inv_42"	area 1058 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot13(2)"}
	slot {name "slot_inv_43"	area 1058 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot14(2)"}
	slot {name "slot_inv_44"	area 1107 170 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot15(2)"}
	slot {name "slot_inv_45"	area 1107 219 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot16(2)"}

	--party2
	slot {name "slot_inv_30"	area 764 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot1(3)"}
	slot {name "slot_inv_31"	area 764 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot2(3)"}
	slot {name "slot_inv_32"	area 813 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot3(3)"}
	slot {name "slot_inv_33"	area 813 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot4(3)"}
	slot {name "slot_inv_34"	area 862 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot5(3)"}
	slot {name "slot_inv_35"	area 862 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot6(3)"}
	slot {name "slot_inv_36"	area 911 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot7(3)"}
	slot {name "slot_inv_37"	area 911 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot8(3)"}
	slot {name "slot_inv_38"	area 960 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot9(3)"}
	slot {name "slot_inv_39"	area 960 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot10(3)"}
	slot {name "slot_inv_40"	area 1009 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot11(3)"}
	slot {name "slot_inv_41"	area 1009 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot12(3)"}
	slot {name "slot_inv_42"	area 1058 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot13(3)"}
	slot {name "slot_inv_43"	area 1058 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot14(3)"}
	slot {name "slot_inv_44"	area 1107 279 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot15(3)"}
	slot {name "slot_inv_45"	area 1107 328 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot16(3)"}

	--party3
	slot {name "slot_inv_30"	area 764 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot1(4)"}
	slot {name "slot_inv_31"	area 764 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot2(4)"}
	slot {name "slot_inv_32"	area 813 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot3(4)"}
	slot {name "slot_inv_33"	area 813 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot4(4)"}
	slot {name "slot_inv_34"	area 862 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot5(4)"}
	slot {name "slot_inv_35"	area 862 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot6(4)"}
	slot {name "slot_inv_36"	area 911 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot7(4)"}
	slot {name "slot_inv_37"	area 911 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot8(4)"}
	slot {name "slot_inv_38"	area 960 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot9(4)"}
	slot {name "slot_inv_39"	area 960 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot10(4)"}
	slot {name "slot_inv_40"	area 1009 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot11(4)"}
	slot {name "slot_inv_41"	area 1009 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot12(4)"}
	slot {name "slot_inv_42"	area 1058 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot13(4)"}
	slot {name "slot_inv_43"	area 1058 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot14(4)"}
	slot {name "slot_inv_44"	area 1107 388 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot15(4)"}
	slot {name "slot_inv_45"	area 1107 437 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot16(4)"}

	--party4
	slot {name "slot_inv_30"	area 764 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot1(5)"}
	slot {name "slot_inv_31"	area 764 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot2(5)"}
	slot {name "slot_inv_32"	area 813 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot3(5)"}
	slot {name "slot_inv_33"	area 813 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot4(5)"}
	slot {name "slot_inv_34"	area 862 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot5(5)"}
	slot {name "slot_inv_35"	area 862 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot6(5)"}
	slot {name "slot_inv_36"	area 911 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot7(5)"}
	slot {name "slot_inv_37"	area 911 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot8(5)"}
	slot {name "slot_inv_38"	area 960 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot9(5)"}
	slot {name "slot_inv_39"	area 960 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot10(5)"}
	slot {name "slot_inv_40"	area 1009 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot11(5)"}
	slot {name "slot_inv_41"	area 1009 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot12(5)"}
	slot {name "slot_inv_42"	area 1058 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot13(5)"}
	slot {name "slot_inv_43"	area 1058 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot14(5)"}
	slot {name "slot_inv_44"	area 1107 497 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot15(5)"}
	slot {name "slot_inv_45"	area 1107 546 49 49		enabled "showChar()"	bam STONSLOT	scaleToClip		slotinfo "getItemSlot16(5)"}

	--party5
	slot {name "slot_inv_30"	area 764 602 49 49  	enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot1(6)"}
	slot {name "slot_inv_31"	area 764 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot2(6)"}
	slot {name "slot_inv_32"	area 813 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot3(6)"}
	slot {name "slot_inv_33"	area 813 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot4(6)"}
	slot {name "slot_inv_34"	area 862 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot5(6)"}
	slot {name "slot_inv_35"	area 862 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot6(6)"}
	slot {name "slot_inv_36"	area 911 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot7(6)"}
	slot {name "slot_inv_37"	area 911 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot8(6)"}
	slot {name "slot_inv_38"	area 960 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot9(6)"}
	slot {name "slot_inv_39"	area 960 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot10(6)"}
	slot {name "slot_inv_40"	area 1009 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot11(6)"}
	slot {name "slot_inv_41"	area 1009 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot12(6)"}
	slot {name "slot_inv_42"	area 1058 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot13(6)"}
	slot {name "slot_inv_43"	area 1058 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot14(6)"}
	slot {name "slot_inv_44"	area 1107 602 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot15(6)"}
	slot {name "slot_inv_45"	area 1107 651 49 49		enabled "showChar()" 	bam STONSLOT	scaleToClip		slotinfo "getItemSlot16(6)"}

	--  ground items

	slot {name "slot_inv_68"	area 1189 168 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground0"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_69"	area 1189 224 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground1"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_70"	area 1189 279 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground2"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_71"	area 1189 334 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground3"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_72"	area 1189 389 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground4"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_73"	area 1189 444 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground5"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_74"	area 1189 499 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground6"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_75"	area 1189 556 52 52	bam STONSLOT	slotinfo "characters[id].equipment.ground7"	actionScroll "scrollGroundItems()"}


	
	
	button
	{
		area 1184 120 63 42
		bam RGAROW
		sequence 1
		action
		"
			Infinity_OnGroundPage(-1)
		"
	}	
	button
	{
		area 1184 614 68 47
		bam RGAROW
		sequence 0
		action
		"
			Infinity_OnGroundPage(1)
		"
	}

	label
	{
		area 1175 66 80 22
		text "GROUND_LABEL"
		text style "label"*
		align center center
		text color D
	}
	label
	{
		area 1196 98 40 22
		text lua "Infinity_GetCurrentGroundPage()+1 .. '/' .. Infinity_GetMaxGroundPage()+1"
		text style "label"
		align center center
		text color D
	}	

	button
	{
		name "chrcolor1"
		area 581 96 52 52
		bam INVBUT
		scaleToClip
		colordisplay 2
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	button
	{	
		name "chrcolor2"
		area 581 153 52 52
		bam INVBUT
		scaleToClip
		colordisplay 1
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
		"
	}
	--button{area 763 60 393 102 
	--portrait 7
	--rectangle 1 rectangle opacity 110 
	--enabled "curCharSelect ~= 1" 
	--action "Infinity_OnPortraitLClick(0);curCharSelect = 1"
	--actiondrag "Infinity_SwapWithPortrait(0)"}
	
	

		
	
}
menu -- this menu is needed because otherwise the inventory list doesn't get overlayed properly, which causes 'Infinity_SwapWithPortrait(x)' to not work
{
	name "invenOverlay"
	align center top
	ignoreesc
	size 1273 710
	
	button{area 763 60 393 102 
	portrait 7
	rectangle 1 rectangle opacity 110 
	enabled "curCharSelect ~= 1" 
	action "Infinity_OnPortraitLClick(0);curCharSelect = 1"
	actiondrag "Infinity_SwapWithPortrait(0)"}
	
	button{
	area 763 168 393 102
	portrait 7
	rectangle 1 rectangle opacity 110 
	enabled "curCharSelect ~= 2 and Infinity_GetNumCharacters() > 1" 
	action "Infinity_OnPortraitLClick(1);curCharSelect = 2"
	actiondrag "Infinity_SwapWithPortrait(1)"}
	
	button{area 763 279 393 102
	portrait 7
	rectangle 1 rectangle opacity 110 
	enabled "curCharSelect ~= 3 and Infinity_GetNumCharacters() > 2" 
	action "Infinity_OnPortraitLClick(2);curCharSelect = 3"
	actiondrag "Infinity_SwapWithPortrait(2)"}
	
	button{area 763 388 393 102
	portrait 7
	rectangle 1 rectangle opacity 110 
	enabled "curCharSelect ~= 4 and Infinity_GetNumCharacters() > 3" 
	action "Infinity_OnPortraitLClick(3);curCharSelect = 4"
	actiondrag "Infinity_SwapWithPortrait(3)"}
	
	button{area 763 497 393 102
	portrait 7
	rectangle 1 rectangle opacity 110 
	enabled "curCharSelect ~= 5 and Infinity_GetNumCharacters() > 4" 
	action "Infinity_OnPortraitLClick(4);curCharSelect = 5"
	actiondrag "Infinity_SwapWithPortrait(4)"}
	
	button{area 763 602 393 102
	portrait 7
	rectangle 1 rectangle opacity 110 
	enabled "curCharSelect ~= 6 and Infinity_GetNumCharacters() > 5" 
	action "Infinity_OnPortraitLClick(5);curCharSelect = 6"
	actiondrag "Infinity_SwapWithPortrait(5)"}

}
`
SLIDER_color_hair_start = 1
SLIDER_color_skin_start = 1
SLIDER_color_major_start = 1
SLIDER_color_minor_start = 1

SLIDER_color_hair = 1
SLIDER_color_skin = 1
SLIDER_color_major = 1
SLIDER_color_minor = 1
`
menu
{
	name 'CHARACTER_COLOR'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	modal
	onOpen
	"
		Infinity_UpdateLuaStats()

		SLIDER_color_hair = characters[id].colors.hair
		SLIDER_color_skin = characters[id].colors.skin
		SLIDER_color_major = characters[id].colors.major
		SLIDER_color_minor = characters[id].colors.minor

		SLIDER_color_hair_start = SLIDER_color_hair
		SLIDER_color_skin_start = SLIDER_color_skin
		SLIDER_color_major_start = SLIDER_color_major
		SLIDER_color_minor_start = SLIDER_color_minor
	"
	onClose
	"
		if(SLIDER_color_hair_start ~= -1) then Infinity_SetHairColor(SLIDER_color_hair_start) end
		if(SLIDER_color_skin_start ~= -1) then Infinity_SetSkinColor(SLIDER_color_skin_start) end
		if(SLIDER_color_major_start ~= -1) then Infinity_SetMajorColor(SLIDER_color_major_start) end
		if(SLIDER_color_minor_start ~= -1) then Infinity_SetMinorColor(SLIDER_color_minor_start) end
	"
	label
	{
		area 0 0 864 710
		mosaic GUICHISE
	}
	label
	{
		area 82 12 700 40
		text "COLOR_CHOICES_TITLE"
		text style "title"
	}

	label
	{
		area 308 192 114 160
		paperdoll 0
	}
	label
	{
		area 442 192 114 160
		paperdoll 1
	}
	label
	{
		area 780 390 42 42
		colordisplay 6
	}
	label
	{
		area 780 436 42 42
		colordisplay 3
	}
	label
	{
		area 780 510 42 42
		colordisplay 2
	}
	label
	{
		area 780 556 42 42
		colordisplay 1
	}
	label
	{
		area 36 352 790 30
		text "APPEARANCE_LABEL"
		text style "label"
		text point 14
	}
	label
	{
		area 36 374 790 26
		text "HAIR_LABEL"
		text style "label"
	}
	slider
	{
		palette 6
		area 46 390 734 42
		bam	 SLDRSTAR
		position "SLIDER_color_hair"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(6)"
		action
		"
			Infinity_SetHairColor(SLIDER_color_hair)
		"
	}
	label
	{
		area 36 420 790 26
		text "SKIN_LABEL"
		text style "label"
	}
	slider
	{
		palette 3
		area 46 436 734 42
		bam	 SLDRSTAR
		position "SLIDER_color_skin"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(3)"
		action
		"
			Infinity_SetSkinColor(SLIDER_color_skin)
		"
	}
	label
	{
		area 36 472 790 30
		text "CLOTHING_LABEL"
		text style "label"
		text point 14
	}
	label
	{
		area 36 494 790 26
		text "MAJOR_LABEL"
		text style "label"
	}
	slider
	{
		palette 2
		area 46 510 734 42
		bam	 SLDRSTAR
		position "SLIDER_color_major"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(2)"
		action
		"
			Infinity_SetMajorColor(SLIDER_color_major)
		"
	}
	label
	{
		area 36 540 790 26
		text "MINOR_LABEL"
		align center center
		text style "label"
	}
	slider
	{
		palette 1
		area 46 556 734 42
		bam	 SLDRSTAR
		position "SLIDER_color_minor"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(1)"
		action
		"
			Infinity_SetMinorColor(SLIDER_color_minor)
		"
	}

	button
	{
		on return
		area 464 653 234 44
		bam GUIOSTUR
		text style "button"
		text "DONE_BUTTON"
		action
		"
			--save settings
			SLIDER_color_hair_start = SLIDER_color_hair
			SLIDER_color_skin_start = SLIDER_color_skin
			SLIDER_color_major_start = SLIDER_color_major
			SLIDER_color_minor_start = SLIDER_color_minor

			if (e:GetActiveEngine() == createCharScreen) then
				createCharScreen:OnDoneButtonClick()
			end

			Infinity_PopMenu('CHARACTER_COLOR')
		"
	}
	button
	{
		on escape
		area 210 653 234 44
		bam GUIOSTUL
		text style "button"
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu('CHARACTER_COLOR')
		"
	}
} 
`
	function getLUSidebarSize()
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		Infinity_SetArea('portraita0',screenWidth*.94, screenHeight*.00825, screenWidth*.0568, screenHeight*.151)
		Infinity_SetArea('portraita1',  screenWidth*.9453, screenHeight*.157, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portraita2', screenWidth*.9453, screenHeight*.292, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portraita3', screenWidth*.9453, screenHeight*.427, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portraita4', screenWidth*.9453, screenHeight*.562, screenWidth*.0515, screenHeight*.138)
		Infinity_SetArea('portraita5', screenWidth*.9453, screenHeight*.697, screenWidth*.0515, screenHeight*.138)
	end
`
menu
{ 
	name 'WORLD_LEVEL_UP_BUTTONS'  
	ignoreesc 
	onOpen
	"
	getLUSidebarSize()
	"
		button 
		{ 
			name "portraita0"
			enabled "Infinity_CanLevelUp(0)" 
			area 1381 6 83 115 
			sequence 0 
			action "Infinity_OnPortraitLClick(0)"
			actionAlt "Infinity_OnPortraitRClick(0)"
			actionDbl "Infinity_OnPortraitDblClick(0)"
			actiondrag "Infinity_SwapWithPortrait()"
			actionEnter "mouseOverPortrait = 0"
			actionExit "mouseOverPortrait = -1"
			actionSimpleDrag "draggedPortrait = 0"
			actionSimpleDrop "swapPortraits(0)"
			tooltip lua "Infinity_GetPortraitTooltip(0)"
			clickable lua "sidebarsGreyed ~= 1"
			pulse 1 
		} 
		button 
		{ 
			name "portraita1"
			enabled "Infinity_CanLevelUp(1)" 
			area 1389 120 75 105 
			sequence 0 
			action "Infinity_OnPortraitLClick(1)"
			actionAlt "Infinity_OnPortraitRClick(1)"
			actionDbl "Infinity_OnPortraitDblClick(1)"
			actiondrag "Infinity_SwapWithPortrait(1)"
			actionEnter "mouseOverPortrait = 1"
			actionExit "mouseOverPortrait = -1"
			actionSimpleDrag "draggedPortrait = 1"
			actionSimpleDrop "swapPortraits(1)"
			tooltip lua "Infinity_GetPortraitTooltip(1)"
			clickable lua "sidebarsGreyed ~= 1"
			pulse 1 
		} 
		button 
		{ 
			name "portraita2"
			enabled "Infinity_CanLevelUp(2)" 
			area 1389 224 75 105 
			sequence 0 
			action "Infinity_OnPortraitLClick(2)"
			actionAlt "Infinity_OnPortraitRClick(2)"
			actionDbl "Infinity_OnPortraitDblClick(2)"
			actiondrag "Infinity_SwapWithPortrait(2)"
			actionEnter "mouseOverPortrait = 2"
			actionExit "mouseOverPortrait = -1"
			actionSimpleDrag "draggedPortrait = 2"
			actionSimpleDrop "swapPortraits(2)"
			tooltip lua "Infinity_GetPortraitTooltip(2)"
			clickable lua "sidebarsGreyed ~= 1"
			pulse 1 
		} 
		button 
		{ 
			name "portraita3"
			enabled "Infinity_CanLevelUp(3)" 
			area 1389 327 75 105 
			sequence 0 
			action "Infinity_OnPortraitLClick(3)"
			actionAlt "Infinity_OnPortraitRClick(3)"
			actionDbl "Infinity_OnPortraitDblClick(3)"
			actiondrag "Infinity_SwapWithPortrait(3)"
			actionEnter "mouseOverPortrait = 3"
			actionExit "mouseOverPortrait = -1"
			actionSimpleDrag "draggedPortrait = 3"
			actionSimpleDrop "swapPortraits(3)"
			tooltip lua "Infinity_GetPortraitTooltip(3)"
			clickable lua "sidebarsGreyed ~= 1" 
			pulse 1 
		} 
		button 
		{ 
			name "portraita4"
			enabled "Infinity_CanLevelUp(4)" 
			area 1389 431 75 105 
			sequence 0 
			action "Infinity_OnPortraitLClick(4)"
			actionAlt "Infinity_OnPortraitRClick(4)"
			actionDbl "Infinity_OnPortraitDblClick(4)"
			actiondrag "Infinity_SwapWithPortrait()"
			actionEnter "mouseOverPortrait = 4"
			actionExit "mouseOverPortrait = -1"
			actionSimpleDrag "draggedPortrait = 4"
			actionSimpleDrop "swapPortraits(4)"
			tooltip lua "Infinity_GetPortraitTooltip(4)"
			clickable lua "sidebarsGreyed ~= 1"
			pulse 1 
		} 
		button 
		{ 
			name "portraita5"
			enabled "Infinity_CanLevelUp(5)" 
			area 1389 535 75 105 
			sequence 0 
			action "Infinity_OnPortraitLClick(5)"
			actionAlt "Infinity_OnPortraitRClick(5)"
			actionDbl "Infinity_OnPortraitDblClick(5)"
			actiondrag "Infinity_SwapWithPortrait(5)"
			actionEnter "mouseOverPortrait = 5"
			actionExit "mouseOverPortrait = -1"
			actionSimpleDrag "draggedPortrait = 5"
			actionSimpleDrop "swapPortraits(5)"
			tooltip lua "Infinity_GetPortraitTooltip(5)"
			clickable lua "sidebarsGreyed ~= 1"
			pulse 1 
		} 
}

`
function findQuestPopUp()
	FindTitle = string.sub(FindTitle,1,15)
	for i=1,#questDisplay,1 do
		local rowTab =  questDisplay[i]
		local text = Infinity_FetchString(rowTab.text)
		if string.find(string.lower(text), string.lower(FindTitle)) then
			questDisplay[i].expanded = 1
			questDisplay[i+1].expanded = 1
			journalMode = 0
		end
	end
end

function CheckForOpenedQuests()
	QuestOpen = 0
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == 1  then
			QuestOpen = 1
		end
	end
end

function CloseAll()
	for i=1,#questDisplay,1 do
		if questDisplay[i].expanded == 1 then questDisplay[i].expanded = nil end
	end
end

function hasMatchingJournal()
	FindTitle = string.sub(getSubtitleString(),1,15)
	for i=1,#questDisplay,1 do
		local rowTab =  questDisplay[i]
		local text = Infinity_FetchString(rowTab.text)
		if string.find(string.lower(text), string.lower(FindTitle)) then
			return 1
		end
	end
	return nil
end

function getNewTitle()
	if hasMatchingJournal() then
		return '^C' .. getTitleString() .. '^-\n^D' .. getSubtitleString() .. '^-'
	else
		return '^D' .. getSubtitleString() .. '^-'
	end
end
`

menu
{
	name 'textflash' --text flash, journal message, textflash
	opacity lua 'getOpacityForInfoBlock(1000)'
	enabled 'getOpacityForInfoBlock(1000) ~= 0'
	align center top
	offset 0 10
	ignoreesc

	label
	{
		area 0 0 500 140	
		rectangle 4
		rectangle opacity 200 
	}
	label
	{
		area 92 10 348 26
		text lua "getTitleString()"
		text style "label"
		text align left center
		text point 14
		text color C
	}
	text
	{
		area 92 36 348 26
		text lua "getSubtitleString()"
		text style "label"
		text align left center
		text point 14
		text color D
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}

	text
	{
		area 20 64 472 62
		text lua "getBodyString()"
		text style "normal"
		text align left top
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}
	label
	{
		area 16 9 72 55
		bam 'GUILS10'
		sequence 2
		frame 0
	}
	button
	{
		area 0 0 500 140
		action
		"
			FindTitle = getSubtitleString()
			if (sidebarsGreyed ~= 1) then
				if journalOpen ~= 1 then
					e:GetActiveEngine():OnLeftPanelButtonClick(2)
				end
				journalMode = 0
				local tf = next(textflashes)
				setSelectedQuest(textflashes[tf][5])
				--CloseAll()
				findQuestPopUp()
				CheckForOpenedQuests()
			end
		"
	}
	button
	{
		bam GUIOSW
		on escape
		area 448 4 44 44
		sequence 2
		action 
		"
			--end the animation
			local tf = next(textflashes)
			textflashes[tf] = nil
		"
	}
}


`
luaEdit = ""
luaEditDebugDump = 0
luaEditHistory = luaEditHistory and luaEditHistory or {}
luaEditMaxHistory = 20
luaEditHistoryIndex = 0
luaEditShowHistoryList = 0
luaEditHistoryListSelected = 0
function updateLuaHistory()
	local i = 2
	local tempTab = {}
	tempTab[1] = luaEdit
	while ( i <= luaEditMaxHistory ) do
		tempTab[i] = luaEditHistory[i-1]
		i = i + 1
	end
	luaEditHistory = tempTab
end

ConsoleSearch = ""
function ConsoleContainsSearchString(rowNumber)
	
	if(ConsoleSearch == nil or ConsoleSearch == "") then return 1 end --no search string, do nothing
	
	local CnS = cheatAreaDisplayList[rowNumber][1]
	local CnS2 = cheatAreaDisplayList[rowNumber][2]
	if(string.find(string.lower(CnS),string.lower(ConsoleSearch))) then
		return 1
		else
	if(string.find(string.lower(CnS2),string.lower(ConsoleSearch))) then
	return 1
		else
	return nil
		end
	end

end


function loadLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		luaEditHistory[i] = Infinity_GetINIString("Lua Edit","String"..i-1, "")
		i = i + 1
	end
end
function saveLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		Infinity_SetINIValue("Lua Edit","String"..i-1, luaEditHistory[i])
		i = i + 1
	end
end
function luaEditHistoryUp()
	if(luaEditHistoryIndex <= 1) then return end
	luaEditHistoryIndex = luaEditHistoryIndex - 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end

		
function luaEditHistoryDown()
	if(luaEditHistoryIndex == luaEditMaxHistory) then return end
	if(luaEditHistory[luaEditHistoryIndex + 1] == "") then return end
	luaEditHistoryIndex = luaEditHistoryIndex + 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end

cheatGoldAmt = ""
cheatXpAmt = ""
cheatTeleportArea = 0

function CMenuScroll(top, height, contentHeight)
	if scrollCMenu ~= nil then
		top = top - 10 * scrollCMenu
		top = math.min(top, 0)
		top = math.max(top, height - contentHeight)
		scrollCMenu = nil
		return top
	end
	return nil
end

function scrollConsoleMenu() 
	if scrollDirection > 0 then 
		cheatTeleportArea = cheatTeleportArea - 1
	end
	if scrollDirection < 0 then 
		cheatTeleportArea = cheatTeleportArea + 1
	end 
end

function B3CalcEnabledRowNum(visibleRowNum)
    local currentVisibleRow = 0
    for i = 1, #cheatAreaDisplayList, 1 do
        if ConsoleContainsSearchString(i) then
            currentVisibleRow = currentVisibleRow + 1
            if currentVisibleRow == visibleRowNum then
                return i
            end
        end
    end
    return -1
end

function resizeLuaEdit()
	Infinity_ScaleToText('luaEditArea')
	local x,y,w,h = Infinity_GetArea('luaEditArea')
	local luaT = 0
	
	if h < 28 then
		Infinity_SetArea('luaEditArea',nil,nil,nil,28)
	elseif h > 28 then
		luaT = h + 32
		Infinity_SetArea('luaTextBG',nil,nil,nil,luaT)
	end
	
	
	if luaEdit == '' and h ~= 28 then
		Infinity_SetArea('luaEditArea',nil,nil,nil,28)
		Infinity_SetArea('luaTextBG',nil,nil,nil,60)
	end
end


`
menu
{
	name 'cheatMenu' --console menu, lua menu
	label {area 0 0 0 0}
}
`
consoleOther = 0
consoleOtherList = {
{'  CONSOLE:',''},
{'Strrefs On','C:StrrefOn()'},
{'Sttrefs Off','C:StrrefOff()'},
{'Force Save','C:Eval("SaveGame(1)")'},
{'Rest All','for i = 0, 5, 1 do C:Eval("Rest()", i) end'},
{'',''},
{'     MODS:',''},
{'SCS Difficulty','C:Eval("CreateCreatureObject(\"dw#diffi\",Player1,0,0,0)")'},
{'SCS MAX-ON','C:Exec("scsgon.txt")'},
{'SCS MAX-OFF','C:Exec("scsgoff.txt")'},
}

SCSRemoved = 0

function removeOneVarFromList(list, option)
	local startingPoint = 1
	local found = false
	for index = 1, #list, 1 do
		if list[index][1] == option then
			startingPoint = index
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list, 1 do
			list[index] = list[index+1]
		end
		list[#list] = nil
	end
end

function optExistsOneVarInList(list, option)
	local found = false
	for index = 1, #list-1, 1 do
		if list[index][1] == option then
			found = true
			break
		end
	end
	return found
end

`
menu
{
	name "luaHistoryMenu"
	label {area 0 0 0 0}
}

menu
{
	name 'cheatConsole' --reset ui, ctrl space ui reset
	label {area 0 0 0 0}
}

`
cloudLoadState=0
function CheckCloudSaveStatus()
	Infinity_UpdateCloudSaveState()
	if(cloudLoadState == 0) then
		Infinity_PopMenu()
	end
	return GetCloudLoadingText()
end
function GetCloudLoadingText()
	if(cloudLoadState == 1 or cloudLoadState == 0) then
		return t('DOWNLOADING_SAVE_NORMAL')
	end
	if(cloudLoadState == 2) then
		return t('SEARCHING_SAVE_NORMAL')
	end
	return t('CLOUD_STATE_UNDEFINED_NORMAL')
end
`
menu
{
	name 'CloudSaveUpdateMenu'
	modal
	label
	{
		area 0 0 408 418
		mosaic GUIERR
	}
	label 
	{
		area 82 74 242 88
		text lua "CheckCloudSaveStatus()"
		text style "label"
	}
	button
	{
		area 		102 318 200 44
		bam 		GUIOSTUM
		sequence	0
		text		"SKIP_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			Infinity_PopMenu()
		"	
	}
}
`
messageBoxCurMessage = nil
messageBoxMessages = {}
function initMessageBox(message)
	messageBoxMessages[message] = 1
	if(messageBoxCurMessage ~= nil) then
		--message box already active
		return
	end
	getNextMessage()
	Infinity_PushMenu('LuaMessageBox',0,0)
end

function getNextMessage()
	i = 1
	while ( i <= messageBoxMessageCount ) do
		showMessage = messageBoxMessages[i]
		if ( showMessage ~= nil ) then
			messageBoxCurMessage = i
			return 1
		end
		i = i + 1
	end
	--whole table scanned, all messages have been displayed
	return 0
end
`
menu
{
	name 'LuaMessageBox'
	align center center
	ignoreesc
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6
	}
	label
	{
		area 29 21 580 126
		text lua "messages[messageBoxCurMessage]"
		text style	"label"
	}
	button
	{
		area 213 170 230 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style	"button"
		action
		"
			messageBoxMessages[messageBoxCurMessage] = nil
			if(getNextMessage() == 0) then
				messageBoxCurMessage = nil
				Infinity_PopMenu()
			end
		"	
	}
}

`
	partyImport = {}
`
menu
{
	name 'IMPORTPARTY'
	align center center
	offset 15 0 --offset 178 0
	label 
	{
		mosaic 'GMPCARBD'
		area 0 0 1024 768
	}
	label
	{
		area 162 16 700 44
		text "CREATE_PARTY_TITLE"
		text style "title"
	}
	label
	{
		enabled		"game:GetMissionPackInfoTBP()"
		area 		54 584 902 62
		scrollbar	'GUISCRC'
		text style	"normal"
		text 			69563
	}

	--portraits
	label
	{
		area 67 180 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 71 182 56 86
		bitmap lua "partyImport.character[1].portrait"
		clickable lua "partyImport.character[1].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(0)
		"
	}
	label
	{
		area 67 315 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 71 317 56 86
		bitmap lua "partyImport.character[2].portrait"
		clickable lua "partyImport.character[2].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(1)
		"
	}
	label
	{
		area 67 454 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 71 456 56 86
		bitmap lua "partyImport.character[3].portrait"
		clickable lua "partyImport.character[3].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(2)
		"
	}
	label
	{
		area 557 180 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 561 182 56 86
		bitmap lua "partyImport.character[4].portrait"
		clickable lua "partyImport.character[4].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(3)
		"
	}
	label
	{
		area 557 315 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 561 317 56 86
		bitmap lua "partyImport.character[5].portrait"
		clickable lua "partyImport.character[5].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(4)
		"
	}
	label
	{
		area 557 454 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 561 456 56 86
		bitmap lua "partyImport.character[6].portrait"
		clickable lua "partyImport.character[6].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(5)
		"
	}

	button
	{
		area 528 720 204 44
		bam 'GUIOSTUM'
		sequence 1
		text "PLAY_IMPORT_BUTTON" -- Play
		text style 'button'
		clickable lua "partyImport.playbuttonclickable"
		action 
		"
			createPartyScreen:OnDoneButtonClick()
		"
	}
	button
	{
		on escape
		area 306 720 204 44
		bam 'GUIOSTUM'
		sequence 0
		text "BACK_BUTTON" -- Back
		text style 'button'
		action 
		"
			createPartyScreen:OnBackButtonClick()
		"
	}

	--delete/create buttons
	button
	{
		area 155 180 300 44
		bam 'GUIOSTCL'
		sequence 0
		text lua "partyImport.character[1].createdelete"
		text style "button"
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(0)
		"
	}
	button
	{
		area 155 317 300 44
		bam 'GUIOSTCL'
		sequence 2
		text lua "partyImport.character[2].createdelete"
		text style "button"
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(1)
		"
	}
	button
	{
		area 155 452 300 44
		bam 'GUIOSTCL'
		sequence 1
		text lua "partyImport.character[3].createdelete"
		text style "button"
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(2)
		"
	}
	button
	{
		area 645 180 300 44
		bam 'GUIOSTCL'
		sequence 0
		text lua "partyImport.character[4].createdelete"
		text style "button"
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(3)
		"
	}
	button
	{
		area 645 317 300 44
		bam 'GUIOSTCL'
		sequence 2
		text lua "partyImport.character[5].createdelete"
		text style "button"
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(4)
		"
	}
	button
	{
		area 645 452 300 44
		bam 'GUIOSTCL'
		sequence 1
		text lua "partyImport.character[6].createdelete"
		text style "button"
		action
		"
			createPartyScreen:OnCreateDeleteButtonClick(5)
		"
	}

	-- character labels
	label
	{
		area 155 228 314 50
		text lua "partyImport.character[1].name"
		text style "title"
	}
	label
	{
		area 155 365 314 50
		text lua "partyImport.character[2].name"
		text style "title"
	}
	label
	{
		area 155 500 314 50
		text lua "partyImport.character[3].name"
		text style "title"
	}
	label
	{
		area 645 228 314 50
		text lua "partyImport.character[4].name"
		text style "title"
	}
	label
	{
		area 645 365 314 50
		text lua "partyImport.character[5].name"
		text style "title"
	}
	label
	{
		area 645 500 314 50
		text lua "partyImport.character[6].name"
		text style "title"
	}
}

menu
{
	name 'START_INSTALLATION_WARNING'
	align center center
	--ignoreEsc
	modal
	
	label
	{
		area 0 0 672 672
		mosaic "RECENTEV"
	}
	label
	{
		area 158 32 354 46
		text style "title"
		text lua "eetStrings.EET_WARNING_TITLE"
	}
	label
	{
		area 126 106 422 458
		text style "normal"
		text lua "eetStrings.EET_WARNING_TEXT"
	}
}

menu
{
	name 'START_CAMPAIGN_SELECT' -- campaign select
	align center center
	--ignoreEsc
	modal
	
	label
	{
		area 0 0 820 427
		mosaic 'STARTBG2'
	}
	
	list
	{
		column 
		{ 
			width 15
			label
			{
				area	0 0 -1 -1
				bam "CMPGEET"
				sequence lua 'startCampaignData[rowNumber].icon'
				align	center center
			}
		}
		column 
		{ 
			width 85
			label
			{
				area		0 0 -1 -1
				text lua "getEETTitle(rowNumber)"
				text style "normal_parchment"
				text align left center
			}
		}
		
		area 83 25 316 384
		
		rowheight	40
		--hideHighlight
		table		"startCampaignData"
		var		selectedOpt
		scrollbar	'GUISCRP'
		action		"
			onCampaignButton(selectedOpt)
			selectedOpt = 0
			startEngine:DismissChooseCampaignPopup()
		"
		actionEnter
		"
			if mouseoverRow > 0 then
				highlightedCampaign = mouseoverRow
			end
			glowTest = mouseoverRow
			selectedOpt = mouseoverRow
		"
		actionExit
		"
			glowTest = nil
			--highlightedCampaign = nil
			selectedOpt = 0
		"
	}
	
	text
	{
		name		"campaignBookDescription"
		area		426 25 316 384
		text lua	"getEETDescription(highlightedCampaign)"
		text style	"normal_parchment"
		scrollbar	'GUISCRP'
	}
}

`
	function getTitle()
		return startCampaignData[currentCampaign].title
	end
	
	function getBigLogo()
		return startCampaignData[currentCampaign].bigLogo
	end
	
	function getCampaignButtonSequence()
		return startCampaignData[currentCampaign].button
	end
	
	function getEETTitle(row)
		local text = startCampaignData[row].name
		return eetStrings[text]
	end
	
	function getEETDescription(row)
		local text = startCampaignData[row].description
		return eetStrings[text]
	end
	
	function onCampaignButton(buttonNum)
		if buttonNum == 1 then
			startEngine:OnSoAButtonClick(true)
			Infinity_SetINIValue('Program Options','Active Campaign',buttonNum)
		elseif buttonNum == 2 then
			startEngine:OnCampaignButtonClick('SOD',true)
			Infinity_SetINIValue('Program Options','Active Campaign',buttonNum)
		elseif buttonNum == 3 then
			startEngine:OnTBPButtonClick(true)
			Infinity_SetINIValue('Program Options','Active Campaign',buttonNum)
		--else
		--	startEngine:OnSoAButtonClick(true)
		--	Infinity_SetINIValue('Program Options','Active Campaign',const.START_CAMPAIGN_BG)
		end
		currentCampaign = buttonNum
	end
	
	function getCampaignImportEnabled()
		return startCampaignData[currentCampaign].importEnabled	
	end
	
	function getTutorialEnabled()
		--Tutorial and campaign import should never be enabled for the same campaign - the button uses the same space
		return startCampaignData[currentCampaign].tutorialEnabled	
	end
	
	function getSidebarFrame()
		return startCampaignData[currentCampaign].sidebar
	end
	
	function getMenuPanelArea()
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		Infinity_SetArea('MenuButton1', screenWidth*.73, screenHeight*.32, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('MenuButton2', screenWidth*.73, screenHeight*.38, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('MenuButton3', screenWidth*.73, screenHeight*.44, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('MenuButton4', screenWidth*.73, screenHeight*.50, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('MenuButton5', screenWidth*.73, screenHeight*.56, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('MenuButton6', screenWidth*.73, screenHeight*.62, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('MenuButton7', screenWidth*.73, screenHeight*.68, screenWidth*.143, screenHeight*.058)
		Infinity_SetArea('Title', screenWidth*.63, screenHeight*.1, screenWidth*.3405, screenHeight*.131)
		Infinity_SetArea('MBLogo', screenWidth*.02, screenHeight*.65, screenWidth*.166, screenHeight*.30)
	end
	
function Y5CurrentScreen()

	local screenVars = {
		"CHARACTER","CHARACTER_CUSTOMIZE","CHARACTER_INFORMATION",
		"CHARACTER_BIO","CHARACTER_KIT","CHARACTER_BIOGRAPHY",
		"CHARACTER_SCRIPT","CHARACTER_EXPORT","CHARACTER_SOUND",
		"OPTIONS_GAMEPLAY","OPTIONS_GRAPHICS","OPTIONS_AUTOPAUSE",
		"OPTIONS_SOUND","OPTIONS_FEEDBACK","OPTIONS_KEYBINDINGS",
		"CREDITS","OPTIONS_LANGUAGE","QuitMenu",
		"POPUP_REQUESTER","ITEM_ABILITIES","POPUP_INFO",
		"POPUP_TWOBUTTON","POPUP_THREEBUTTON","POPUP_FOURBUTTON",
		"ITEM_DESCRIPTION","LEFT_SIDEBAR_HIDDEN","RIGHT_SIDEBAR",
		"RIGHT_SIDEBAR_BOTTOM","RIGHT_SIDEBAR_HIDDEN","INVENTORY",
		"CHARACTER_COLOR","textflash","cheatMenu",
		"luaHistoryMenu","cheatConsole","CloudSaveUpdateMenu",
		"LuaMessageBox","IMPORTPARTY","START_INSTALLATION_WARNING",
		"START_CAMPAIGN_SELECT","STACK_MENU","START",
		"MAGE","MAGE_CONTINGENCY","POPUP_DETAILS",
		"PRIEST","ESC_MENU","OVERLAY_ESC",
		"START_OPTIONS","AREA_MAP_TITLE","AREA_MAP",
		"NOTE_ADD","WORLD_MAP","CHAPTER",
		"EPILOGUE","CHAPTER_WAITING_FOR_PROVIDER","STORE_BUYSELL",
		"STORE_IDENTIFY","STORE_DONATE","STORE_ROOMS",
		"STORE_HEALING","STORE_DRINKS","STORE_CHOOSER",
		"ACTIONBAR","WORLD_DEATH","WORLD_ACTIONBAR",
		"WORLD_CONTAINER","WORLD_PICKPARTY","LOAD",
		"SAVE","SAVE_NEWSAVE","OVERLAY_MESSAGES",
		"WORLD_MESSAGES","WORLD_DIALOG","OVERLAY_PORTRAIT",
		"optDialogM","WORLD_DIALOG_CONFIRM","CHARACTER_SELECT",
		"CHARGEN","CHARGEN_GENDER","CHARACTER_PORTRAIT",
		"CHARGEN_PORTRAIT","CHARGEN_RACE","CHARGEN_CLASS",
		"CHARGEN_KIT","CHARGEN_ALIGNMENT","CHARGEN_ABILITIES",
		"CHARGEN_PROFICIENCIES","CHARGEN_CHOOSE_SPELLS","CHARGEN_MEMORIZE_MAGE",
		"CHARGEN_MEMORIZE_PRIEST","CHARGEN_CUSTOMSOUNDS","CHARGEN_HATEDRACE",
		"CHARGEN_NAME","CHARGEN_BIO","CHARGEN_IMPORT",
		"CHARGEN_EXPORT","CHARGEN_DUALCLASS","CHARGEN_DIFFICULTY",
		"CHARGEN_HIGH_LEVEL_ABILITIES","POPUP_BIG","MOVIES",
		"CONNECTION","CONNECTION_IP","CONNECTION_CREATE",
		"CONNECTION_NEWORSAVED","CONNECTION_PASSWORD","CONNECTION_NAME",
		"CONNECTION_PLAYERNAME","CONNECTION_JOINING","CONNECTION_ERROR",
		"CONNECTION_WAITING_FOR_PROVIDER","CONNECTION_WAITING_FOR_SERVER","BACKGROUND",
		"MULTIPLAYER","MP_PERMISSIONS","MP_OPTIONS",
		"MP_PICKPLAYER","MP_MODIFYCHARACTER","MP_ERRORONE",
		"MP_ERRORTWO","REFRESHMENU","MP_CHAT_OVERLAY",
		"JOURNAL","MESSAGE_SCREEN","START_DLC",
		"START_DLC_STATUS","WORLD_DIALOG_LEFT","WORLD_DIALOG_LEFT_BUTTONS",
		"WORLD_DIALOG_RIGHT","WORLD_DIALOG_RIGHT_BUTTONS","HELP",
		"LEFT_SIDEBAR_HELP","LEFT_SIDEBAR_BOTTOM_HELP","RIGHT_SIDEBAR_HELP",
		"RIGHT_SIDEBAR_BOTTOM_HELP","WORLD_ACTIONBAR_HELP","OVERLAY_CHARACTER",
		"WORLD_QUICKLOOT","OVERLAY_MAIN",
		}
	
	for i, v in pairs(screenVars) do
		if Infinity_GetCurrentScreenName() == v then
			return v
		end
	end
	
	return "CURRENT SCREEN NIL"

end

function Y5AllScreens()
local a = 0
local t = {}

	local screenVars = {
		"CHARACTER","CHARACTER_CUSTOMIZE","CHARACTER_INFORMATION",
		"CHARACTER_BIO","CHARACTER_KIT","CHARACTER_BIOGRAPHY",
		"CHARACTER_SCRIPT","CHARACTER_EXPORT","CHARACTER_SOUND",
		"OPTIONS_GAMEPLAY","OPTIONS_GRAPHICS","OPTIONS_AUTOPAUSE",
		"OPTIONS_SOUND","OPTIONS_FEEDBACK","OPTIONS_KEYBINDINGS",
		"CREDITS","OPTIONS_LANGUAGE","QuitMenu",
		"POPUP_REQUESTER","ITEM_ABILITIES","POPUP_INFO",
		"POPUP_TWOBUTTON","POPUP_THREEBUTTON","POPUP_FOURBUTTON",
		"ITEM_DESCRIPTION","LEFT_SIDEBAR_HIDDEN","RIGHT_SIDEBAR",
		"RIGHT_SIDEBAR_BOTTOM","RIGHT_SIDEBAR_HIDDEN","INVENTORY",
		"CHARACTER_COLOR","textflash","cheatMenu",
		"luaHistoryMenu","cheatConsole","CloudSaveUpdateMenu",
		"LuaMessageBox","IMPORTPARTY","START_INSTALLATION_WARNING",
		"START_CAMPAIGN_SELECT","STACK_MENU","START",
		"MAGE","MAGE_CONTINGENCY","POPUP_DETAILS",
		"PRIEST","ESC_MENU","OVERLAY_ESC",
		"START_OPTIONS","AREA_MAP_TITLE","AREA_MAP",
		"NOTE_ADD","WORLD_MAP","CHAPTER",
		"EPILOGUE","CHAPTER_WAITING_FOR_PROVIDER","STORE_BUYSELL",
		"STORE_IDENTIFY","STORE_DONATE","STORE_ROOMS",
		"STORE_HEALING","STORE_DRINKS","STORE_CHOOSER",
		"ACTIONBAR","WORLD_DEATH","WORLD_ACTIONBAR",
		"WORLD_CONTAINER","WORLD_PICKPARTY","LOAD",
		"SAVE","SAVE_NEWSAVE","OVERLAY_MESSAGES",
		"WORLD_MESSAGES","WORLD_DIALOG","OVERLAY_PORTRAIT",
		"optDialogM","WORLD_DIALOG_CONFIRM","CHARACTER_SELECT",
		"CHARGEN","CHARGEN_GENDER","CHARACTER_PORTRAIT",
		"CHARGEN_PORTRAIT","CHARGEN_RACE","CHARGEN_CLASS",
		"CHARGEN_KIT","CHARGEN_ALIGNMENT","CHARGEN_ABILITIES",
		"CHARGEN_PROFICIENCIES","CHARGEN_CHOOSE_SPELLS","CHARGEN_MEMORIZE_MAGE",
		"CHARGEN_MEMORIZE_PRIEST","CHARGEN_CUSTOMSOUNDS","CHARGEN_HATEDRACE",
		"CHARGEN_NAME","CHARGEN_BIO","CHARGEN_IMPORT",
		"CHARGEN_EXPORT","CHARGEN_DUALCLASS","CHARGEN_DIFFICULTY",
		"CHARGEN_HIGH_LEVEL_ABILITIES","POPUP_BIG","MOVIES",
		"CONNECTION","CONNECTION_IP","CONNECTION_CREATE",
		"CONNECTION_NEWORSAVED","CONNECTION_PASSWORD","CONNECTION_NAME",
		"CONNECTION_PLAYERNAME","CONNECTION_JOINING","CONNECTION_ERROR",
		"CONNECTION_WAITING_FOR_PROVIDER","CONNECTION_WAITING_FOR_SERVER","BACKGROUND",
		"MULTIPLAYER","MP_PERMISSIONS","MP_OPTIONS",
		"MP_PICKPLAYER","MP_MODIFYCHARACTER","MP_ERRORONE",
		"MP_ERRORTWO","REFRESHMENU","MP_CHAT_OVERLAY",
		"JOURNAL","MESSAGE_SCREEN","START_DLC",
		"START_DLC_STATUS","WORLD_DIALOG_LEFT","WORLD_DIALOG_LEFT_BUTTONS",
		"WORLD_DIALOG_RIGHT","WORLD_DIALOG_RIGHT_BUTTONS","HELP",
		"LEFT_SIDEBAR_HELP","LEFT_SIDEBAR_BOTTOM_HELP","RIGHT_SIDEBAR_HELP",
		"RIGHT_SIDEBAR_BOTTOM_HELP","WORLD_ACTIONBAR_HELP","OVERLAY_CHARACTER",
		"WORLD_QUICKLOOT","OVERLAY_MAIN",
		}
	
	for i, v in pairs(screenVars) do
		if Infinity_IsMenuOnStack(v) == 1 then
			a = 1
			print(v)
		end
	end
	if a ~= 1 then
		print('CURRENT MENUS NIL')
	end

end

function CLEARALLMENUS()
	
	print('func CLEARALLMENUS\n ')
	if evalGameNew == 0 then
		evalGameNew = 1
	end
	while Infinity_GetCurrentScreenName() ~= "" do
		print(Y5CurrentScreen())
		Infinity_PopMenu()
	end
	if e:GetActiveEngine() == startEngine then
		Infinity_PushMenu('STACK_MENU')
		e:SelectEngine(startEngine)
		Infinity_SetOverlay('OVERLAY_MAIN')
	end
	if e:GetActiveEngine() == worldScreen then
		Infinity_PushMenu('STACK_MENU')
		e:SelectEngine(worldScreen)
		Infinity_SetOverlay('OVERLAY_MAIN')
	end
end

curActiveEngine = 0
curSeeChat3 = 0
evalOverlay = 0
evalGameNew = 0
optionSeeLua = 0
evalRunStack = 0
ovrEngineTime = 0
ovrEvalTime = 0
ovrStartReset = 0
curSeeLua = 0

function evaluateEngine()

	if evalRunStack == 1 then
		if e:GetActiveEngine() == curActiveEngine then
			return
		else
			--print('func evaluateEngine')
			curActiveEngine = e:GetActiveEngine()
			overlayContent()
		end
	elseif evalRunStack == 0 and ovrStartReset == 0 then
			ovrEngineTime = Infinity_GetClockTicks() + 1000
			ovrEvalTime = Infinity_GetClockTicks() + 850
			ovrStartReset = 1
	elseif evalRunStack == 0 and ovrStartReset == 1 then
		if Infinity_GetClockTicks() <= ovrEngineTime then
			if Infinity_GetClockTicks() >= ovrEvalTime then
				if evalOverlay == 0 then
					ovrEngineTime = 0
					ovrEvalTime = 0
					ovrStartReset = 2
					Infinity_PushMenu('REFRESHMENU')
				end
			end
		end	
	end
	
end

function overlayContent()

	if optionSeeChat3 ~= 1 then
		curSeeChat3 = 0
	elseif curActiveEngine == inventoryScreen or curActiveEngine == mageScreen or curActiveEngine == priestScreen or curActiveEngine == worldMapScreen or curActiveEngine == mapScreen or curActiveEngine == storeScreen then
		curSeeChat3 = 1
	elseif curActiveEngine == createCharScreen and e:IsMultiplayer() or curActiveEngine == saveScreen and e:IsMultiplayer() and multiplayerFromInGame or curActiveEngine == loadScreen and e:IsMultiplayer() or curActiveEngine == chapterScreen and e:IsMultiplayer() then
		curSeeChat3 = 1
	else		
		curSeeChat3 = 0
	end
	
	if Infinity_IsMenuOnStack('OPTIONS_GAMEPLAY') and not e:IsMultiplayer() then
		curSeeLua = 0
	elseif curActiveEngine ~= startEngine and curActiveEngine ~= connectionScreen then 
		curSeeLua = 1
	else
		curSeeLua = 0
	end
	
	if Infinity_IsMenuOnStack('OVERLAY_MESSAGES') and curActiveEngine ~= worldScreen then
		Infinity_PopMenu('OVERLAY_MESSAGES')
		setWorldMessages = 0
	end
		
	if Infinity_IsMenuOnStack('OVERLAY_PORTRAIT') then
		if Infinity_IsMenuOnStack('AREA_MAP') or Infinity_IsMenuOnStack('WORLD_MAP') then
		else
			Infinity_PopMenu('OVERLAY_PORTRAIT')
		end
	end
	
	if Infinity_IsMenuOnStack('JOURNAL') or Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
		if Infinity_IsMenuOnStack('JOURNAL') then
			Infinity_PopMenu('JOURNAL')
		elseif Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
			Infinity_PopMenu('OVERLAY_CHARACTER')
		end
	end
	
	if curActiveEngine == startEngine or curActiveEngine == loadScreen or curActiveEngine == multiplayerScreen then
		Infinity_SetINIValue('Y5 Options','Toggle Buttons',0)
		if aiButtonToggle == 1 then
			if Infinity_GetINIValue('Y5 Options','AI Enabled') ~= 1 then
				Infinity_SetINIValue('Y5 Options','AI Enabled',1)
			end
		elseif aiButtonToggle == 0 then
			if Infinity_GetINIValue('Y5 Options','AI Enabled') ~= 0 then
				Infinity_SetINIValue('Y5 Options','AI Enabled',0)
			end
		end
	end

end
`
menu
{
	name 'STACK_MENU'-- bottom menu, overlay bottom, stack menu, this menu gets put lowest on stack, the lowest menu gets rendered first, however with Infinity_SetOverlay, input actions such as mouse clicks etc, get handled first on the highest stack menu, or the most recent one.
	ignoreesc
	label {enabled "evaluateEngine()"}
}
`
startCampaignData = {
	{id = 'BG', name = 'EET_CMP_TITLE_BG1', description = 'EET_CMP_TEXT_BG1', title = 0, bigLogo = 0, icon = 0, background = 2, button = 2, sidebar = 2, importEnabled = false, tutorialEnabled = false, forceParty = false, cheatAreasTable = cheatAreas},
	{id = 'SOD', name = 'EET_CMP_TITLE_SOD', description = 'EET_CMP_TEXT_SOD', title = 1, bigLogo = 1, icon = 1, background = 2, button = 2, sidebar = 2, importEnabled = true, tutorialEnabled = false, forceParty = false, cheatAreasTable = cheatAreasExpansion},
	{id = 'BP', name = 'EET_CMP_TITLE_BP1', description = 'EET_CMP_TEXT_BP1', title = 4, bigLogo = 4, icon = 4, background = 2, button = 2, sidebar = 2, importEnabled = false, tutorialEnabled = false, forceParty = false, cheatAreasTable = cheatAreasArena},
	
	--{id = 'TUT', name = 'EET_CMP_TITLE_TUT', description = 'EET_CMP_TEXT_TUT', title = 6, bigLogo = 6, icon = 6, background = 2, button = 2, sidebar = 2, importEnabled = false, tutorialEnabled = false, forceParty = false, cheatAreasTable = cheatAreasTutorial},
}
`
menu
{
	name 'START' --start menu
	ignoreesc
	onOpen 
	"
		-- this sets missing baldur.lua options so the game doesn't error out, it uses a string to check the value, and defaults it otherwise if it doesn't exist. after that it's compared to a preset value
		local ui_exCurGame = '1'
		local ui_ex = Infinity_GetINIString('Y5 Options','ui_ex',0)
		if ui_ex ~= ui_exCurGame then
			Infinity_SetINIValue('Y5 Options','ui_ex','1')
			Infinity_SetINIValue('Multiplayer','Enable Chat Menu',0)
			Infinity_SetINIValue('Game Options','Show AOE',1)
			Infinity_SetINIValue('Program Options','Path Search Nodes',400000)
			Infinity_SetINIValue('Y5 Options','worldChat Toggle',0)
			Infinity_SetINIValue('Y5 Options','dialogChat Toggle',0)
			Infinity_SetINIValue('Y5 Options','allChat Toggle',0)
			Infinity_SetINIValue('Y5 Options','view allChat',1)
			Infinity_SetINIValue('Y5 Options','luaChat Toggle',0)
			Infinity_SetINIValue('Y5 Options','view QuickLoot',1)
			Infinity_SetINIValue('Y5 Options','view LuaConsole',1)
			Infinity_SetINIValue('Y5 Options','cancelPause',0)
			Infinity_SetINIValue('Y5 Options','Function Binds',1)
			Infinity_SetINIValue('Y5 Options','Prevent Ctrl-Debug',0)
			Infinity_SetINIValue('Y5 Options','setNoAmbience',0)
			Infinity_SetINIValue('Y5 Options','setAmbienceAmount',0)
			Infinity_SetINIValue('Y5 Options','overlay Reset',0)
			Infinity_SetINIValue('Y5 Options','lua menuToggle',0)
			Infinity_SetINIValue('Y5 Options','Disable Maps',0)
			Infinity_SetINIValue('Y5 Options','eval mapKey',0)
			Infinity_SetINIValue('Y5 Options','Highlight Enabled',0)
			Infinity_SetINIValue('Y5 Options','AI Enabled',0)
			Infinity_SetINIValue('Y5 Options','Toggle Buttons',0)
		end
		
		if evalGameNew == 0 then
		
			CLEARALLMENUS()
			optionSeeLua = Infinity_GetINIValue('Y5 Options','view LuaConsole')
			optionSeeChat3 = Infinity_GetINIValue('Y5 Options','view allChat')
			optionLoot = Infinity_GetINIValue('Y5 Options','view QuickLoot')
			optionNoPause = Infinity_GetINIValue('Y5 Options','cancelPause')
			optionF5 = Infinity_GetINIValue('Y5 Options','Function Binds')
			optionChat3 = Infinity_GetINIValue('Y5 Options','allchat Toggle')
			optionSeeCast = Infinity_GetINIValue('Game Options','Show AOE')
			optionChat3 = Infinity_GetINIValue('Y5 Options','allChat Toggle')
			optionChatLua = Infinity_GetINIValue('Y5 Options','luaChat Toggle')
			luaViewed = Infinity_GetINIValue('Y5 Options','lua menuToggle')
			optionQuickLoot = Infinity_GetINIValue('Y5 Options','view QuickLoot')
			
			versionString = CBaldurChitin:GetVersionString()
			
			if Infinity_GetINIValue('Y5 Options','lua menuToggle') ~= 0 then
				luaViewed = 0
				Infinity_SetINIValue('Y5 Options','lua menuToggle',0)
			end
			
			if Infinity_GetINIValue('Y5 Options','overlay Reset') ~= 0 then
				Infinity_SetINIValue('Y5 Options','overlay Reset',0)
			end
			
			if Infinity_GetINIValue('Y5 Options','setNoAmbience') ~= 0 then
				Infinity_SetINIValue('Y5 Options','setNoAmbience',0)
			end
			
			getMPCSize()
			evalRunStack = 1
			
		else		
			removeDeferredOptions()
	
			if (start_doOnce == nil) then
				currentCampaign = Infinity_GetINIValue('Program Options','Active Campaign')
				if (currentCampaign == 0) then
					currentCampaign = 1
				end
				onCampaignButton(currentCampaign)
				highlightedCampaign = currentCampaign
				start_doOnce = 1
				return
			end	

			getMenuPanelArea()
			getMBWSize()
			Infinity_SetBackground('BACKGROUND')
			canContinue = startEngine:HasGameToContinue()
			e:CheckGUISong()
		
			--Infinity_PlayMovie('flames','flames')
			--If we're coming back from the tutorial make sure we're set to our actual campaign.
			--if(Infinity_GetINIValue('Program Options','Active Campaign') == const.START_CAMPAIGN_BG1) then
			--	startEngine:OnCampaignButtonClick('BG1',false)
			--end
		end

	"
	
	
	label
	{
		name "Title"
		area 926 76 500 100
		bam 'TITLE'
		scaleToClip
		sequence 0
		align right bottom
		frame lua "getTitle()"
	}
	
	label
	{
		name "MBLogo"
		area 29 499 244 230
		scaleToClip
		bam 'BIGLOGO'
		align right bottom
		frame lua "getBigLogo()"
	}
	
	button
	{
		name "MenuButton1"
		bam guichmid
		scaleToClip
		sequence 0
		area 1073 245 210 44
		text style "button"
		text "CONTINUE_BUTTON"
		clickable lua "canContinue"
		action 
		"
			startEngine:OnContinueGame()
		"
	}
	button
	{
		name "MenuButton2"
		bam guichmid
		sequence 1
		scaleToClip
		area 1073 291 210 44
		text style "button"
		text "NEW_GAME_BUTTON"
		action 
		"			
			Infinity_PopMenu();
			startEngine:SetEngineState(1)
			checkCampaign = Infinity_GetINIValue('Program Options','Active Campaign')
			if checkCampaign == 1 then
				startEngine:OnNewGameButtonClick();
			elseif checkCampaign == 2 then 
				startEngine:OnNewGameButtonClick();
			elseif checkCampaign == 3 then
				startEngine:OnCreatePartyButtonClick();
			end
		"
	}
	button
	{
		name "MenuButton3"
		bam guichmid
		scaleToClip
		sequence 3
		area 1073 337 210 44
		text style "button"
		text "LOAD_GAME_BUTTON"
		action
		"
			startEngine:OnLoadGameButtonClick()
		"
	}
	button
	{
		name "MenuButton4"
		bam guichmid
		scaleToClip
		sequence 3
		area 1073 384 210 44
		text style "button"
		text "MULTIPLAYER_BUTTON"
		action 
		"
			startEngine:OnMultiPlayerButtonClick()
		"
	}

	button
	{
		name "MenuButton5"
		bam guichmid
		sequence 1
		scaleToClip
		area 1073 430 210 44
		text style "button"
		text "GAMEPLAY_BUTTON"
		action 
		"
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			Infinity_PushMenu('OPTIONS_GAMEPLAY')
		"		
	}

	button
	{
		name "MenuButton6"
		area 1073 476 210 44
		bam guichmid
		scaleToClip
		sequence 0
		text style "button"
		text "SELECT_CAMPAIGN_TITLE"
		action 
		"
			Infinity_PushMenu('START_CAMPAIGN_SELECT')
		"
	}
	button
	{
 		name "MenuButton7"
		bam guichmid
		scaleToClip
		sequence 1
		area 1073 522 210 44
		text style "button"
		text "QUIT_GAME_BUTTON"
		action 
		"
			startEngine:OnQuitButtonClick()
			removeDeferredOptions()
		"
	}
}
`

function magePageInfo()
	if bookMode == 0 then -- Regular
		if characters[id].hasSorcererBook then
			return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].mageDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		else
			return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		end
	elseif bookMode == 1 then -- Sequencer/Contingency
		return t("SPELLS_LABEL") .. " :" .. #bottomSpells .. "/" .. #bottomSpellsPlaceHolder

	end
	return ""
end

contingencyDescription = 0

function mageBookDescription()
	if mageBookEnabled == true then
		if bookMode == 0 then
			if characters[id].mageSpells[currentSpellLevel][currentBookSpell] then
				return Infinity_FetchString(characters[id].mageSpells[currentSpellLevel][currentBookSpell].description)
			else
				return t('SPELL_MEMORIZATION_HELP')
			end
		elseif bookMode == 1 then
			if contingencyDescription == 0 and currentBookSpell ~= 0 then
				return Infinity_FetchString(bookSpells[currentBookSpell].description)
			else
				lastCurrentBookSpell = 0
				if contingencyDescription == 0 then
					contingencyDescription = mageBookStrings[contingencyResRef].tip
				end
				return Infinity_FetchString(contingencyDescription)
			end
		end
	end
	return ""
end
function mageBookTitle()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].title)
	else
		return t('MAGE_SPELLS_TITLE')
	end
end
function mageBookAction()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].action)
	else
		return t("MAGE_BOOK_LABEL")
	end
end


function makeBlankTable(num)
	local out = {}
	for i = 1,num do
		table.insert(out, {})
	end
	return out
end

function contingencyComplete()
	if showContingency then
		return #bottomSpells == #bottomSpellsPlaceHolder and (currentContingencyCondition or 0) > 0 and (currentContingencyTarget or 0) > 0
	else
		return #bottomSpells == #bottomSpellsPlaceHolder
	end
end

function contingencyDoneButtonText()
	if contingencyComplete() then
		return t("DONE_BUTTON")
	else
		return t("CANCEL_BUTTON")
	end
end

function filterMemorizedMageSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 9)
	for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

function tableInsert(out, v)
	if mageScreen:SpellSwappedInContingency(v.resref) then
		for key,value in pairs(contingencySwapTable) do
			value.castableCount = v.castableCount
			table.insert(out, value)
		end
	else
		table.insert(out, v)
	end
end

function filterContingencyMageSpells()
	local out = {}
	if characters[id].mageSpells ~= nil and characters[id].mageSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	if characters[id].priestSpells ~= nil and characters[id].priestSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	return out
end

function findFirstDifferenceInSpellList(oldList, newList)
	local ret = -1
	local spellIndex = 1

	if oldList ~= nil and newList ~= nil then
		while oldList[spellIndex] ~= nil do
			if newList[spellIndex] == nil then
				ret = spellIndex
				break
			end
			if oldList[spellIndex].icon ~= newList[spellIndex].icon then
				ret = spellIndex
				break
			end
			spellIndex = spellIndex + 1
		end
		if oldList[spellIndex] == nil and newList[spellIndex] ~= nil then
			ret = spellIndex
		end
	end

	return ret
end

showMageMemorizationFlash = false

function refreshMageBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if bookMode == 0 then
		if characters[id].hasMageBook then
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			newBottomSpells = filterMemorizedMageSpells()
			
			if showMageMemorizationFlash == true then
				createMageMemorizationSparkle(0,0,36,36,"memorizedListMage", findFirstDifferenceInSpellList(bottomSpells, newBottomSpells))
				showMageMemorizationFlash = false
			end
			bottomSpells = newBottomSpells
			bottomSpellsPlaceHolder = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized) 
		else
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			bottomSpells = {}
			bottomSpellsPlaceHolder = {}
		end
	elseif bookMode == 1 then
		bookSpells = filterContingencyMageSpells()
		bottomSpells = sequencerSpells
		bottomSpellsPlaceHolder = makeBlankTable(contingencyMaxSpells) 
		contingencyDescription = mageBookStrings[contingencyResRef].tip
	end
end

function setMageBookLevel(num)
	lastCurrentBookSpell = 0
	currentBookSpell = 0
	currentSpellLevel = num
	mageScreen:SetSpellLevel(num-1)
	refreshMageBook()
end

currentAnimationID = 1
updateCounterMemorizationSparkles = 1

function updateMemorizationSparkles()
	local sparkleNumber = 1
	updateCounterMemorizationSparkles = updateCounterMemorizationSparkles + 1
	if updateCounterMemorizationSparkles > 2 then
		updateCounterMemorizationSparkles = 1
		for sparkleNumber = 1, #(memorizationFlashes), 1 do
			if memorizationFlashes[sparkleNumber][1] == true then
				memorizationFlashes[sparkleNumber][2] = memorizationFlashes[sparkleNumber][2] + 1
				if memorizationFlashes[sparkleNumber][2] > 7 then
					memorizationFlashes[sparkleNumber][1] = false
					memorizationFlashes[sparkleNumber][2] = 0
					memorizationFlashes[sparkleNumber][3] = true
				end
			end
		end
	end
end

function destroyMemorizationSparkle(instanceId)
	local ret = memorizationFlashes[instanceId][3]
	memorizationFlashes[instanceId][3] = false
	return ret
end

function showMemorizationSparkle(instanceId)
	updateMemorizationSparkles()
	return memorizationFlashes[instanceId][1]
end

function createMageMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_mageMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function findMemorizedUncastable(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			if bottomSpells[index].castable == 0 then
				sparkle = index
				break
			end
		end
	end

	return sparkle
end

function unmemorizingMageSpell(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			sparkle = index
			if bottomSpells[index].castable == 0 then
				break
			end
		end
	end

	createMageMemorizationSparkle(0, 0, 36, 36, 'memorizedListMage', sparkle)
end

function unmemorizeMageSpell(slot)
	showMageMemorizationFlash = false
	mageScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end

memorizationFlashes = 
{
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false}
}

`


menu
{
	name 'MAGE' --arcane spell menu, arcane menu, mage menu
	align center top
	modal lua "bookMode == 1"

	onopen "
		chatboxScrollToBottom = 1
		showMageMemorizationFlash = false
		mgpage = nil
		setMageBookLevel(1)
		if showContingency then
			Infinity_SetArea('bookListMage', nil, 412, nil, 156)
			Infinity_SetArea('bookDescription', nil, 412, nil, 156)
		else
			Infinity_SetArea('bookListMage', nil, 186, nil, 384)
			Infinity_SetArea('bookDescription', nil, 186, nil, 384)
		end
		if bookMode == 1 then
			contingencyDescription = mageBookStrings[contingencyResRef].tip
		end
		currentContingencyCondition = 0
		currentContingencyTarget = 0
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
		"
	onclose "
	"

	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}

	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_mageMemorizationSparkle"
	}



	label
	{
		area 0 0 864 710
		mosaic "GUIMGB"
	}
	label
	{
		area		82 10 700 44
		text lua	"mageBookTitle()"
		text style	"title"
	}
	label
	{
		area 		210 59 446 30
		text lua	"mageBookAction()"
		text style	"label"
	}
	button
	{
		area		168 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	0
		enabled		"maxMagePage > 0"
		action		"setMageBookLevel(1)"
	}
	button
	{
		area		227 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	1
		enabled		"maxMagePage > 1"
		action		"setMageBookLevel(2)"
	}
	button
	{
		area		286 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	2
		enabled		"maxMagePage > 2"
		action		"setMageBookLevel(3)"
	}
	button
	{
		area		345 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	3
		enabled		"maxMagePage > 3"
		action		"setMageBookLevel(4)"
	}
	button
	{
		area		404 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	4
		enabled		"maxMagePage > 4"
		action		"setMageBookLevel(5)"
	}
	button
	{
		area		464 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	5
		enabled		"maxMagePage > 5"
		action		"setMageBookLevel(6)"
	}
	button
	{
		area		523 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	6
		enabled		"maxMagePage > 6"
		action		"setMageBookLevel(7)"
	}
	button
	{
		area		583 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	7
		enabled		"maxMagePage > 7"
		action		"setMageBookLevel(8)"
	}
	button
	{
		area		644 110 54 54
		bam		GUIPRTC
		highlightgroup	mgpage
		sequence	8
		enabled		"maxMagePage > 8"
		action		"setMageBookLevel(9)"
	}

	list
	{
		column 
		{ 
			width 15
			label
			{
				area	0 0 -1 -1
				bam	lua "bookSpells[rowNumber].icon"
				align	center center
			}
		}
		column 
		{ 
			width 85
			label
			{
				area		0 0 -1 -1
				text lua "Infinity_FetchString( bookSpells[rowNumber].name)"
				text style "normal_parchment"
				text align left center
			}
		}

		area 112 412 302 156
		
		name 		"bookListMage"
		rowheight	40
		table		"bookSpells"
		var		currentBookSpell
		scrollbar	'GUISCRC'
		action		
		"
			contingencyDescription = 0
			if cellNumber == 1 then
				if bookMode == 0 then
					if #bottomSpells < #bottomSpellsPlaceHolder then
						createMageMemorizationSparkle(0, 0, 40, 40, 'bookListMage', -1)
						Infinity_PlaySound('GAM_24')
						showMageMemorizationFlash = true
					end
					mageScreen:MemorizeSpell( bookSpells[currentBookSpell].level, bookSpells[currentBookSpell].index )
				elseif bookMode == 1 and #bottomSpells < #bottomSpellsPlaceHolder then
					mageScreen:SequenceSpell( bookSpells[currentBookSpell].resref, bookSpells[currentBookSpell].masterResref )
				end
			end
			if lastCurrentBookSpell == currentBookSpell and cellNumber == 2 then
				currentBookSpell = 0
				contingencyDescription = mageBookStrings[contingencyResRef].tip
			else
				lastCurrentBookSpell = currentBookSpell
			end
		"
		actionalt
		"
			if cellNumber == 1 and bookMode == 0 and characters[id].hasSorcererBook == false then
				popup2Button(63745, 'REMOVE_BUTTON', function() mageScreen:EraseKnownSpell(bookSpells[currentBookSpell].resref) end)
			end
		"

	}
	label
	{
		area 146 178 268 224
		rectangle 1
		rectangle opacity 200 
		enabled "showContingency"
	}

	label
	{
		area 152 182 262 28
		enabled "showContingency"
		text "CONDITION_NORMAL"
		text style "normal"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyConditions[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}

		area 152 210 262 186
		
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyConditions"
		var		currentContingencyCondition
		scrollbar	'GUISCRC'
		action
		"
			contingencyDescription = contingencyConditions[currentContingencyCondition].desc
		"

	}
	label
	{
		area 452 176 254 226
		rectangle 1
		rectangle opacity 200 
		enabled "showContingency"
	}
	label
	{
		area 458 182 240 28
		enabled "showContingency"
		text "TARGET_NORMAL"
		text style "normal"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyTargets[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}

		area 458 210 240 186
		
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyTargets"
		var		currentContingencyTarget
		scrollbar	'GUISCRC'
		action
		"
			contingencyDescription = contingencyTargets[currentContingencyTarget].desc
		"
	}

	text
	{
		name		"bookDescription"
		area		448 412 322 156
		text lua 	"mageBookDescription()"
		text style	"normal_parchment"
		scrollbar	'GUISCRC'
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}

		area 70 654 718 36
		
		enabled "#bottomSpellsPlaceHolder ~= 0 or bookMode == 1"
		rowwidth	36
		table		"bottomSpellsPlaceHolder"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	lua "bottomSpells[rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[rowNumber].castable == 0"
			}
		}

		area 70 654 718 36
		
		name 		"memorizedListMage"
		enabled 	"#bottomSpells ~= 0"
		rowwidth	36
		table		"bottomSpells"
		var		currentBottomSpell
		action		
		"
			if bookMode == 0 then
				if findMemorizedUncastable(bottomSpells[currentBottomSpell].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizeMageSpell(currentBottomSpell) end, 'CANCEL_BUTTON')
				else
					unmemorizeMageSpell(currentBottomSpell)
				end
			elseif bookMode == 1 then
				mageScreen:UnSequenceSpell( bottomSpells[currentBottomSpell].resref, bottomSpells[currentBottomSpell].masterResref )
				table.remove(sequencerSpells, currentBottomSpell)
				bottomSpells = sequencerSpells
				currentBottomSpell = 0
			end
		"
	}


	label
	{
		area 296 588 272 42
		text lua "magePageInfo()"
		text style "label"
		rectangle 0
	}

	button
	{
		area 588 584 236 52
		enabled "bookMode == 0 and (#characters[id].contingencySpells > 0 or #characters[id].sequencerSpells > 0)"
		bam GUIOSTLR
		text "CONTINGENCY_BUTTON"
		text style "button"
		action "Infinity_PushMenu('MAGE_CONTINGENCY')"
		
	}
	button
	{
		area 60 588 236 52
		bam GUIOSTLL
		enabled "bookMode == 1 or characters[id].hasMageBook"
		clickable lua "#bottomSpells < #bottomSpellsPlaceHolder and currentBookSpell ~= 0"
		text "MEMORIZE_BUTTON"
		text style "button"
		action 
		"
			if bookMode == 0 then
				createMageMemorizationSparkle(0, 0, 40, 40, 'bookListMage', -1)
				showMageMemorizationFlash = true
				Infinity_PlaySound('GAM_24')
				mageScreen:MemorizeSpell( characters[id].mageSpells[currentSpellLevel][currentBookSpell].level, characters[id].mageSpells[currentSpellLevel][currentBookSpell].index )
			elseif bookMode == 1 then
				mageScreen:SequenceSpell( bookSpells[currentBookSpell].resref, bookSpells[currentBookSpell].masterResref )
			end

		"
		
	}

	button
	{
		area 572 588 236 52
		enabled "bookMode == 1"
		bam GUIOSTLR
		text lua "contingencyDoneButtonText()"

		text style "button"
		action 
		"
			if contingencyComplete() then
				mageScreen:DoneSequencingSpells()
			else
				mageScreen:CancelSequencingSpells()
			end
			e:SelectEngine(worldScreen)
		"
		
	}

	label
	{
		area 0 0 865 710
		fill        0 0 0 100
		enabled "mageBookEnabled == false"
	}

}

`
function refreshMageContingency()
	preparedSpells = {}
	for k, v in pairs(characters[id].contingencySpells) do
		table.insert(preparedSpells, v)
	end
	for k, v in pairs(characters[id].sequencerSpells) do
		table.insert(preparedSpells, v)
	end

end
`

menu
{
	name 'MAGE_CONTINGENCY'

	align center center
	modal

	onopen "refreshMageContingency()"
	
	label
	{
		area 0 0 864 710 
		mosaic "GUIMGCP"
	}
	label --Title
	{
		area 40 104 790 106
		text "SPELLS_PREPARED_LABEL"
		text style "label"
		text align left top
	}
	label
	{
		area 78 14 710 44
		text "CONTINGENCY_TITLE"
		text style "title"
	}
	label
	{
		area 238 258 190 36
		text "CONDITION_LABEL"
		text style "label"
		text align left center
	}
	label
	{
		area 428 258 200 36
		text "TARGET_LABEL"
		text style "label"
		text align left center
	}

	label
	{
		area 628 258 196 36
		text "SPELL_LABEL"
		text style "label"
		text align left center
	}

	list
	{
		column
		{
			width 25
			label
			{
				area	0 0 -1 -1
				text lua "t(mageBookStrings[preparedSpells[rowNumber].resref].title)"
				text style "label"
				align	left center
			}

		}
		column
		{
			width 25
			label
			{
				area	0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].condition)"
				text style "label"
				align	left center
			}

		}
		column
		{
			width 25
			label
			{
				area	0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].target)"
				text style "label"
				align	left center
			}

		}

		column 
		{ 
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[1] ~= nil"
				area	0 0 -1 -1
				bam	lua "preparedSpells[rowNumber].spells[1].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[2] ~= nil"
				area	0 0 -1 -1
				bam	lua "preparedSpells[rowNumber].spells[2].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				enabled "preparedSpells[rowNumber].spells[3] ~= nil"
				area	0 0 -1 -1
				bam	lua "preparedSpells[rowNumber].spells[3].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				area	0 0 -1 -1
				bam	"GUISTMPC"
				sequence 2
				align	center center
				enabled "preparedSpells[rowNumber].dispellable"
			}
		}

		area 44 294 780 300
		
		rowheight	56
		table		"preparedSpells"
		var		"currentContingencySpell"
		action		"
			if (cellNumber == 7) and preparedSpells[currentContingencySpell].dispellable then
				popup2Button(32665, 'YES_BUTTON', function() mageScreen:OnDispellButtonClick(currentContingencySpell) end, 'NO_BUTTON')
			end
		"
	}
	

	button
	{
		area 294 656 302 44
		bam GUIOSTCL
		text "DONE_BUTTON"
		text style "button"
		action "Infinity_PopMenu('MAGE_CONTINGENCY')"
	}
}

menu
{
	name "POPUP_DETAILS"
	align center center
	modal

	label
	{
		area 0 0 864 710
		mosaic "GUIINVHI"
	}
	label
	{
		area 82 10 700 44
		text lua "Infinity_FetchString(PopupDetails.title)"
		text style "title"
	}
	label
	{
		area 310 65 310 50
		text lua "Infinity_FetchString(PopupDetails.name)"
		text style "label"
	}
	text
	{
		area 78 198 720 328
		text lua "Infinity_FetchString(PopupDetails.description)"
		text style "parchment"
		scrollbar 'GUISCRC'
	}
	label
	{
		area 254 65 52 52
		bam lua "PopupDetails.icon"
		align center center
		sequence 0
	}
	button
	{
		area 326 638 205 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		
		on escape
		action
		"
			Infinity_PopMenu('POPUP_DETAILS')
		"
	}

}


`
function priestPageInfo()
	if characters[id].hasShamanBook then
		return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].priestDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	else
		return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	end
end

function priestBookDescription()
	if priestBookEnabled == true then
		if characters[id].priestSpells[currentSpellLevel][currentBookSpell] then
			return Infinity_FetchString(characters[id].priestSpells[currentSpellLevel][currentBookSpell].description)
		else
			return t('SPELL_MEMORIZATION_HELP')
		end
	end
	return ""
end

function filterMemorizedPriestSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 7)
	for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

showPriestMemorizationFlash = false

function refreshPriestBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if characters[id].hasClericBook then
		newBottomSpells = filterMemorizedPriestSpells()

		if showPriestMemorizationFlash == true then
			createPriestMemorizationSparkle(0,0,36,36,"memorizedListPriest", findFirstDifferenceInSpellList(bottomSpells, newBottomSpells))
			showPriestMemorizationFlash = false
		end
		bottomSpells = newBottomSpells
		bottomSpellsPlaceHolder = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized) 
	else
		bottomSpells = {}
		bottomSpellsPlaceHolder = {}
	end
end

function setPriestBookLevel(num)
	lastCurrentBookSpell = 0
	currentBookSpell = 0
	currentSpellLevel = num
	refreshPriestBook()
end

function createPriestMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_priestMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function unmemorizingPriestSpell(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			sparkle = index
			if bottomSpells[index].castable == 0 then
				break
			end
		end
	end

	createPriestMemorizationSparkle(0, 0, 36, 36, 'memorizedListPriest', sparkle)
end

function unmemorizePriestSpell(slot)
	showPriestMemorizationFlash = false
	priestScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end

`
menu
{
	name 'PRIEST' --divine spell menu, divine menu, priest menu
	align center top

	onopen 
	"
		chatboxScrollToBottom = 1
		showPriestMemorizationFlash = false
		pushSidebars()
		prpage = nil
		setPriestBookLevel(1)
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
	"
	--onclose 
	--"
	--	popSidebars()
	--"

	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}

	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_priestMemorizationSparkle"
	}



	label
	{
		area 0 0 864 710
		mosaic "GUIPRB"
	}
	label
	{
		area		82 10 700 44
		text		"PRIEST_SCROLL_TITLE" 
		text style	"title"
	}
	label
	{
		area 		210 59 446 30
		text lua	"priestName"
		text style	"label"
	}
	button
	{
		area		168 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	0
		enabled		"maxPriestPage > 0"
		action		"setPriestBookLevel(1)"
	}
	button
	{
		area		246 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	1
		enabled		"maxPriestPage > 1"
		action		"setPriestBookLevel(2)"
	}
	button
	{
		area		328 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	2
		enabled		"maxPriestPage > 2"
		action		"setPriestBookLevel(3)"
	}
	button
	{
		area		403 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	3
		enabled		"maxPriestPage > 3"
		action		"setPriestBookLevel(4)"
	}
	button
	{
		area		484 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	4
		enabled		"maxPriestPage > 4"
		action		"setPriestBookLevel(5)"
	}
	button
	{
		area		566 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	5
		enabled		"maxPriestPage > 5"
		action		"setPriestBookLevel(6)"
	}
	button
	{
		area		642 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	6
		enabled		"maxPriestPage > 6"
		action		"setPriestBookLevel(7)"
	}

	list
	{
		column 
		{ 
			width 15
			label
			{
				area	0 0 -1 -1
				bam	lua "characters[id].priestSpells[currentSpellLevel][rowNumber].icon"
				align	center center
			}
		}
		column 
		{ 
			width 85
			label
			{
				area		0 0 -1 -1
				text lua "Infinity_FetchString( characters[id].priestSpells[currentSpellLevel][rowNumber].name)"
				text style "normal_parchment"
				text align left center
			}
		}

		area 82 182 326 370
		
		name "bookListPriest"
		rowheight	40
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'GUISCRC'
		action		"
			if cellNumber == 1 then
				if #bottomSpells < #bottomSpellsPlaceHolder then
					createPriestMemorizationSparkle(0, 0, 40, 40, 'bookListPriest', -1)
					Infinity_PlaySound('GAM_24')
					showPriestMemorizationFlash = true
				end
				priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )
			end
			if lastCurrentBookSpell == currentBookSpell and cellNumber == 2 then
				currentBookSpell = 0
			else
				lastCurrentBookSpell = currentBookSpell
			end
		"

	}

	text
	{
		area		438 182 340 370
		text lua 	"priestBookDescription()"
		text style	"normal_parchment"
		scrollbar	'GUISCRC'
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}

		area 70 654 718 36
		
		rowwidth	36
		table		"bottomSpellsPlaceHolder"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	lua "bottomSpells[rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[rowNumber].castable == 0"
			}
		}

		area 70 654 718 36
		
		name "memorizedListPriest"
		enabled 	"#bottomSpells ~= 0"
		rowwidth	36
		table		"bottomSpells"
		var		currentBottomSpell
		action		
		"
			if bottomSpells[currentBottomSpell] then
				if findMemorizedUncastable(bottomSpells[currentBottomSpell].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizePriestSpell(currentBottomSpell) end, 'CANCEL_BUTTON')
				else
					unmemorizePriestSpell(currentBottomSpell)
				end
			end
		"
	}


	label
	{
		area 272 598 276 40
		text lua "priestPageInfo()"
		text style "label"
		rectangle 0
	}

	button
	{
		area 60 594 204 44
		bam GUIOSTLM
		enabled "characters[id].hasClericBook"
		clickable lua "#bottomSpells < characters[id].priestDetails[currentSpellLevel].maxMemorized and currentBookSpell ~= 0"
		text "MEMORIZE_LABEL"
		text style "button"
		action 
		"
			createPriestMemorizationSparkle(0, 0, 40, 40, 'bookListPriest', -1)
			Infinity_PlaySound('GAM_24')
			showPriestMemorizationFlash = true
			priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )

		"
		
	}

	label
	{
		area 0 0 865 710
		fill        0 0 0 100
		enabled "priestBookEnabled == false"
	}
}
`
	versionString = ""
	function canClickSaveLoad()
		return game:IsClient() == false
	end
	setNoEscMenu = 0
	setAmbienceAmt = 0
`
menu
{
	name "ESC_MENU" -- this menu opens optionsScreen, setNoEscMenu just lets it stay open when things like saveScreen and loadScreen need it to function, this specifically uses e:SelectEngine(optionsScreen), which is different from startEngine:OnOptionsButtonClick(), even though they both use the 'optionsScreen', the first calls the 'ESC_MENU' to open first.
	ignoreesc
	onOpen 
	"
		if setNoEscMenu == 1 then
			return nil
		elseif setNoEscMenu == 0 and Infinity_IsMenuOnStack('OVERLAY_ESC') ~= 1 and Infinity_GetINIValue('Y5 Options','setNoAmbience') ~= 1 then
			Infinity_SetINIValue('Y5 Options','setNoAmbience',1)
			setAmbienceAmt = Infinity_GetOption(1, 7)
			Infinity_SetINIValue('Y5 Options','setAmbienceAmount',setAmbienceAmt)
			ambientSLDR = 0
			Infinity_ChangeOption( 1, ambientSLDR, 7)
			Infinity_PushMenu('OVERLAY_ESC')
			e:SelectEngine( worldScreen )
		elseif setNoEscMenu == 2 then
			setNoEscMenu = 0
		elseif setNoEscMenu == 0 and Infinity_IsMenuOnStack('OVERLAY_ESC') then
			Infinity_PopMenu('OVERLAY_ESC')
		end
	"
	label {area 0 0 0 0}
}
menu
{
	name "OVERLAY_ESC" -- overlay esc, esc menu
	align center center
	offset 10 0
	onOpen 
	"
		--'Active Campaign' INI setting is not automatically updated by MoveToCampaign action
		--there is no known way to retrieve in-game variable from within GUI, so we're checking Infinity_GetMaxChapterPage() instead
		checkCampaign = Infinity_GetINIValue('Program Options','Active Campaign')
		local chapter = Infinity_GetMaxChapterPage()
		
		if (chapter == 0) and (checkCampaign ~= 1) and (checkCampaign ~= 3) then
			currentCampaign = 1
		elseif (chapter > 0) and (chapter < 7) and (checkCampaign ~= 1) then
			currentCampaign = 1
		elseif (chapter == 7) and (checkCampaign ~= 1) and (checkCampaign ~= 2) then
			currentCampaign = 2
		elseif (chapter > 7) and (chapter < 13) and (checkCampaign ~= 2) then
			currentCampaign = 2
		end
		
		if (checkCampaign ~= currentCampaign) then
			Infinity_SetINIValue('Program Options','Active Campaign',currentCampaign)
		end
	"
	onClose 
	"
		if Infinity_IsMenuOnStack('POPUP_FOURBUTTON') ~= 1 and setNoEscMenu ~= 1 then
			Infinity_SetINIValue('Y5 Options','setNoAmbience',0)
			ambientSLDR = Infinity_GetINIValue('Y5 Options','setAmbienceAmount')
			setNoEscMenu = 1
			e:SelectEngine(optionsScreen)
			Infinity_ChangeOption( 1, ambientSLDR, 7)
			setNoEscMenu = 0
			e:SelectEngine(worldScreen)
		elseif Infinity_IsMenuOnStack('POPUP_FOURBUTTON') == 1 and setNoEscMenu ~= 1 then
			Infinity_SetINIValue('Y5 Options','setNoAmbience',0)
			ambientSLDR = Infinity_GetINIValue('Y5 Options','setAmbienceAmount')
			setNoEscMenu = 1
			e:SelectEngine(optionsScreen)
			Infinity_ChangeOption( 1, ambientSLDR, 7)
			setNoEscMenu = 0
		elseif setNoEscMenu == 1 then
			Infinity_SetINIValue('Y5 Options','setNoAmbience',0)
			ambientSLDR = Infinity_GetINIValue('Y5 Options','setAmbienceAmount')
			e:SelectEngine(optionsScreen)
			Infinity_ChangeOption( 1, ambientSLDR, 7)
			setNoEscMenu = 0
		end
	"
	
	label
	{
	area -20 -64 246 378
	rectangle 4
	}

	label
	{
		area 0 -50 206 40
		text "OPTIONS_TITLE"
		text style "title"
	}
	label
	{
		area 0 -10 206 30
		text lua "versionString"
		text style "normal"
		text align center center
	}

	button
	{
		area 0 250 206 44
		bam guichmid
		scaleToClip
		text "RETURN_GAME_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu('OVERLAY_ESC')
		"
	}
	button
	{
		bam guichmid
		sequence 0
		area 0 30 206 44
		scaleToClip
		text style "button"
		text "SAVE_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			--e:SelectEngine(optionsScreen)
			optionsScreen:SaveGame(0)
		"

	}
	button
	{
		bam guichmid
		sequence 1
		area 0 74 206 44
		scaleToClip
		text style "button"
		text "LOAD_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			setNoEscMenu = 1
			Infinity_PopMenu('OVERLAY_ESC')
			popup2Button(19531, 'LOAD_BUTTON', function() optionsScreen:LoadGame()  end)
			Popup2Button.okFunc()
		"
	}
	button
	{
		area 0 118 206 44
		bam guichmid
		scaleToClip
		sequence 5
		text style "button"
		text 		"GAMEPLAY_BUTTON"
		text style	"button"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )

		"
	}
	button
	{
		bam guichmid
		sequence 2
		area 0 162 206 44
		scaleToClip
		text style "button"
		text "QUIT_GAME_BUTTON"
		action
		"
			if e:IsTouchUI() then
				popup3Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			else
				popup4Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() Infinity_PopMenu('OVERLAY_ESC'); optionsScreen:QuitGame() end, 
				'QUIT_BUTTON', function() removeDeferredOptions() Infinity_ShutdownGame() end,
				'SAVE_BUTTON', function() setNoEscMenu = 1 e:SelectEngine(optionsScreen) optionsScreen:SaveGame(0) end
				)
			end
		"
	}
}

`
OptionsButtons = 
{
	{text = "GAMEPLAY_BUTTON", menu = "OPTIONS_GAMEPLAY", sequence = 0}, 
	{text = "GRAPHICS_BUTTON", menu = "OPTIONS_GRAPHICS", sequence = 1}, 
	{text = "LANGUAGE_BUTTON", menu = "OPTIONS_LANGUAGE", sequence = 0}, 
	{text = "MOVIES_BUTTON", menu = "", sequence = 2}, 
	{text = "SOUND_BUTTON", menu = "OPTIONS_SOUND", sequence = 1}, 
}
`
menu
{
	name 'START_OPTIONS'
	ignoreEsc
	onOpen
	"
	Infinity_SetBackground('BACKGROUND')
	"
	label {area 0 0 0 0}
}
`
areaMapHover = -1
function showAreaMapNoteTooltip(id)
	if id == areaMapHover then
		return true
	else
		return false
	end
end
`
menu
{
	name 'AREA_MAP' --area map, local map
	align center center
	opacity lua "getAndIncrementNotesAlpha()"
	ignoreesc
	onOpen 
	"
		pushSidebars(); 
		notesAlpha = 0
		Infinity_PushMenu('OVERLAY_PORTRAIT')
	"
	onClose "popSidebars()"
	
	label {area 0 0 0 0}
	
	template
	{
		button
		{
			enabled "showNote(instanceId)"
			area 0 0 45 42
			bam "FLAG1"
			sequence lua "mapnoteSettings[instanceId].sequence"
			tooltip force lua "showAreaMapNoteTooltip(instanceId)"
			tooltip force top
			tooltip lua "Infinity_FetchString(mapnoteSettings[instanceId].text)"
			tooltip position 3
			actionAlt
			"
				mapScreen:OnUserNoteClick(instanceId, mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
				Infinity_PushMenu('NOTE_ADD',0,0)
			"
			actionEnter
			"
				areaMapHover = instanceId
			"
			actionExit
			"
				areaMapHover = -1
			"
		}
		name "TEMPLATE_mapnote"
	}
}
`
mapnoteSettings = mapnoteSettings and mapnoteSettings or {}
showNotes = 1
function showNote(instanceId)
	if(mapScreen:IsNoteVisible(mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
	and mapnoteSettings[instanceId].screenCoord.x >= 0
	and mapnoteSettings[instanceId].screenCoord.y >= 0) then
		return showNotes
	else
		return false
	end
end
notesAlpha = 0
function getAndIncrementNotesAlpha()
	if(notesAlpha < .99) then
		notesAlpha = notesAlpha + 0.075
	end
	if(notesAlpha > 1) then
		notesAlpha = 1
	end
	return notesAlpha
end
function mapDisplayText()

	if e:GetActiveEngine() == mapScreen then
		return t('MAP_SWAPW')
	else
		return t('MAP_SWAPL')
	end
	
end
`
menu
{
	name 'AREA_MAP_TITLE'
	label {area 0 0 0 0}
}
`
	colorChoice = nil
`
menu
{
	name 'NOTE_ADD' --note menu
	align center center
	onOpen 
	"
		if colorChoice == nil then
			colorChoice = Infinity_FindUIItemByName('BUTTON_mapNoteColor_' .. mapScreen:GetColorChoice())
		end
	"
	onClose
	"
		colorChoice = nil
	"
	modal
	label
	{
		area 0 0 900 234
		mosaic GUIERR7
	}
	label
	{
		area	 32 24 840 50
		rectangle	0
	}
	edit
	{
		name 		"mapNoteEditArea"
		area		40 32 818 34
		var			mapNoteEdit
		scrollbar	'GUISCRC'
		text style	"edit"
	}
	button
	{
		area 640 166 200 44
		bam GUIOSTLM
		text style "button"
		text "DONE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDoneButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 342 166 200 44
		bam GUIOSTLM
		text style "button"
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 52 166 200 44
		bam GUIOSTLM
		text style "button"
		text "DELETE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDeleteButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	
	button
	{
		name "BUTTON_mapNoteColor_0"
		area 240 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 0
		action
		"
			mapScreen:OnColorChoice(0)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_1"
		area 316 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 1
		action
		"
			mapScreen:OnColorChoice(1)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_2"
		area 392 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 2
		action
		"
			mapScreen:OnColorChoice(2)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_3"
		area 470 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 3
		action
		"
			mapScreen:OnColorChoice(3)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_4"
		area 546 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 4
		action
		"
			mapScreen:OnColorChoice(4)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_5"
		area 624 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 5
		action
		"
			mapScreen:OnColorChoice(5)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_6"
		area 702 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 6
		action
		"
			mapScreen:OnColorChoice(6)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_7"
		area 166 80 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 7
		action
		"
			mapScreen:OnColorChoice(7)
		"
	}
}
`	
function mapButtonW()
	
	if curActiveEngine == mapScreen then
		return true
	elseif curActiveEngine == worldMapScreen then
		if worldMapScreen:IsTravelButtonVisible() ~= true then
			return true
		else
			return false
		end
	end
	
end
function mapButtonL()
	
	if curActiveEngine == mapScreen then
		return true
	else
		return false
	end
	
end
`
menu
{
	name "WORLD_MAP" --world map menu
	align center center
	ignoreesc
	onOpen "pushSidebars() Infinity_PushMenu('OVERLAY_PORTRAIT')"
	onClose ""


	--label
	--{
	--	area 0 0 1016 582
	--	mosaic Y5MAPW
	--}
	label
	{
		area 0 0 1016 680
		mosaic Y5MAPW2
	}
	map
	{
		name "worldMap"
		--area 224 0 1024 770 --770
		area 8 109 1000 564 --770
		worldmap
		action
		"
			worldMapScreen:OnMapMouseDown(eventXCoord,eventYCoord)
		"
		actionDbl
		"
			worldMapScreen:TravelToSelected()
		"
		actionDrag
		"
			worldMapScreen:OnMapMouseMove(eventXCoord,eventYCoord)
		"
	}
	button
	{
		area 808 715 205 44
		enabled "worldMapScreen:IsTravelButtonVisible()"
		bam GUIOSTUM
		text "TRAVEL_BUTTON"
		text style "button"
		--clickable lua "worldMapScreen:IsTravelButtonClickable()"
		action "
			worldMapScreen:TravelToSelected()
		"	
	}
	button
	{
		enabled "worldMapScreen:IsTravelButtonVisible()"
		area 963 0 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		clickable lua "worldMapScreen:IsTravelButtonClickable()"
		action
		"
			Infinity_PressKeyboardButton(string.format('%c',27))
		"
	}
}


`
chapterBackground = ""

text_CHAPTERSCROLL = ""
text_CHAPTERSCROLL_timeStart = 0
text_CHAPTERSCROLL_auto = 1
function UpdateChapterScroll(top, height, contentHeight)
	if(text_CHAPTERSCROLL_auto == 0) then
		--defer to default scrolling
		return nil
	end
	if(text_CHAPTERSCROLL_auto == 1) then
		--defer to default scrolling
		return nil
	end
	local dT = Infinity_GetClockTicks() - text_CHAPTERSCROLL_timeStart
	local newTop = (dT * -0.006) + height
	if(newTop + contentHeight + height < height) then
		return top
	end
	return newTop
end
function setChapterBackground(id)
	chapterBackground = chapterBackgrounds[id]
end
`
menu
{
	name 'CHAPTER' --autoscroll chapter, chapter menu
	
	align center center
	ignoreEsc
	onOpen
	"
	if Infinity_IsMenuOnStack('CHARGEN_DIFFICULTY') then
		Infinity_PopMenu('CHARGEN_DIFFICULTY')
	end
	"
		
	label
	{
		area 0 0 1024 768
		mosaic lua "chapterBackground"
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 96 488 832 188
		text lua "text_CHAPTERSCROLL"
		text style normal
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		--scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 532 714 234 44
		bam GUIOSTUR
		on escape
		text "DONE_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 280 714 234 44
		bam GUIOSTUL
		text "REPLAY_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
`
epilogueImage = "GUIOSTUR"
`
menu
{
	name 'EPILOGUE'
	align center center
	ignoreEsc
	
	label
	{
		area 0 0 1024 768
		mosaic "NPCCHAP"
	}
	label
	{
		area 106 230 210 330
		bitmap lua "epilogueImage"
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 424 128 540 534
		text lua "text_CHAPTERSCROLL"
		text style normal
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 590 708 234 44
		bam GUIOSTUR
		text "DONE_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 252 708 234 44
		bam GUIOSTUL
		text "REPLAY_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
menu
{
	name 'CHAPTER_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		area 0 0 406 418
		mosaic GUIERR
	}
	label --Title
	{
		area 74 82 254 80
		text "WAITING_FOR_OTHER_PLAYERS"
		text style	"label"
	}
}
`
store = store and store or {} -- allows the store to not crash while using f5
storeGroupItemsVar = 0
storeItemsVar = 0
function getStoreSlotHighlight(highlight)
	if (highlight == 0) then
		return 0
	end
	return 2
end
function storeSplitStack(count)
	if (count ~= 0) then
		storeScreen:SelectStoreItem(storeItemsVar - 1, true);
		storeScreen:SetStoreItemCount(storeItemsVar - 1, count);
	else
		storeScreen:SelectStoreItem(storeItemsVar - 1, false);
	end
end
function groupSplitStack(count)
	if (count ~= 0) then
		storeScreen:SelectGroupItem(storeGroupItemsVar - 1, true);
		storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, count);
	else
		storeScreen:SelectGroupItem(storeGroupItemsVar - 1, false);
	end
end
function checkContainerText(normalStr, containerStr)
	if(storeScreen:IsContainer()) then
		return t(containerStr)
	end
	return t(normalStr)
end
function getItemUsages()
	local item = store.storeItems[rowNumber].item
	if(item.usages > 0) then
		return item.usages
	end
	if(item.stackSize > 1) then
		return item.stackSize
	end
	return 0
end
function canSteal()
	local nb = 0
	for _, v in pairs(store.storeItems) do
		if v.highlight == 1 then
			nb = nb + 1
		end
	end
	return nb > 0 and nb + #store.groupItems <= 16
end
StoreSearchString = ""
function StoreContainsSearchString(rowNumber) -- important
	
	if(StoreSearchString == nil or StoreSearchString == "") then return 1 end --no search string, do nothing
	
	local text = store.storeItems[rowNumber].label
	if(string.find(string.lower(text),string.lower(StoreSearchString))) then
		return 1
	else
		return nil --does not contain search string
	end
end
GroupSearchString = ""
function GroupContainsSearchString(rowNumber)
	
	if(GroupSearchString == nil or GroupSearchString == "") then return 1 end --no search string, do nothing
	
	local text = store.groupItems[rowNumber].label
	if(string.find(string.lower(text),string.lower(GroupSearchString))) then
		return 1
	else
		return nil --does not contain search string
	end
end
`
menu
{
	name 'STORE_BUYSELL' --buysell, store buysell
	align center top
	offset 52 0
	ignoreEsc
	onOpen "storeScreen:UpdateBuySellPanel()"

	label
	{
		area 0 0 860 614
		mosaic Y5SMERCH
	}
	label
	{
		area 48 6 768 52
		text lua "checkContainerText('BUY_SELL_TITLE','CONTAINER_TITLE')"
		text style "title"
	}
	label
	{
		area 277 68 310 26
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
	}
	label -- clears search fields and is only active when text is there
	{
	area 0 0 50 50
	enabled "StoreSearchString ~= '' or GroupSearchString ~= ''"
	on escape
	action
	"
			StoreSearchString=''
			GroupSearchString=''
	"
	}
	label -- clears search fields when no text is present and closes store
	{
	area 0 0 50 50
	enabled "StoreSearchString == '' or GroupSearchString == ''"
	on escape
	action
	"
			Infinity_FocusTextEdit('')
			storeScreen:OnMainDoneButtonClick()			
	"
	}
	button
	{
		area 65 485 30 30
		--enabled "StoreSearchString ~= ''"
		bam GUIOSW
		sequence 2
		scaleToClip
		action
		"
			StoreSearchString = ''
			Infinity_FocusTextEdit('StoreSearch')
		"
	}
	button
	{
		area 485 485 30 30
		--enabled "GroupSearchString ~= ''"
		bam GUIOSW
		sequence 2
		scaleToClip
		action
		"
			GroupSearchString = ''
			Infinity_FocusTextEdit('GroupSearch')
		"
	}
	edit
	{
		name "StoreSearch"
		area 100 485 250 30
		var StoreSearchString
		placeholder "ENTER_TEXT"
		text style "edit"
		text color 'D'
		maxlines 1
		text point 14
		align left bottom
		fill		112 111 111 64
		--EXTEXT4
	}
	edit
	{
		name "GroupSearch"
		area	520 485 250 30
		var GroupSearchString
		placeholder "ENTER_TEXT"
		text style "edit"
		text color 'D'
		maxlines 1
		text point 14
		align left bottom
		fill		112 111 111 64
		--EXTEXT5
	}
	label
	{
		area 274 103 313 31
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	label
	{
		area 94 524 146 23
		enabled "not storeScreen:IsContainer()"
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 310 524 108 28
		enabled "not storeScreen:IsContainer()"
		text lua "storeScreen:GetStoreCost()"
		text style "normal"
		align right center
	}
	label
	{
		area 533 524 146 23
		enabled "not storeScreen:IsContainer()"
		text "PRICE_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 712 524 108 28
		enabled "not storeScreen:IsContainer()"
		text lua "storeScreen:GetGroupCost()"
		text style "normal"
		align right center
	}
	button
	{
		enabled "storeScreen:IsContainer()"
		area 330 566 32 32
		bam ROUNDBUT
		action
		"
			for k,v in ipairs(store.storeItems) do
				if v.valid == 1 and v.highlight == 0 then
					storeScreen:SelectStoreItem(k - 1, true)
					local maxCount = v.maxCount
					if maxCount > 1 then
						storeScreen:SetStoreItemCount(k - 1, maxCount)
					end
					if not storeScreen:IsBuyItemButtonClickable() then
						storeScreen:SelectStoreItem(k - 1, false)
						break
					end
				end
			end
		"
	}
	button -- highlight all inventory items
	{
		area 564 566 32 32
		bam ROUNDBUT
		action
		"
			for k,v in ipairs(store.groupItems) do
				if v.valid == 1 and v.highlight == 0 then
					storeScreen:SelectGroupItem(k - 1, true)
					local count = v.item.count
					local stock = v.numInStock or 0
					if count > 1 then
						storeScreen:SetGroupItemCount(k - 1, count)
					elseif stock > 1 then
						storeScreen:SetGroupItemCount(k - 1, stock)
					end
					if not storeScreen:IsSellItemButtonClickable() then
						storeScreen:SelectGroupItem(k - 1, false)
						break
					end
				end
			end
		"
	}

	list
	{
		column
		{
			width 100
--			label -- provides sections inbetween store panels, is removed
--			{
--				area 0 0 412 62
--				mosaic GUISTBK2
--				respectClipping
--			}
			label
			{
				enabled	"StoreContainsSearchString(rowNumber)"
				area 3 0 52 62
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.storeItems[rowNumber].highlight)"
				icon lua "store.storeItems[rowNumber].item.icon"
				tint lua "store.storeItems[rowNumber].item.tint"
				usages lua "getItemUsages()"
				count lua "store.storeItems[rowNumber].amountSelected"
				align center center
			}
			label
			{
				enabled	"StoreContainsSearchString(rowNumber)"
				area 80 0 250 62
				text lua "store.storeItems[rowNumber].label"
				text style "normal"
				text align left center
			}
			label
			{
				area 315 0 91 62 
				enabled "not storeScreen:IsContainer() and StoreContainsSearchString(rowNumber)"
				text lua "store.storeItems[rowNumber].value"
				text style "gold"
			}
			label
			{
				enabled "store.storeItems[rowNumber].valid == 0 and store.storeItems[rowNumber].highlight == 0 and StoreContainsSearchString(rowNumber)"
				area 0 2 410 58
				rectangle 1
				rectangle opacity 70
			}
		}
		name "buyList"
		area 19 158 404 310  --19 138 434 346
		hidehighlight
		rowheight dynamic
		table		"store.storeItems"
		var			"storeItemsVar"
		scrollbar 'GUISCRC'
		action
		"
			if store.storeItems[storeItemsVar] then
				local highlight = store.storeItems[storeItemsVar].highlight ~= 1
				storeScreen:SelectStoreItem(storeItemsVar - 1, highlight)
				if highlight and storeScreen:IsContainer() then
					local maxCount = store.storeItems[storeItemsVar].maxCount
					if maxCount > 1 then
						storeScreen:SetStoreItemCount(storeItemsVar - 1, maxCount)
					end
				end
				Infinity_PlaySound('GAM_09')
			end
		"
		actionalt
		"
			if store.storeItems[storeItemsVar] then
				showItemDescription(store.storeItems[storeItemsVar], 2)
			end
		"
		actionDbl
		"
			local item = store.storeItems[storeItemsVar]
			if item and item.valid ~= 0 then
				local maxCount = item.maxCount
				if maxCount > 1 then
					popupRequester(maxCount, storeSplitStack, storeScreen:IsContainer())
				end
			end
		"
	}

	list
	{
		column
		{
			width 100
--			label
--			{
--				area 0 0 370 62
--				mosaic GUISTBK1
--				respectClipping
--			}
			label
			{
				area 3 0 52 62
				enabled	"GroupContainsSearchString(rowNumber)"
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.groupItems[rowNumber].highlight)"
				tint lua "store.groupItems[rowNumber].item.tint"
				icon lua "store.groupItems[rowNumber].item.icon"
				usages lua "store.groupItems[rowNumber].item.usages"
				count lua "store.groupItems[rowNumber].count"
				align center center
			}
			label
			{
				area 80 0 200 62
				enabled	"GroupContainsSearchString(rowNumber)"
				text lua "store.groupItems[rowNumber].label"
				text style "normal"
				text align left center
			}
			label
			{
				area 285 0 62 62 -- 300 0 62 62
				enabled "not storeScreen:IsContainer() and GroupContainsSearchString(rowNumber)"
				text lua "store.groupItems[rowNumber].value"
				text style "gold"
			}
			label
			{
				--#21242 We don't grey out bags, even though they're not selectable, because we can open them.
				enabled "store.groupItems[rowNumber].valid == 0  and store.groupItems[rowNumber].item.isBag ~= 1 and GroupContainsSearchString(rowNumber)"
				area 0 2 368 58
				rectangle 1
				rectangle opacity 70
			}
		}
		name "sellList"
		area 462 158 362 310 -- 462 138 392 376
		hidehighlight
		--rowheight	62
		rowheight dynamic
		table		"store.groupItems"
		var			"storeGroupItemsVar"
		scrollbar 'GUISCRC'
		action
		"
			if store.groupItems[storeGroupItemsVar] then
				if store.groupItems[storeGroupItemsVar].item.isBag == 1 then
					showItemDescription(store.groupItems[storeGroupItemsVar], 1)
					itemDescRightButtonAction()
				elseif store.groupItems[storeGroupItemsVar].valid ~= 0 then
					local highlight = store.groupItems[storeGroupItemsVar].highlight ~= 1
					storeScreen:SelectGroupItem(storeGroupItemsVar - 1, highlight)
					if highlight then
						local count = store.groupItems[storeGroupItemsVar].item.count
						local stock = store.groupItems[storeGroupItemsVar].numInStock or 0
						if count > 1 then
							storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, count)
						elseif stock > 1 then
							storeScreen:SetGroupItemCount(storeGroupItemsVar - 1, stock)
						end
					end
					Infinity_PlaySound('GAM_09')
				end
			end
		"
		actionalt
		"
			if store.groupItems[storeGroupItemsVar] then
				showItemDescription(store.groupItems[storeGroupItemsVar], 1)
			end
		"
		actionDbl
		"
			local item = store.groupItems[storeGroupItemsVar]
			if item and item.valid ~= 0 then
				local count = item.item.count
				local stock = item.numInStock or 0
				if count > 1 then
					popupRequester(count, groupSplitStack, true)
				elseif stock > 1 then
					popupRequester(stock, groupSplitStack, true)
				end
			end
		"
	}

	button
	{
		area 118 560 201 44
		bam GUIOSTUM
		text lua "checkContainerText('BUY_BUTTON', 'TO_BACKPACK_BUTTON')"
		text style "button"
		clickable lua "storeScreen:IsBuyItemButtonClickable() and storeScreen:GetStoreCost() <= game:GetPartyGold()"
		action
		"
			storeScreen:OnBuyItemButtonClick()
		"
	}
	button
	{
		area 604 560 201 44
		bam GUIOSTUM
		text lua "checkContainerText('SELL_BUTTON','TO_CONTAINER_BUTTON')"
		text style "button"
		clickable lua "storeScreen:IsSellItemButtonClickable()"
		action
		"
			storeScreen:OnSellItemButtonClick()
		"
	}
	button
	{
		area 342 560 201 44
		enabled "(not storeScreen:IsContainer()) and storeScreen:IsStealEnabled()"
		bam GUIOSTUM
		text "STEAL_BUTTON"
		text style "button"
		clickable lua "canSteal()"
		action
		"
			local toSteal = {}
			for k, v in pairs(store.storeItems) do
				if v.highlight == 1 then
					table.insert(toSteal, v.item.name)
					for i=2, v.amountSelected do table.insert(toSteal, v.item.name) end
					storeScreen:SelectStoreItem(k - 1,  false)
				end
			end

			for _, name in pairs(toSteal) do
				local steal = 0
				for k, v in pairs(store.storeItems) do
					if v.highlight == 1 then
						steal = 0
						break
					end
					if v.item.name == name then
						steal = k
					end
				end

				if steal == 0 then
					break
				end

				storeScreen:SelectStoreItem(steal - 1,  true)
				storeScreen:OnStealItemButtonClick()
			end
		"
	}
	button
	{
		area 342 560 201 44
		enabled "storeScreen:IsCloseBagButtonClickable()"
		bam GUIOSTUM
		text "CLOSE_CONTAINER_BUTTON"
		text style "button"
		action
		"
			storeScreen:OnCloseBagButtonClick()
		"
	}
	button
	{
		area 19 520 68 90
		encumbrance
	}
	button
	{
		area 802 76 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
			store.spellText = ''
		"
	}
}
menu
{
	name 'STORE_IDENTIFY' --identify, store identify
	align center top
	offset 52 0
	ignoreEsc
	onOpen
	"
		storeScreen:UpdateIdentifyPanel()
		store.identifyText = ''
	"

	label
	{
		area 0 0 856 614
		mosaic Y5SMISC
	}
	label
	{
		area 48 6 768 52
		text "IDENTIFY_TITLE"
		text style "title"
	}
	label
	{
		area 277 68 310 26
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
	}
	label
	{
		area 274 103 313 31
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	label
	{
		area 50 522 146 32
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 196 522 108 32
		text lua "storeScreen:GetIdentifyCost()"
		text style "normal"
		align right center
	}
	list
	{
		column
		{
			width 100
--			label
--			{
--				enabled "store.identifyItems[rowNumber].valid"
--				area 0 0 318 62
--				mosaic GUISTBK3
--				respectClipping
--			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid"
				area 3 0 52 62
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.identifyItems[rowNumber].highlight)"
				icon lua "store.identifyItems[rowNumber].item.icon"
				tint lua "store.identifyItems[rowNumber].item.tint"
				align center center
			}
			label
			{
				enabled "store.identifyItems[rowNumber].valid"
				area 80 0 204 62
				text lua "store.identifyItems[rowNumber].label"
				text style "normal"
				text align left center
			}
		}
		area 54 158 310 364 -- 54 138 350 384
		hidehighlight
		rowheight	dynamic
		table		"store.identifyItems"
		var			"identifyItemsVar"
		scrollbar 'GUISCRC'
		action
		"
			local highlight = store.identifyItems[identifyItemsVar].highlight ~= 1
			storeScreen:SelectIdentifyItem(identifyItemsVar - 1, highlight)
		"
	}
	button -- highlight all identify items
	{
		area 70 560 32 32
		bam ROUNDBUT
		action
		"
			for k,v in ipairs(store.identifyItems) do
				if v.valid == 1 and v.highlight == 0 then
					storeScreen:SelectIdentifyItem(k - 1, true)
					local count = v.item.count
					local stock = v.numInStock or 0
					if count > 1 then
						storeScreen:SetIdentifyItemCount(k - 1, count)
					elseif stock > 1 then
						storeScreen:SetIdentifyItemCount(k - 1, stock)
					end
				end
			end
		"
	}
	button
	{
		area 112 554 201 44
		bam GUIOSTUM
		text "IDENTIFY_BUTTON"
		text style "button"
		clickable lua "storeScreen:IsIdentifyItemButtonClickable() and storeScreen:GetIdentifyCost() <= game:GetPartyGold()"
		action
		"
			local keys = {}
			for k,v in pairs(store.identifyItems) do
				if v.highlight == 1 then
					table.insert(keys, k)
				end
			end
			storeScreen:OnIdentifyItemButtonClick()
			for k,v in pairs(keys) do
				local item = store.identifyItems[v].item
				local str = '^0xFF000080' .. item.name .. '^-\n' .. item.description
				identifyText = trim(identifyText .. '\n\n' .. str)
			end
		"
	}
	text
	{
		area 480 182 313 364
		text lua "identifyText"
		text style "normal_parchment"
		scrollbar 'GUISBR'
	}
	button
	{
		area 802 76 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
			store.spellText = ''
		"
	}
}
`
donateStoreFirst = 0
function getDonationFrame()
	if(store.hasDonated ~= nil and store.hasDonated == 1) then
		return 1
	else
		return 0
	end
end
function isStorePlusMinusButtonClickable(minus)
	local amt = tonumber(storeDonateAmountEdit) or 0
	if minus then return amt > 0 end
	return amt < game:GetPartyGold()
end
function storePlusMinusButtonClick(minus)
	local amt = tonumber(storeDonateAmountEdit) or 0
	local delta = 100
	if minus then delta = -100 end
	storeDonateAmountEdit = amt + delta
end

--REP PLACEMENT

storeDonateAmountEdit = storeDonateAmountEdit and storeDonateAmountEdit or 0
StoreFirst = 0
`
menu
{
	name 'STORE_DONATE' --temple, store temple, temple menu
	align center top
	offset 52 0
	ignoreEsc
	onOpen
	"	
		storeScreen:UpdateDonatePanel()
		store.donateText = t('STRPR_DESC')
		
		Infinity_UpdateLuaStats()
		Infinity_PushMenu('OVERLAY_CHARACTER')
		storeDonateAmountEdit = storeRepCheck()
		Infinity_PopMenu('OVERLAY_CHARACTER')
		
		if Infinity_IsMenuOnStack('STORE_DONATE') and donateStoreFirst == 0 then
			setStoreMainPanel(0)
			donateStoreFirst = 1
		end
	"

	label
	{
		area 0 0 856 614
		mosaic Y5STEMPL
	}
	label
	{
		area 48 6 768 52
		text "DONATE_TITLE"
		text style "title"
	}
	label
	{
		area 277 68 310 26
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
	}
	label
	{
		area 64 154 311 267
		bam DONATE
		frame lua "getDonationFrame()"
	}
	label
	{
		area 51 431 346 38
		text "ENTER_DONATION_LABEL"
		text style "label"
	}
	edit
	{
		name		"storeDonateAmountEditArea"
		area		119 477 102 48
		var			storeDonateAmountEdit
		text style	"edit"
		text align right center
		maxlines	1
		action
		"
			-- only permit numbers as letters.
			if(tonumber(letter_pressed) ~= nil or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		bam GUIOSW
		area 288 482 45 42
		clickable lua "isStorePlusMinusButtonClickable(not reverseButtonPosition)"
		sequence lua "reverseButtonPosition and 0 or 1"
		action
		"
			storePlusMinusButtonClick(not reverseButtonPosition)
		"
		actionHold
		"
			storePlusMinusButtonClick(not reverseButtonPosition)
		"
	}
	button
	{
		bam GUIOSW
		area 244 482 45 42
		clickable lua "isStorePlusMinusButtonClickable(reverseButtonPosition)"
		sequence lua "reverseButtonPosition and 1 or 3"
		action
		"
			storePlusMinusButtonClick(reverseButtonPosition)
		"
		actionHold
		"
			storePlusMinusButtonClick(reverseButtonPosition)
		"
	}
	button
	{
		area 112 538 201 44
		bam GUIOSTUM
		text "DONATE_BUTTON"
		text style "button"
		clickable lua "storeScreen:IsDonateButtonClickable()"
		action
		"
			storeScreen:OnDonateButtonClick()
			storeDonateAmountEdit = ''
			Infinity_UpdateLuaStats()
			Infinity_PushMenu('OVERLAY_CHARACTER')
			storeDonateAmountEdit = storeRepCheck()
			Infinity_PopMenu('OVERLAY_CHARACTER')
		"
	}
	label
	{
		area 274 103 313 31
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	text
	{
		area 480 182 313 364
		text lua "store.donateText"
		text style "normal_parchment"
		scrollbar 'GUISBR'
	}
	button
	{
		area 802 76 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
			store.spellText = ''
		"
	}
}
`
function storeRest()
	storeScreen:RestParty()
end
storeInnVar = 0
roomSpellsVar = 0
placeHolderRoom = 1
innStoreFirst = 0
evalRoomBought = 0
setRoomTimer = 0
storeInnTable = {
{''},
{''},
}

function bamInnVar()
local text = nil

	if roomSpellsVar == 1 then
		text = 0
		return text
	elseif roomSpellsVar == 2 then
		text = 1
		return text
	elseif roomSpellsVar == 3 then
		text = 2
		return text
	elseif roomSpellsVar == 4 then
		text = 3
		return text
	end
	
end

function boughtRoom()
	
	if evalRoomBought == 1 and Infinity_GetClockTicks() >= setRoomTimer then
		evalRoomBought = 0
		storeScreen:OnBuySpellButtonClick()
		store.spellText = ''
	end
	
end
`
menu
{
	name 'STORE_ROOMS' --rooms, store rooms
	align center top
	offset 52 0
	ignoreEsc
	onOpen
	"
		storeScreen:UpdateBuySpellPanel()
		if Infinity_IsMenuOnStack('STORE_ROOMS') and innStoreFirst == 0 then
			store.spellText = ''
			innStoreFirst = 1
		end	
	"

	label
	{
		area 0 0 856 614
		mosaic Y5SMISC
	}
	label
	{
		area 48 6 768 52
		text "ROOMS_TITLE"
		text style "title"
	}
	label
	{
		area 277 68 310 26
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
	}
	label
	{
		area 274 103 313 31
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	label
	{
		area 50 522 146 32
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 196 522 108 32
		text lua "storeScreen:GetSpellCost()"
		text style "normal"
		align right center
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 318 62
				mosaic GUISTBK3
				respectClipping
			}
			label
			{
				area 3 0 52 62
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.healingSpells[rowNumber].highlight)"
				icon lua "store.healingSpells[rowNumber].icon"
				tint lua "store.healingSpells[rowNumber].tint"
				align center center
			}
			label
			{
				area 80 0 150 62
				text lua "Infinity_FetchString(store.healingSpells[rowNumber].name)"
				text style "normal"
				text align left center
			}
			label
			{
				area 245 0 54 62
				text style "gold"
				text align center center
				text lua "store.healingSpells[rowNumber].value"
			}
			label
			{
				enabled "store.healingSpells[rowNumber].valid == 0 or store.healingSpells[rowNumber].value > game:GetPartyGold()"
				area 0 2 312 58
				rectangle 1
				rectangle opacity 70
			}
		}
		area 54 138 310 384
		hidehighlight
		rowheight	62
		table		"store.healingSpells"
		var			"roomSpellsVar"
		scrollbar 'GUISCRC'
		action
		"
			local spell = store.healingSpells[roomSpellsVar] or store.healingSpells[placeHolderRoom]
			
			if placeHolderRoom == 1 then
				storeScreen:SelectSpellItem(roomSpellsVar - 1,  false)
				store.spellText = ''
			end
			
			if spell.highlight == 1 then
				storeScreen:SelectSpellItem(roomSpellsVar - 1,  false)
				store.spellText = ''
			elseif spell.valid == 1 and spell.value <= game:GetPartyGold() then
				storeScreen:SelectSpellItem(roomSpellsVar - 1,  true)
			end
		"
		actionAlt
		"
			local spell = store.healingSpells[roomSpellsVar] or store.healingSpells[placeHolderRoom]
			
			if placeHolderRoom == 1 then
				storeScreen:SelectSpellItem(roomSpellsVar - 1,  false)
				store.spellText = ''
			end
			
			if spell.highlight == 1 then
				storeScreen:SelectSpellItem(roomSpellsVar - 1,  false)
				store.spellText = ''
			elseif spell.valid == 1 and spell.value <= game:GetPartyGold() then
				storeScreen:SelectSpellItem(roomSpellsVar - 1,  true)
			end
		"
	}
	list
	{
		column
		{
			width 100
			text
			{
			area 0 0 -1 -1
			enabled "rowNumber < 2"
			text lua "t(store.spellText)"
			text style "normal_parchment"
			text point 12
			}
			label
			{
			area 25 27 264 165
			enabled "rowNumber == 2 and roomSpellsVar <= 4 and storeScreen:GetSpellCost() > 0  and bamInnVar() ~= nil"
			bam portnpc
			scaleToClip
			}
			label
			{
			area 34 30 245 158
			bam INNROOMS
			enabled "rowNumber == 2 and roomSpellsVar <= 4 and storeScreen:GetSpellCost() > 0 and bamInnVar() ~= nil"
			sequence lua "bamInnVar()"
			fill 0 0 0 255
			}
		}
	
	area 480 182 313 364
	hidehighlight
	rowheight dynamic
	scrollbar 'GUISBR'
	table "storeInnTable"
	var "storeInnVar"
	}
	
--	text
--	{
--		area 480 182 313 364
--		text lua "store.spellText"
--		text style "normal_parchment"
--		scrollbar 'GUISBR'
--	}
	button
	{
		area 112 554 201 44
		bam GUIOSTUM
		text "RENT_BUTTON"
		text style "button"
		clickable lua "storeScreen:GetSpellCost() > 0"
		action
		"
			storeScreen:SetRoomType(1)
			storeScreen:OnRentRoomButtonClick()
			if Infinity_IsMenuOnStack('POPUP_INFO') ~= 1 then
				C:AddGold(1)
				evalRoomBought = 1
				setRoomTimer = Infinity_GetClockTicks() + 50
			end
		"
	}
	label
	{
	enabled "boughtRoom()"
	area 0 0 0 0
	}
	button
	{
		area 802 76 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
			store.spellText = ''
		"
	}
}
menu
{
	name 'STORE_HEALING' --healing, store healing
	align center top
	ignoreEsc
	offset 52 0
	onOpen
	"
		storeScreen:UpdateBuySpellPanel()

	"

	label
	{
		area 0 0 856 614
		mosaic Y5SMISC
	}
	label
	{
		area 0 0 768 52
		text "HEALING_TITLE"
		text style "title"
	}
	label
	{
		area 268 66 310 32
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
	}
	label
	{
		area 268 104 310 30
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	label
	{
		area 50 522 146 32
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 196 522 108 32
		text lua "storeScreen:GetSpellCost()"
		text style "normal"
		align right center
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 318 62
				mosaic GUISTBK3
				respectClipping
			}
			label
			{
				area 3 0 52 62
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.healingSpells[rowNumber].highlight)"
				icon lua "store.healingSpells[rowNumber].icon"
				tint lua "store.healingSpells[rowNumber].tint"
				align center center
			}
			label
			{
				area 80 0 150 62
				text lua "Infinity_FetchString(store.healingSpells[rowNumber].name)"
				text style "normal"
				text align left center
			}
			label
			{
				area 245 0 54 62 -- 260 x x x
				text style "gold"
				text align center center
				text lua "store.healingSpells[rowNumber].value"
			}
			label
			{
				enabled "store.healingSpells[rowNumber].valid == 0 or store.healingSpells[rowNumber].value > game:GetPartyGold()"
				area 0 2 312 58
				rectangle 1
				rectangle opacity 70
			}
		}
		area 50 138 310 384 -- 54 138 350 384
		hidehighlight
		rowheight	62
		table		"store.healingSpells"
		var			"healingSpellsVar"
		scrollbar 'GUISCRC'
		action
		"
			local spell = store.healingSpells[healingSpellsVar]
			if spell.highlight == 1 then
				storeScreen:SelectSpellItem(healingSpellsVar - 1,  false)
				store.spellText = ''
			elseif spell.valid == 1 and spell.value <= game:GetPartyGold() then
				storeScreen:SelectSpellItem(healingSpellsVar - 1,  true)
				if store.spell[healingSpellsVar].valid == 0 then
					storeScreen:SelectSpellItem(healingSpellsVar - 1,  false)
					store.spellText = ''
				end
			end
		"
		actionAlt
		"
			local spell = store.healingSpells[healingSpellsVar]
			popupDetails(16189, spell.name, spell.description, spell.icon)
		"
	}
	button
	{
		area 108 554 201 44
		bam GUIOSTUM
		text "BUY_BUTTON"
		text style "button"
		clickable lua "storeScreen:GetSpellCost() > 0"
		action
		"
			storeScreen:OnBuySpellButtonClick()
			store.spellText = ''
		"
	}
	text
	{
		area 470 176 313 364
		text lua "store.spellText"
		text style "normal_parchment"
		scrollbar 'GUISBR'
	}
	button
	{
		area 802 76 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
			store.spellText = ''
		"
	}
}
`
selectedDrinks = 0
function getDrinkSlotHighlight()
    if rowNumber == selectedDrinks then
        return 2
    end
    return 0
end
`
menu
{
	name 'STORE_DRINKS' --drinks, store drinks
	align center top
	offset 52 0
	ignoreEsc
	onOpen
	"
		storeScreen:UpdateBuyDrinksPanel()
		store.drinkText = ''
	"

	label
	{
		area 0 0 856 614
		mosaic Y5SMISC
	}
	label
	{
		area 48 6 768 52
		text "DRINKS_TITLE"
		text style "title"
	}
	label
	{
		area 277 68 310 26
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
	}
	label
	{
		area 274 103 313 31
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	label
	{
		area 50 522 146 32
		text "COST_LABEL"
		text style "label"
		align right center
	}
	label
	{
		area 196 522 108 32
		enabled "store.drinks[selectedDrinks] ~= nil"
		text lua "store.drinks[selectedDrinks].value"
		text style "normal"
		align right center
	}
	list
	{
		column
		{
			width 100
--			label
--			{
--				area 0 0 318 62
--				mosaic GUISTBK3
--				respectClipping
--			}
			label
			{
				area 3 0 52 62
				bam STONSLOT
				frame lua "getDrinkSlotHighlight()"
				align center center
			}
			label
			{
				area 3 5 52 52
				mosaic lua "'TVRNDRK' .. (rowNumber % 3)"
				align center center
			}
			label
			{
				area 68 0 200 62
				text lua "store.drinks[rowNumber].name"
				text style "normal"
				text align left center
			}
			label
			{
				area 245 0 54 62
				text lua "store.drinks[rowNumber].value"
				text style "gold"
				text align center center
			}
			label
			{
				enabled "store.drinks[rowNumber].valid == 0 or store.drinks[rowNumber].value > game:GetPartyGold()"
				area 0 2 312 58
				rectangle 1
				rectangle opacity 150
			}
		}
		area 54 138 310 384
		hidehighlight
		rowheight	62
		table		"store.drinks"
		var			"storeDrinksVar"
		scrollbar 'GUISCRC'
		action
		"
			local drink = store.drinks[storeDrinksVar]
			if selectedDrinks == storeDrinksVar then
				selectedDrinks = 0
				Infinity_PlaySound('GAM_09')
			elseif drink.valid == 1 and drink.value <= game:GetPartyGold() then
				selectedDrinks = storeDrinksVar
				Infinity_PlaySound('GAM_09')
			end
		"
	}
	button
	{
		area 112 554 201 44
		bam GUIOSTUM
		text "DRINK_LABEL"
		text style "button"
		clickable lua "selectedDrinks ~= 0 and store.drinks[selectedDrinks].value <= game:GetPartyGold()"
		action
		"
			storeScreen:OnBuyDrinkButtonClick(selectedDrinks - 1)
			if store.drinks[selectedDrinks].value > game:GetPartyGold() then
				selectedDrinks = 0
			end
		"
	}
	label
	{
		area 484 184 132 90
		mosaic lua "store.qualityIcon"
	}
	label
	{
		area 616 184 183 90
		text "RUMORS_LABEL"
		text style "label_parchment"
	}
	text
	{
		area 484 274 315 273
		text lua "store.drinkText"
		text style "normal_parchment"
		scrollbar 'GUISBR'
	}
	button
	{
		area 802 76 50 50
		bam GUIOSW
		sequence 2
		scaleToClip
		on escape
		action
		"
			storeScreen:OnMainDoneButtonClick()
			store.spellText = ''
		"
	}
}
`
	storePanelButtonHighlightGroup = nil
	function setStoreMainPanel(buttonId)
		local oldMenu  = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(oldMenu)
		storeCurMenuId = storeScreen:GetPanelButtonPanelId(buttonId)
		Infinity_PushMenu(storeScreen:GetMenuName(storeCurMenuId))
	end
	function getBuySellTooltip()
		if(storeScreen:IsContainer()) then
			return t('TRANSFER_ITEMS_TOOLTIP')
		else
			return Infinity_FetchString(storeScreen:GetPanelButtonToolTip(0))
		end
	end
`
menu
{
	name 'STORE_CHOOSER' --chooser, store chooser
	align center top
	offset -428 0
	ignoreEsc
	onOpen
	"
		identifyText = ''
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PushMenu(menuName)
		pushSidebars()
		local buttonId = storeScreen:GetPanelButtonId(storeCurMenuId)
		storePanelButtonHighlightGroup = Infinity_FindUIItemByName('BUTTON_storechooser_' .. buttonId)
		Infinity_PushMenu('ACTIONBAR_PLACEHOLDER')
	"
	onClose
	"
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(menuName)
		if donateStoreFirst == 1 then -- this makes it so the store page starts at cures rather than donate
			donateStoreFirst = 0
		end
		if innStoreFirst ==  1 then
			innStoreFirst = 0
		end
		popSidebars()
		Infinity_PopMenu('ACTIONBAR_PLACEHOLDER')
	"

	label
	{
		area 0 0 104 614
		mosaic Y5SELECT
	}
	label
	{
		area 12 126 63 66
		bam lua "store.icon"
	}
	button 
	{
		name 'BUTTON_storechooser_0' 
		area 12 200 62 64
		enabled "storeScreen:GetPanelButtonEnabled(0)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(0)"
		tooltip lua "getBuySellTooltip()"
		action
		"
			setStoreMainPanel(0) 
		"
	}
	button
	{
		name 'BUTTON_storechooser_1' 
		area 12 274 62 64
		enabled "storeScreen:GetPanelButtonEnabled(1)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(1)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(1))"
		action
		"
			setStoreMainPanel(1) 
		"
	}
	button
	{
		name 'BUTTON_storechooser_2'
		area 12 348 62 64
		enabled "storeScreen:GetPanelButtonEnabled(2)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(2)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(2))"
		action
		"
			setStoreMainPanel(2)
		"
	}
	button
	{
		name 'BUTTON_storechooser_3'
		area 12 420 62 64
		enabled "storeScreen:GetPanelButtonEnabled(3)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(3)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(3))"
		action
		"
			setStoreMainPanel(3)
		"
	}
}
`
curABPlaceholder = 0
`
menu
{
	name 'ACTIONBAR_PLACEHOLDER'
	align center bottom
	ignoreEsc
	offset 170 0
	
	label {area 0 0 0 0}
	button
	{
		area 51 0 52 52
		actionBar 0
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 102 0 52 52
		actionBar 1
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 153 0 52 52
		actionBar 2
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 204 0 52 52
		actionBar 3
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 255 0 52 52
		actionBar 4
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 306 0 52 52
		actionBar 5
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area  357 0 52 52
		actionBar 6
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 408 0 52 52
		actionBar 7
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 459 0 52 52
		actionBar 8
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 510 0 52 52
		actionBar 9
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 561 0 52 52
		actionBar 10
		clickable lua "curABPlaceholder == 1"
	}
	button
	{
		area 612 0 52 52
		actionBar 11
		clickable lua "curABPlaceholder == 1"
	}
	label
	{
	area 51 0 612 52
	fill 0 0 0 100
	}
	button
	{
		area 51 0 52 52
		tooltip lua "getActionBarTooltip(0)"
	}
	button
	{
		area 102 0 52 52
		tooltip lua "getActionBarTooltip(1)"
	}
	button
	{
		area 153 0 52 52
		tooltip lua "getActionBarTooltip(2)"
	}
	button
	{
		area 204 0 52 52
		tooltip lua "getActionBarTooltip(3)"
	}
	button
	{
		area 255 0 52 52
		tooltip lua "getActionBarTooltip(4)"
	}
	button
	{
		area 306 0 52 52
		tooltip lua "getActionBarTooltip(5)"
	}
	button
	{
		area  357 0 52 52
		tooltip lua "getActionBarTooltip(6)"
	}
	button
	{
		area 408 0 52 52
		tooltip lua "getActionBarTooltip(7)"
	}
	button
	{
		area 459 0 52 52
		tooltip lua "getActionBarTooltip(8)"
	}
	button
	{
		area 510 0 52 52
		tooltip lua "getActionBarTooltip(9)"
	}
	button
	{
		area 561 0 52 52
		tooltip lua "getActionBarTooltip(10)"
	}
	button
	{
		area 612 0 52 52
		tooltip lua "getActionBarTooltip(11)"
	}
}

`
	function worldDeathLoadClickable()
		if(e:IsMultiplayer() and not e:IsHosting()) then
			return false
		end
		return not worldScreen:GetHardPaused()
	end
	function worldDeathQuitClickable()
		return not worldScreen:GetHardPaused()
	end
	function worldDeathText()
		if(e:IsMultiplayer()) then
			if(e:IsHosting()) then
				return Infinity_FetchString(19377)
			else
				return Infinity_FetchString(11331)
			end
		else
			if(worldDeathStr == nil) then
				return Infinity_FetchString(16498)
			else
				return Infinity_FetchString(worldDeathStr)
			end
		end
	end
	function worldDeathQuitText()
		if(e:IsMultiplayer()) then
			return t('LOGOUT_BUTTON')
		else
			return t('QUIT_BUTTON')
		end
	end
	groundItemsButtonToggle = 0
	worldChatEdit = ""
`
menu
{
	name "WORLD_DEATH"
	align center center
	ignoreEsc
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6
	}
	label
	{
		area 29 21 609 126
		text lua "worldDeathText()"
		text style	"label"
		text align center center
	}
	button
	{
		area 88 170 234 44
		bam GUIOSTUL
		text "LOAD_BUTTON"
		text style	"button"
		clickable lua "worldDeathLoadClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathLoad()
		"
	}
	button
	{
		area 364 170 234 44
		bam GUIOSTUR
		text style	"button"
		text lua "worldDeathQuitText()"
		clickable lua "worldDeathQuitClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathQuit()
		"
	}
}
`
actionBarTooltip = {}
groundItemsButtonToggle = 0
curRepCheck = 1

function getActionBarTooltip(idx)
	if actionBarTooltip[idx]:find(" : .") ~= nil then
		return actionBarTooltip[idx]
	end
	return ""
end

B3ActionbarAlreadyUp = false -- helps prevent errors happening from new bar popups	

function initialRep() -- allows rep prices to preload
	if curRepCheck == 1 and e:GetActiveEngine() == worldScreen then
		curRepCheck = 0
		ovrCharScreen = 9
		e:GetActiveEngine():OnLeftPanelButtonClick(4)
		e:SelectEngine(worldScreen)
		ovrCharScreen = 7
	end
	return curRepCheck
end
	
	function getActionBarSize()
		local screenWidth, screenHeight = Infinity_GetScreenSize() -- .03605 / .035
		Infinity_SetArea('actionbar0', screenWidth*.29, screenHeight*.932, screenWidth*.0385, screenHeight*.068) --full size@.39/.07
		Infinity_SetArea('actionbar1', screenWidth*.325, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar2', screenWidth*.36, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar3', screenWidth*.395, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar4', screenWidth*.43, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar5', screenWidth*.465, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar6', screenWidth*.5, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar7', screenWidth*.535, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar8', screenWidth*.57, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar9', screenWidth*.605, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar10', screenWidth*.64, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
		Infinity_SetArea('actionbar11', screenWidth*.675, screenHeight*.932, screenWidth*.0385, screenHeight*.068)
	end
	
function enabledActionbar()
	
	if setWorldMessages == 1 then
		return false
	end
	
	return true
end
`
menu
{
	name "WORLD_ACTIONBAR" --world actionbar
	enabled "enabledActionbar() == true"
	align center bottom
	ignoreesc
	offset 170 0
	onOpen
	"
		if Infinity_IsMenuOnStack('WORLD_DIALOG') or Infinity_IsMenuOnStack('OPTIONS_GAMEPLAY') then
			Infinity_PopMenu('WORLD_ACTIONBAR')
		elseif e:GetActiveEngine() ~= worldScreen then
			Infinity_PopMenu('WORLD_ACTIONBAR')
		end
		if B3ActionbarAlreadyUp then 
			return 0 
		end
		B3ActionbarAlreadyUp = true
		Infinity_PushMenu('WORLD_MESSAGES')
		if optionQuickLoot == 1 then
			worldScreen:StartGroundItems()
		end
	"
	onClose
	"
		B3ActionbarAlreadyUp = false
		Infinity_PopMenu('WORLD_QUICKLOOT')
		Infinity_PopMenu('WORLD_MESSAGES')
	"
	label
	{
	area 0 0 0 0
	enabled "initialRep() == 1"
	}
	label
	{
	area 0 0 0 0
	on "Space"
	enabled "optionNoPause == 1 and Infinity_TextEditHasFocus() == 0"
	action
	"
	if worldScreen:CheckIfPaused() then
		worldScreen:TogglePauseGame(true)
	end
	"
	}
	button
	{
		name "actionbar0"
		area 51 0 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "getActionBarTooltip(0)"
		action "buttonArray:OnLButtonPressed(0)"
		actionAlt "buttonArray:OnRButtonPressed(0)"
	}
	button
	{
		name "actionbar1"
		area 102 0 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "getActionBarTooltip(1)"
		action "buttonArray:OnLButtonPressed(1)"
		actionAlt "buttonArray:OnRButtonPressed(1)"
	}
	button
	{
		name "actionbar2"
		area 153 0 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "getActionBarTooltip(2)"
		action "buttonArray:OnLButtonPressed(2)"
		actionAlt "buttonArray:OnRButtonPressed(2)"
	}
	button
	{
		name "actionbar3"
		area 204 0 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "getActionBarTooltip(3)"
		action "buttonArray:OnLButtonPressed(3)"
		actionAlt "buttonArray:OnRButtonPressed(3)"
	}
	button
	{
		name "actionbar4"
		area 255 0 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "getActionBarTooltip(4)"
		action "buttonArray:OnLButtonPressed(4)"
		actionAlt "buttonArray:OnRButtonPressed(4)"
	}
	button
	{
		name "actionbar5"
		area 306 0 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "getActionBarTooltip(5)"
		action "buttonArray:OnLButtonPressed(5)"
		actionAlt "buttonArray:OnRButtonPressed(5)"
	}
	button
	{
		name "actionbar6"
		area  357 0 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "getActionBarTooltip(6)"
		action "buttonArray:OnLButtonPressed(6)"
		actionAlt "buttonArray:OnRButtonPressed(6)"
	}
	button
	{
		name "actionbar7"
		area 408 0 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "getActionBarTooltip(7)"
		action "buttonArray:OnLButtonPressed(7)"
		actionAlt "buttonArray:OnRButtonPressed(7)"
	}
	button
	{
		name "actionbar8"
		area 459 0 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "getActionBarTooltip(8)"
		action "buttonArray:OnLButtonPressed(8)"
		actionAlt "buttonArray:OnRButtonPressed(8)"
	}
	button
	{
		name "actionbar9"
		area 510 0 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "getActionBarTooltip(9)"
		action "buttonArray:OnLButtonPressed(9)"
		actionAlt "buttonArray:OnRButtonPressed(9)"
	}
	button
	{
		name "actionbar10"
		area 561 0 52 52
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "getActionBarTooltip(10)"
		action "buttonArray:OnLButtonPressed(10)"
		actionAlt "buttonArray:OnRButtonPressed(10)"
	}
	button
	{
		name "actionbar11"
		area 612 0 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "getActionBarTooltip(11)"
		action "buttonArray:OnLButtonPressed(11)"
		actionAlt "buttonArray:OnRButtonPressed(11)"
	}
	button
	{
		name "PermanentThieving"
		area 0 0 0 0
		enabled "keybindings[2][7][6] ~= 0 and string.find(string.lower(characters[id].class), string.lower('Cleric / Thief'))"
		bam GUIBTACT
		scaleToClip
		frame 26
		tooltip lua "string.format('%s : %s',string.upper(string.char(keybindings[2][7][6])),getHotkeyName(2,7))"
		action "Infinity_PressKeyboardButton(string.format('%c', keybindings[2][7][6]))"
		actionAlt "Infinity_PressKeyboardButton(string.format('%c', 27))"
	}
}

`
loot = loot and loot or {
	containerItems = {},
	groupItems = {},
	groundItems = {}
}
forceLootScroll = false
forceItemScroll = false
lootPage = 0
itemPage = 0
function getContainerItemProperty(index, property)
	local idxScrolled = index + worldScreen:GetTopContainerItem()
	if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
		return nil
	end
	return loot.containerItems[idxScrolled].item[property]
end
function getGroupItemProperty(index, property)
	local idxScrolled = index + worldScreen:GetTopGroupItem()
	if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
		return nil
	end
	return loot.groupItems[idxScrolled].item[property]
end
function scrollContainerItems()
	if scrollDirection > 0 and worldScreen:ContainerScrollEnabled(-1) then
		worldScreen:OnContainerScroll(-1)
		forceLootScroll = true
		lootPage = math.max(lootPage - 1, 0)
	elseif scrollDirection < 0 and worldScreen:ContainerScrollEnabled(1) then
		worldScreen:OnContainerScroll(1)
		forceLootScroll = true
		lootPage = lootPage + 1
	end
end
function lootScroll(top, height, contentHeight)
	if forceLootScroll then
		forceLootScroll = false
		return -lootPage * 106
	end

	local page = math.floor((-top + 53) / 106)
	if page ~= lootPage then
		worldScreen:OnContainerScroll(page - lootPage)
		lootPage = page
	end
	return nil
end
function scrollGroupItems()
	if scrollDirection > 0 and itemPage > 0 then
		worldScreen:OnGroupScroll(-1)
		forceItemScroll = true
		itemPage = itemPage - 1
	elseif scrollDirection < 0 and itemPage < 6 then
		worldScreen:OnGroupScroll(1)
		forceItemScroll = true
		itemPage = itemPage + 1
	end
end
function groupScroll(top, height, contentHeight)
	if forceItemScroll then
		forceItemScroll = false
		return -itemPage * 106
	end

	local page = math.floor((-top + 53) / 106)
	if page ~= itemPage then
		worldScreen:OnGroupScroll(page - itemPage)
		itemPage = page
	end
	return nil
end
function showContainerItemDescription(index)
	local idxScrolled = index + worldScreen:GetTopContainerItem()
	if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
		return nil
	end
	Infinity_GetContainerItemDescription(idxScrolled)
	showItemDescription(loot.containerItems[idxScrolled].item, 2)
end
function showGroupItemDescription(index)
	local idxScrolled = index + worldScreen:GetTopGroupItem()
	if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
		return nil
	end
	Infinity_GetGroupItemDescription(idxScrolled)
	showItemDescription(loot.groupItems[idxScrolled].item, 2)
end
`

menu
{
	name "WORLD_CONTAINER" -- world loot, loot container, loot menu, world container
	align center bottom
	offset 20 0
	ignoreesc
	onOpen
	"	
		--Infinity_PushMenu('WORLD_MESSAGES')
		lootPage = 0
		itemPage = 0
	"
	onclose
	"
		--Infinity_PopMenu('WORLD_MESSAGES')
	"
	label 
	{
	enabled "Infinity_TextEditHasFocus() == 0" 
	on escape 
	action 
	"
	e:SelectEngine(worldScreen)
	"
	}
	label
	{
		area 0 0 653 130
		mosaic gmpwmsg0
	}
	label
	{
		area 16 10 83 100
		bam lua "loot.containerIcon"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 179 106
			}
		}
		area 108 8 179 106
		hidehighlight
		rowheight	dynamic
		table		"makeTable(20)"
		scrollbar 'GUISCRC'
		scrollbar func "lootScroll"
	}
	button
	{
		area 108 8 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(0,'name')"
		tint lua	"getContainerItemProperty(0,'tint')"
		icon lua	"getContainerItemProperty(0,'icon')"
		count lua	"getContainerItemProperty(0,'count')"
		usages lua	"getContainerItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(0)"
		actionAlt	"showContainerItemDescription(0)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 162 8 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(1,'name')"
		tint lua	"getContainerItemProperty(1,'tint')"
		icon lua	"getContainerItemProperty(1,'icon')"
		count lua	"getContainerItemProperty(1,'count')"
		usages lua	"getContainerItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(1)"
		actionAlt	"showContainerItemDescription(1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 216 8 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(2,'name')"
		tint lua	"getContainerItemProperty(2,'tint')"
		icon lua	"getContainerItemProperty(2,'icon')"
		count lua	"getContainerItemProperty(2,'count')"
		usages lua	"getContainerItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(2)"
		actionAlt	"showContainerItemDescription(2)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 108 62 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(3,'name')"
		tint lua	"getContainerItemProperty(3,'tint')"
		icon lua	"getContainerItemProperty(3,'icon')"
		count lua	"getContainerItemProperty(3,'count')"
		usages lua	"getContainerItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(3)"
		actionAlt	"showContainerItemDescription(3)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 162 62 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(4,'name')"
		tint lua	"getContainerItemProperty(4,'tint')"
		icon lua	"getContainerItemProperty(4,'icon')"
		count lua	"getContainerItemProperty(4,'count')"
		usages lua	"getContainerItemProperty(4,'usages')"
		action		"worldScreen:OnContainerButtonClick(4)"
		actionAlt	"showContainerItemDescription(4)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 216 62 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(5,'name')"
		tint lua	"getContainerItemProperty(5,'tint')"
		icon lua	"getContainerItemProperty(5,'icon')"
		count lua	"getContainerItemProperty(5,'count')"
		usages lua	"getContainerItemProperty(5,'usages')"
		action		"worldScreen:OnContainerButtonClick(5)"
		actionAlt	"showContainerItemDescription(5)"
		actionScroll "scrollContainerItems()"
	}
	label
	{
		area 313 12 68 100
		encumbrance
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 125 106
			}
		}
		area 411 8 125 106
		hidehighlight
		rowheight	dynamic
		table		"makeTable(7)"
		scrollbar 'GUISCRC'
		scrollbar func "groupScroll"
	}
	button
	{
		area 411 8 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(0,'name')"
		tint lua	"getGroupItemProperty(0,'tint')"
		icon lua	"getGroupItemProperty(0,'icon')"
		count lua	"getGroupItemProperty(0,'count')"
		usages lua	"getGroupItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(10)"
		actionAlt	"showGroupItemDescription(0)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 465 8 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(1,'name')"
		tint lua	"getGroupItemProperty(1,'tint')"
		icon lua	"getGroupItemProperty(1,'icon')"
		count lua	"getGroupItemProperty(1,'count')"
		usages lua	"getGroupItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(11)"
		actionAlt	"showGroupItemDescription(1)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 411 62 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(2,'name')"
		tint lua	"getGroupItemProperty(2,'tint')"
		icon lua	"getGroupItemProperty(2,'icon')"
		count lua	"getGroupItemProperty(2,'count')"
		usages lua	"getGroupItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(12)"
		actionAlt	"showGroupItemDescription(2)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 465 62 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(3,'name')"
		tint lua	"getGroupItemProperty(3,'tint')"
		icon lua	"getGroupItemProperty(3,'icon')"
		count lua	"getGroupItemProperty(3,'count')"
		usages lua	"getGroupItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(13)"
		actionAlt	"showGroupItemDescription(3)"
		actionScroll "scrollGroupItems()"
	}
	label
	{
		area 560 20 78 50
		bam GUIGOLD
	}
	label
	{
		area 560 76 78 28
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	button
	{
		area 40 80 32 32
		bam ROUNDBUT
		scaleToClip
		action
		"
			worldScreen:TakeAllFromContainer()
		"
	}
}
`
function getSlotContainerId(index)
	local idxScrolled = index + worldScreen:GetTopGroundItem()
	if(loot.groundItems[idxScrolled] == nil) then
		return nil
	end
	return loot.groundItems[idxScrolled].containerId
end
function getGroundItemProperty(index, property)
	local idxScrolled = index + worldScreen:GetTopGroundItem()
	if(loot.groundItems[idxScrolled] == nil or loot.groundItems[idxScrolled].item == nil) then
		return nil
	end
	return loot.groundItems[idxScrolled].item[property]
end
function groundItemClick(slotId)
	local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
	if(slot and slot.item) then
		worldScreen:OnGroundButtonClick(slot.slotId, slot.containerId, slot.item.res)
		mouseOverQuicklootContainer = nil
	end
end
function showGroundItemDescription(slotId)
	local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
	if(slot and slot.item) then
		Infinity_GetGroundItemDescription(slotId + worldScreen:GetTopGroundItem(), slot.slotId, slot.containerId)
		showItemDescription(slot.item, 2)
	end
end
--function setQuickLootOffset()
--	local x,y,w,h = Infinity_GetArea('messagesRect')
--	local offset = h + 78
--	Infinity_SetOffset('WORLD_QUICKLOOT', 0, -offset)
--end
function dragQuickLoot()
	local offsetX,offsetY,menuWidth,menuHeight = Infinity_GetMenuArea('WORLD_QUICKLOOT')
	offsetX = offsetX + motionX
	offsetY = offsetY + motionY
	
	--clamping
--	if(offsetX < 0) then
--		offsetX = 0
--	end
--	if(offsetY < 50) then
--		offsetY = 50
--	end
	
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	if(offsetX > screenWidth - 0 - menuWidth) then
		offsetX = screenWidth - 0 - menuWidth
	end
	if(offsetY > screenHeight - menuHeight) then
		offsetY = screenHeight - menuHeight
	end
	
	Infinity_SetOffset('WORLD_QUICKLOOT', offsetX, offsetY)
end
`
menu 
{ 
	name 'WORLD_QUICKLOOT'
	--enabled "if not Infinity_IsMenuOnStack('WORLD_DIALOG') end"
	align center bottom
	offset 221 -68
	ignoreEsc
	onOpen
	"
		if e:GetActiveEngine() ~= worldScreen then
			Infinity_PopMenu('WORLD_QUICKLOOT')
		end
	"
	onClose 
	" 
		mouseOverQuicklootContainer = nil 
	"
	button
	{
		area 0 -5 47 68
		enabled "worldScreen:GroundScrollEnabled(-1)"
		bam RGAROWQ
		sequence 0
		action "worldScreen:OnGroundScroll(-1)"
		actionScroll "scrollQuickLootItems()"
	}
	button
	{
		area 560 -5 47 68
		enabled "worldScreen:GroundScrollEnabled(1)"
		bam RGAROWQ
		sequence 1
		action  "worldScreen:OnGroundScroll(1)"
	}
	button 
	{ 
		area 45 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(0)"
		tooltip lua "getGroundItemProperty(0,'name')" 
		tint lua "getGroundItemProperty(0,'tint')" 
		icon lua "getGroundItemProperty(0,'icon')" 
		count lua "getGroundItemProperty(0,'count')" 
		usages lua "getGroundItemProperty(0,'usages')" 
		action "groundItemClick(0)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(0,'containerId')"
		actionAlt "showGroundItemDescription(0)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()"
	} 
	button 
	{ 
		area 96 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(1)"
		tooltip lua "getGroundItemProperty(1,'name')" 
		tint lua "getGroundItemProperty(1,'tint')" 
		icon lua "getGroundItemProperty(1,'icon')" 
		count lua "getGroundItemProperty(1,'count')" 
		usages lua "getGroundItemProperty(1,'usages')" 
		action "groundItemClick(1)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(1,'containerId')"
		actionAlt "showGroundItemDescription(1)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()"
	} 
	button 
	{ 
		area 147 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(2)"
		tooltip lua "getGroundItemProperty(2,'name')" 
		tint lua "getGroundItemProperty(2,'tint')" 
		icon lua "getGroundItemProperty(2,'icon')" 
		count lua "getGroundItemProperty(2,'count')" 
		usages lua "getGroundItemProperty(2,'usages')" 
		action "groundItemClick(2)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(2,'containerId')"
		actionAlt "showGroundItemDescription(2)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()" 
	} 
	button 
	{ 
		area 198 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(3)"
		tooltip lua "getGroundItemProperty(3,'name')" 
		tint lua "getGroundItemProperty(3,'tint')" 
		icon lua "getGroundItemProperty(3,'icon')" 
		count lua "getGroundItemProperty(3,'count')" 
		usages lua "getGroundItemProperty(3,'usages')" 
		action "groundItemClick(3)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(3,'containerId')"
		actionAlt "showGroundItemDescription(3)"		
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()"
	} 
	button 
	{ 
		area 249 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(4)"
		tooltip lua "getGroundItemProperty(4,'name')" 
		tint lua "getGroundItemProperty(4,'tint')" 
		icon lua "getGroundItemProperty(4,'icon')" 
		count lua "getGroundItemProperty(4,'count')" 
		usages lua "getGroundItemProperty(4,'usages')" 
		action "groundItemClick(4)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(4,'containerId')" 
		actionAlt "showGroundItemDescription(4)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()"
	} 
	button
	{ 
		area 300 0 52 52 
		bam STONSLOT
		scaleToClip
		enabled "getSlotContainerId(5)"
		tooltip lua "getGroundItemProperty(5,'name')" 
		tint lua "getGroundItemProperty(5,'tint')" 
		icon lua "getGroundItemProperty(5,'icon')" 
		count lua "getGroundItemProperty(5,'count')" 
		usages lua "getGroundItemProperty(5,'usages')" 
		action "groundItemClick(5)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(5,'containerId')" 
		actionAlt "showGroundItemDescription(5)"
		actionExit "mouseOverQuicklootContainer = nil" actionScroll "scrollQuickLootItems()" 
		actionScroll "scrollQuickLootItems()"
	} 
	button
	{ 
		area 351 0 52 52 
		enabled "getSlotContainerId(6)"
		bam STONSLOT 
		scaleToClip
		tooltip lua "getGroundItemProperty(6,'name')" 
		tint lua "getGroundItemProperty(6,'tint')" 
		icon lua "getGroundItemProperty(6,'icon')" 
		count lua "getGroundItemProperty(6,'count')" 
		usages lua "getGroundItemProperty(6,'usages')" 
		action "groundItemClick(6)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(6,'containerId')" 
		actionAlt "showGroundItemDescription(6)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()" 
	} 
	button 
	{ 
		area 402 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(7)"
		tooltip lua "getGroundItemProperty(7,'name')" 
		tint lua "getGroundItemProperty(7,'tint')" 
		icon lua "getGroundItemProperty(7,'icon')" 
		count lua "getGroundItemProperty(7,'count')" 
		usages lua "getGroundItemProperty(7,'usages')" 
		action "groundItemClick(7)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(7,'containerId')"
		actionAlt "showGroundItemDescription(7)"		
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()" 
	} 
	button 
	{ 
		area 453 0 52 52 
		bam STONSLOT 
		scaleToClip
		enabled "getSlotContainerId(8)"
		tooltip lua "getGroundItemProperty(8,'name')" 
		tint lua "getGroundItemProperty(8,'tint')" 
		icon lua "getGroundItemProperty(8,'icon')" 
		count lua "getGroundItemProperty(8,'count')" 
		usages lua "getGroundItemProperty(8,'usages')" 
		action "groundItemClick(8)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(8,'containerId')" 
		actionAlt "showGroundItemDescription(8)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()" 
	} 
	button 
	{ 
		area 504 0 52 52 
		scaleToClip
		bam STONSLOT 
		enabled "getSlotContainerId(9)"
		tooltip lua "getGroundItemProperty(9,'name')" 
		tint lua "getGroundItemProperty(9,'tint')" 
		icon lua "getGroundItemProperty(9,'icon')" 
		count lua "getGroundItemProperty(9,'count')" 
		usages lua "getGroundItemProperty(9,'usages')" 
		action "groundItemClick(9)" 
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(9,'containerId')" 
		actionAlt "showGroundItemDescription(9)"
		actionExit "mouseOverQuicklootContainer = nil" 
		actionScroll "scrollQuickLootItems()" 
	} 
} 
` 
--function setQuickLootPosition(buttonPress) 
--	local x,y = Infinity_GetMousePosition() 
--	if (buttonPress) then 
--		x = x -375
--	else 
--		x = x -130 
--	end 
--	y = y - 180 local screenWidth,screenHeight = Infinity_GetScreenSize() 
--	
--	if (x < (-screenWidth+422)/2 - 89) then 
--		x = (-screenWidth+422)/2 - 89 
--	else 
--	if (x > (screenWidth+422)/2 - 348) then 
--		x = (screenWidth+422)/2 - 348 
--		end 
--	end 
--	if (y < (-screenHeight+132)/2 + 10) then 
--		y = (-screenHeight+132)/2 + 10 
--	else 
--	if (y > (screenHeight+132)/2 - 162) then 
--		y = (screenHeight+132)/2 - 162 
--		end 
--	end 
--	
--	Infinity_SetOffset('WORLD_QUICKLOOT',x,y) 
--	
--	local i = 0 while (worldScreen:GroundScrollEnabled(i-1)) do i = i - 1 
--	end 
--	
--	worldScreen:OnGroundScroll(i) 
--end 
function scrollQuickLootItems() 
	if scrollDirection > 0 then 
		if worldScreen:GroundScrollEnabled(-1) then 
			worldScreen:OnGroundScroll(-1) 
		end 
	elseif scrollDirection < 0 then 
		if worldScreen:GroundScrollEnabled(1) then 
			worldScreen:OnGroundScroll(1) 
		end 
	end 
end 
function getQuickLootPageText() 
	local prev = 0 
	while (worldScreen:GroundScrollEnabled(-prev-1)) do 
		prev = prev + 1 
	end 
	local next = 0 
	while (worldScreen:GroundScrollEnabled(next+1)) do 
		next = next + 1 
	end 
	return (prev+1) .. "/" .. (prev+next+1) 
end 
` 
menu
{
	name 'WORLD_PICKPARTY'
	modal
	align center bottom
	ignoreEsc
	label
	{
		area 0 0 854 134
		mosaic GUWPKPC0
	}
	label
	{
		area 15 4 431 26
		text "REMOVE_MEMBERS_LABEL"
		text style "label"
		align left center
	}
	button
	{
		area 15 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(0)"
		glow lua "worldScreen:GetPickPartyCharacterId(0) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(0)
		"
	}
	button
	{
		area 77 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(1)"
		glow lua "worldScreen:GetPickPartyCharacterId(1) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(1)
		"
	}
	button
	{
		area 139 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(2)"
		glow lua "worldScreen:GetPickPartyCharacterId(2) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(2)
		"
	}
	button
	{
		area 201 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(3)"
		glow lua "worldScreen:GetPickPartyCharacterId(3) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(3)
		"
	}
	button
	{
		area 263 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(4)"
		glow lua "worldScreen:GetPickPartyCharacterId(4) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(4)
		"
	}
	button
	{
		area 325 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(5)"
		glow lua "worldScreen:GetPickPartyCharacterId(5) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(5)
		"
	}
	button
	{
		area 387 26 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(6)"
		glow lua "worldScreen:GetPickPartyCharacterId(6) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(6)
		"
	}
	label
	{
		area 547 18 91 32
		text lua "game:GetCharacterOverflowCount()"
		text style "normal"
		align center center
	}
	button
	{
		area 638 18 200 44
		bam GUIOSTUM
		text "REMOVE_BUTTON"
		text style "button"
		clickable lua "worldScreen:IsPickPartyRemoveButtonClickable()"
		action
		"
			popup2Button(17518, 'REMOVE_BUTTON', function() worldScreen:RemoveCharacterFromParty() end)
		"
	}
	button
	{
		area 638 62 200 44
		bam GUIOSTLM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "worldScreen:IsPickPartyDoneButtonClickable()"
		on esc
		action
		"
			worldScreen:OnPickPartyDoneButtonClick()
		"
	}
}
`
currentSave = 0
function getSaveBackground(row)
	if(row == currentSave) then
		return "GUISAVEC"
	else
		return "GUISAVEB"
	end
end
function getLoadMenuTitle()
	if (gameSaves.isImporting~=1) then
		return t('LOAD_TITLE')
	end
	return t('IMPORT_TITLE')
end
`

menu
{
	name 'LOAD' -- load menu, load game
	align center center
	ignoreEsc
	onOpen
	"
		if setNoEscMenu == 1 then
			setNoEscMenu = 0
		end
	"
	button
	{
		area	0 0 1024 768
		mosaic	GUILOAD --GUISRSVB
		action 
		"
			currentSave = nil
		"
	}
	label
	{
		area 162 16 700 30
		text lua "getLoadMenuTitle()"
		text style "title"
	}
	
	list
	{
		column 
		{ 
			width	73
			label -- middle section
			{
				area 		0 0 928 -1
				mosaic lua  'getSaveBackground(rowNumber)'
				respectClipping 
				align		center center
			}
			button -- screenshot of saved game
			{
				enabled		"gameSaves.files[rowNumber].hasScreenShot"
				area		10 5 60 60
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	11 15 160 120 
				align		center center
			}

			label -- name of quicksave
			{
				area	216 21 300 30
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "label"
				align	left top
			}
	
			label
			{
				area	216 55 300 30
				text	lua "gameSaves.files[rowNumber].chapter .. ' ' .. gameSaves.files[rowNumber].time"
				text style "label"
				align	left top
				pad		0 0 -200 0				
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait0"
				area	310 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	0 0 30 48
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait1"
				area	372 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait2"
				area	434 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait3"
				area	496 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait4"
				area	558 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait5"
				area	620 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	0 0 30 48 
				align	center center
			}
		}
		column 
		{ 
			width	29 --27 normally, causes it to clip
			label
			{
				area 		-684,0,928,-1
				mosaic lua  'getSaveBackground(rowNumber)'
				respectClipping 
				glow lua 	"rowNumber == currentSave"
				align		center center
			}
			label
			{
				area	8 34 195 100
				text	lua "gameSaves.files[rowNumber].sName "
				text style "label"
				text point 18
				align	center center
			}
		}

		actionDbl
		"
			Infinity_PlaySound('GAM_01')
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
		"
		
		area 36 56 954 642
		rowheight	145
		hidehighlight
		table		"gameSaves.files"
		var		currentSave
		scrollbar	'guiwrsp'
	}

	button
	{
		area		622 710 204 44
		bam		GUIOSTLM
		clickable	lua	"currentSave"		
		text		"LOAD_BUTTON"
		text style	"button"
		action
		"
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
		"
	}
	button
	{
		enabled		"gameSaves.isImporting ~= 1"
		area		410 710 204 44
		bam		GUIOSTLM
		clickable	lua	"currentSave"		
		text		"DELETE_BUTTON"
		text style	"button"
		on backspace
		action
		"
			popup2Button(15305, 'DELETE_BUTTON', function() loadScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		area		200 710 204 44
		bam		GUIOSTLM
		text 		"MAIN_MENU"
		text style	"button"
		on escape
		action
		"
			if(e:IsMultiplayer()) then
				optionsScreen:SetEngineState(1)
				loadScreen:OnMainCancelButtonClick()
			else
				loadScreen:OnMainCancelButtonClick();
				startEngine:SetEngineState(0)
				e:SelectEngine(startEngine)
			end
		"
	}
}
`
	function compareSaves(s1,s2)
		--return true if s1 comes before s2
		--show the most recent saves first
		return s1.fileTime > s2.fileTime
	end
	function sortSaves()
		table.sort(gameSaves.files,compareSaves)
	end
`
menu
{
	name 'SAVE' --save menu, save game
	align center center
	ignoreesc
	onOpen "setNoEscMenu = 1"
	label
	{
		area	0 0 1024 768
		mosaic	GUICREDT --GUISRSVB
		action 
		"
			currentSave = nil
		"
	}
	label
	{
		area 162 16 700 44
		text "SAVE_TITLE"
		text style "title"
	}

	list
	{
		column 
		{ 
			width	73
			label
			{
				area 		0 0 928 -1
				mosaic lua  'getSaveBackground(rowNumber)'
				respectClipping 
				align		center center
			}
			button
			{
				enabled		"gameSaves.files[rowNumber].hasScreenShot"
				area		10 5 60 60
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	11 15 160 120 
				align		center center
			}

			label
			{
				area	216 21 300 30
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "label"
				align	left top
			}
	
			label
			{
				area	216 55 300 30
				text	lua "gameSaves.files[rowNumber].chapter .. ' ' .. gameSaves.files[rowNumber].time"
				text style "label"
				align	left top
				pad		0 0 -200 0				
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait0"
				area	310 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	0 0 30 48
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait1"
				area	372 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait2"
				area	434 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait3"
				area	496 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait4"
				area	558 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	0 0 30 48 
				align	center center
			}
			button
			{
				enabled		 "gameSaves.files[rowNumber].hasPortrait5"
				area	620 84 60 60
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	0 0 30 48 
				align	center center
			}
		}
		column 
		{ 
			width	29
			label
			{
				area 		-684,0,928,-1
				mosaic lua  'getSaveBackground(rowNumber)'
				respectClipping 
				glow lua 	"rowNumber == currentSave"
				align		center center
			}
			label
			{
				area	8 34 195 100
				text	lua "gameSaves.files[rowNumber].sName "
				text style "label"
				align	center center
			}
			label
			{
				area		24 70 200 44
				bam 		GUIOSTLM
				frame lua 	"currentCellCheck(2)"
				sequence 	0
				text		"SAVE_BUTTON"
				text style	"button"
		}
		}

		action 
		"
			if cellNumber == 1 then
				cellNumber = nil
			elseif cellNumber == 2 then
				cellNumber = nil
				Infinity_PlaySound('GAM_01')
				Infinity_PushMenu( 'SAVE_NEWSAVE' );
			end
		"

		actionDbl
		"
			Infinity_PlaySound('GAM_01')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
		
		area 48 252 954 444
		rowheight	145
		table		"gameSaves.files"
		hidehighlight
		var		currentSave
		scrollbar	'guiwrsp'
	}
	button 
	{
		area	48 108 954 148
		mosaic		GUISAVEB
		actionDbl
		"
			--saveScreen:SaveGame(#saveFiles, 'Test Save ' .. #saveFiles)
			currentSave = 0
			Infinity_PlaySound('GAM_01')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}
	label
	{
		area	258 124 380 26
		text	'NEW_SAVE_LABEL'
		text style "label"
		text align left center
	}
	button
	{
		area	756 172 200 44
		bam		GUIOSTLM
		text		"SAVE_BUTTON"
		text style	"button"
		action
		"
			--saveScreen:SaveGame(#saveFiles, 'Test Save ' .. #saveFiles)
			currentSave = 0
			Infinity_PlaySound('GAM_01')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}

	button
	{
		area		530 714 234 44
		bam			GUIOSTUR
		clickable	lua	"currentSave"		
		text		"DELETE_BUTTON"
		text style	"button"
		on backspace
		action
		"
			popup2Button(15305, 'DELETE_BUTTON',
			function() saveScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		area		276 714 234 44
		bam			GUIOSTUL
		text		"BACK_BUTTON"
		text style	"button"
		on escape
		action
		"
			setNoEscMenu = 2
			saveScreen:OnMainCancelButtonClick()
			e:SelectEngine( worldScreen )
		"
	}
}
`
	newSaveName = ''
	function completeSave()
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(#gameSaves.files, newSaveName)
	end
	function completeOverwrite()
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(gameSaves.files[currentSave].slotIndex,newSaveName)
	end

`
menu
{
	name 'SAVE_NEWSAVE'
	align center center
	modal
	onOpen
	"
		bitmapbools = 
		{
			hasScreenShot = 0,
			hasPortrait0 = 0,
			hasPortrait1 = 0,
			hasPortrait2 = 0,
			hasPortrait3 = 0,
			hasPortrait4 = 0,
			hasPortrait5 = 0,
		}
		newSaveName = ''
		if currentSave ~= 0 then
			newSaveName = gameSaves.files[currentSave].slotName
			bitmapbools = 
			{
			hasScreenShot = gameSaves.files[currentSave].hasScreenShot,
			hasPortrait0 = gameSaves.files[currentSave].hasPortrait0,
			hasPortrait1 = gameSaves.files[currentSave].hasPortrait1,
			hasPortrait2 = gameSaves.files[currentSave].hasPortrait2,
			hasPortrait3 = gameSaves.files[currentSave].hasPortrait3,
			hasPortrait4 = gameSaves.files[currentSave].hasPortrait4,
			hasPortrait5 = gameSaves.files[currentSave].hasPortrait5,
			}
		end
		Infinity_FocusTextEdit('newSaveNameArea')

	"
	label
	{
		area	0 0 786 341
		mosaic	GUISRRQB
	}
	label
	{
		area	42 20 722 30
		text	"ENTER_SAVE_LABEL"
		text style "label"
		text align left center
	}
	edit
	{
		name        "newSaveNameArea"
		area		256 76 472 22
		var			newSaveName	
		text style	"edit"
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				if(currentSave ~= 0) then
					completeOverwrite()
				else
					completeSave()
				end
				return -1
			end
			return 1
		"
	}
	label
	{
		area	252 110 476 34
		text	lua "gameSaves.currentGameInfo.chapter .. ' ' .. gameSaves.currentGameInfo.time"
		text style "label"
		text align left center
	}
	button
	{
		enabled		 "bitmapbools.hasScreenShot"
		area	66 72 162 142
		bitmap res "gameSaves.files[currentSave].screenshot"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait0"
		area	356 150 30 48
		bitmap res "gameSaves.files[currentSave].portrait0"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait1"
		area	418 150 30 48
		bitmap res "gameSaves.files[currentSave].portrait1"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait2"
		area	482 150 30 48
		bitmap res "gameSaves.files[currentSave].portrait2"	
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait3"
		area	544 150 30 48
		bitmap res "gameSaves.files[currentSave].portrait3"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait4"
		area	608 150 30 48
		bitmap res "gameSaves.files[currentSave].portrait4"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait5"
		area	670 150 30 48
		bitmap res "gameSaves.files[currentSave].portrait5"
		align	center center
	}
	button
	{
		area	386 226 302 44
		bam		GUIOSTCL
		text	"SAVE_BUTTON"
		text style "button"
		action
		"
			setNoEscMenu = 0
			completeSave()
		"
	}
	button
	{
		enabled	currentSave
		area	386 226 302 44
		bam		GUIOSTCL
		text	"OVERWRITE_BUTTON"
		text style "button"
		action
		"
			setNoEscMenu = 0
			completeOverwrite()
		"
	}
	button
	{
		area	386 288 302 44
		bam		GUIOSTCL
		text	"CANCEL_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu('SAVE_NEWSAVE')			
		"
	}
}
`
--worldMessageBoxText = "" -- used originally for combat log in dialog messages
optionChat1 = 1
showAlreadyWChat = 0
resetSM = 0

function dragMessagesY(newY)
	local x,y,w,h = Infinity_GetArea('messagesRect')
	local hNew = h - newY

	--lower bound on height, sliced rects can't get too small and we don't want to make the message box invisible.
	--also don't go too high because it looks bad.
	if hNew > 146 and hNew < 700 then
		adjustItemGroup({"messagesHandleY"},0,newY,0,0)
		adjustItemGroup({"worldCombatLogBG","messagesRect","worldMessageBox"},0,newY,0,-newY)
	end

	--setQuickLootOffset()
	chatboxScrollToBottom = 1
end

function dragMessagesYx()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	if(optionChat1 == 0 and showAlreadyWChat == 0) then
		optionChat1 = 1
		showAlreadyWChat = 1
		Infinity_SetArea('worldCombatLogBG', screenWidth*.0, screenHeight*.2, screenWidth*.2773, screenHeight*.79739)
		Infinity_SetArea('messagesRect', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.8)
		Infinity_SetArea('worldMessageBox', screenWidth*.01225, screenHeight*.213, screenWidth*.25975, screenHeight*.723)
		Infinity_SetArea('messagesHandleY', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.046)
	end
	
	if(optionChat1 == 1) then
		Infinity_SetArea('worldCombatLogBG', screenWidth*.0, screenHeight*.2, screenWidth*.2773, screenHeight*.79739)
		Infinity_SetArea('messagesRect', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.8)
		Infinity_SetArea('worldMessageBox', screenWidth*.01225, screenHeight*.213, screenWidth*.25975, screenHeight*.723)
		Infinity_SetArea('messagesHandleY', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.046)
	end
	
end

function dragMessagesYxz()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	if(optionChat1 == 1 and showAlreadyWChat == 1) then
		optionChat1 = 0
		showAlreadyWChat = 0
		Infinity_SetArea('worldCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('messagesRect', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('worldMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('messagesHandleY', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)	
	end
	
	if(optionChat1 == 1) then
		Infinity_SetArea('worldCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('messagesRect', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('worldMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('messagesHandleY', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)
	end
	
	chatboxScrollToBottom = 1
end

	function showMessagesButtonFrameW()
		if(optionChat1 == 1) then 
			return 0 
		else 
			return 1 
		end
	end

	function toggleDialogShowMessagesW()
		if(optionChat1 == 1) then 
			optionChat1 = 0
			Infinity_SetINIValue('Y5 Options','worldChat Toggle','0')
		else 
			optionChat1 = 1
			Infinity_SetINIValue('Y5 Options','worldChat Toggle','1')
		end
	end

	

	function getMBWSize() -- 498 70
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		Infinity_SetArea('worldCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('messagesRect', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('mpWMBackground', screenWidth*.0, screenHeight*.825, screenWidth*.28, screenHeight*.09)
		Infinity_SetArea('mpWMText', screenWidth*.0, screenHeight*.825, screenWidth*.28, screenHeight*.09)
		Infinity_SetArea('messagesEditBackground', screenWidth*.0, screenHeight*.915, screenWidth*.28, screenHeight*.085)
		Infinity_SetArea('worldMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('MPCHATWS', screenWidth*.01225, screenHeight*.936, screenWidth*.24075, screenHeight*.037)
		Infinity_SetArea('messagesHandleY', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)	
		Infinity_SetArea('chathist', screenWidth*.213, screenHeight*.971, screenWidth*.036, screenHeight*.029)
	end
	
setWorldMessages = 0
`
menu
{
	name 'WORLD_MESSAGES' --world messages, messages menu, message menu
	ignoreEsc
	
	onOpen
	"
		if CurrentlyInGame() and Infinity_IsMenuOnStack('OVERLAY_MESSAGES') ~= 1 then
			Infinity_PushMenu('OVERLAY_MESSAGES')
		end
		if CurrentlyInGame() and Infinity_GetINIValue('Y5 Options','Toggle Buttons') == 0 then
			Infinity_SetINIValue('Y5 Options','Toggle Buttons',1)
			if Infinity_GetINIValue('Y5 Options','Highlight Enabled') == 1 then
				highlightButtonToggle = 1
				worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
			elseif Infinity_GetINIValue('Y5 Options','Highlight Enabled') == 0 then
				highlightButtonToggle = 0
			end
			if Infinity_GetINIValue('Y5 Options','AI Enabled') == 1 then
				game:ToggleAI()
			end
		end
	"
	
	label {area 0 0 0 0}
}
`
curTimerMessages = 0
function enabledMessages()

	if luaViewed == 1 then
		return false
	elseif Infinity_IsMenuOnStack('WORLD_DIALOG') then
		return false
	elseif setWorldMessages == 1 and Infinity_IsMenuOnStack('WORLD_DIALOG') ~= 1 and  Infinity_GetClockTicks() >= curTimerMessages and Infinity_IsMenuOnStack('STORE_CHOOSER') ~= 1 then
		setWorldMessages = 0
		curTimerMessages = 0
		return true
	elseif setWorldMessages == 1 then	
		return false
	end
	
	return true
end
`
menu
{
	name 'OVERLAY_MESSAGES' --overlay messages
	enabled "enabledMessages() == true"
	ignoreesc
	onOpen
	"	
		optionChat1 = Infinity_GetINIValue('Y5 Options','worldChat Toggle','0')
		if optionChat1 ~= 1 then
			optionChat1 = 0
		end
		if B3ActionbarAlreadyUp then 
			return 0 
		end
		chatboxScrollToBottom = 1
		
	"
	onClose
	"
		mpChatTable = {}
	"
	label
	{
	enabled "evalOverlay ~= 1 and optionF5 == 1"
	on F12
	action
	"
		CLEARALLMENUS()
	"
	}
	label
	{
		name 'worldCombatLogBG'
		enabled "optionChat1 == 1"
		area 0 616 407 149
		fill 0 0 0 150
	}
	label
	{
		name 'messagesRect'
		enabled "optionChat1 == 1"
		area 0 616 411 151
		rectangle 2
		rectangle opacity -1
	}
	label
	{
		name "mpWMBackground"
		enabled "optionChat1 == 0"
		opacity lua "getMPBackgroundOpacity()"
		area 0 633 411 69
		rectangle 1
	}
	label
	{
		name "mpWMText"
		enabled "optionChat1 == 0"
		opacity lua "getMPMessageOpacity()"
		area 0 633 411 69
		text style "normal"
		text lua "getMPMessage()"
		pad 8 8 8 8
	}
	label
	{
		name "messagesEditBackground"
		enabled "optionChat1 == 0"
		area 0 702 411 65
		rectangle 1
		rectangle opacity 150
	}

	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1 --controls the word wrapping on dialogue box, 0 0 808 -1
				text lua "combatLog[rowNumber]" -- vs. Reflex Change
				text style "normal"
				--text point 12
				--text usefontzoom 0
			}
		}
		name "worldMessageBox"
		enabled "optionChat1 == 1"
		area 18 626 381 92
		rowheight dynamic
		table "combatLog"
		align center center
		hideHighlight
		scrollbar 'guiwrsp'
		scrollbar func "chatboxScroll"
		scrollbar skipReset
	}
    label
    {
        area 0 70 50 50
        on return
		enabled "e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen"
        action
		"
			if not B3PreventFocus then
				if Infinity_TextEditHasFocus() == 0 then
					Infinity_FocusTextEdit('MPCHATWS')
				end
			else
				B3PreventFocus = false
			end
			
		"
	}
    label
    {
        area 0 120 50 50
		enabled "Infinity_TextEditHasFocus() == 1 and e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen"
		on escape
        action
		"
			Infinity_FocusTextEdit('')
		"
	}
	
	edit
	{
		name		"MPCHATWS"
		enabled 	"e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen"
		area		18 718 353 28
		var			mpChatEditOverlay
		text style	"edit"
		text point 12
		text useFontZoom 0
		align left bottom
		text color G
		placeholder "ENTER_TEXT"
		scrollbar 'guiwrsp'
		scrollbar func "triggerChatboxScroll"
		--maxchars 110
		maxlines 2
		action
	
		"
			if B3PreventFocus then B3PreventFocus = false; 
				return 0 
			end
				if not (key_pressed == 13) then return 1
			end
			if (key_pressed == 13) and (mpChatEditOverlay == '') then
				B3PreventFocus = true
				Infinity_FocusTextEdit('')
				return 0
			end
			if (key_pressed == 13) then
				B3PreventFocus = true
				Infinity_SendChatMessage(mpChatEditOverlay, false) 
				mpChatEditOverlay=''
				Infinity_FocusTextEdit('')
				return 0
			end
				
		"
	}
	handle
	{
		name 'messagesHandleY'
		enabled "optionChat1 == 1"
		area 0 616 411 35
		actionDrag
		"
			dragMessagesY(motionY)
		"
	}
	text
	{
	name "chathist"
	area 313 745 52 22
	bam "CHAHIST2"
	scaleToClip
	frame lua "showMessagesButtonFrameW()"
	action
		"
			toggleDialogShowMessagesW()
			chatboxScrollToBottom = 1
			if optionChat1 == 0 then
				Infinity_FocusTextEdit('')
			end
		"
	}
}

`
worldNPCDialogText = worldNPCDialogText and worldNPCDialogText or ""
worldPlayerDialogChoices = worldPlayerDialogChoices and worldPlayerDialogChoices or {}
optionChat2 = 0
showAlreadyDiaL = 0
startingDialogHeight = 0

function dialogEntryGreyed()
	return not worldScreen:GetInControlOfDialog()
end	
	
	function showMessagesButtonFrameDiaL()
		if(optionChat2 == 1) then 
			return 0 
		else 
			return 1 
		end
	end
	
	function toggleDialogShowMessagesDiaL()
		if(optionChat2 == 1) then 
			optionChat2 = 0
			Infinity_SetINIValue('Y5 Options','dialogChat Toggle','0')
			resizeDialog()
		else 
			optionChat2 = 1 
			Infinity_SetINIValue('Y5 Options','dialogChat Toggle','1')
			resizeDialog()
		end
	end

function dragMessagesYxD()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	if(optionChat2 == 0) then
		optionChat2 = 1
		showAlreadyDiaL = 1
		Infinity_SetArea('wdCombatLogBG2', screenWidth*.20775, screenHeight*.3, screenWidth*.5845, screenHeight*.7)
		Infinity_SetArea('worldDialogBackground2', screenWidth*.20775, screenHeight*.3, screenWidth*.5845, screenHeight*.7)
		Infinity_SetArea('dialogHandleY2', screenWidth*.20775, screenHeight*.3, screenWidth*.5845, screenHeight*.046)
		Infinity_SetArea('worldDialogMBox', screenWidth*.285, screenHeight*.313, screenWidth*.5, screenHeight*.488)
		Infinity_SetArea('worldPlayerDialogChoicesList2', screenWidth*.285, screenHeight*.805, screenWidth*.5, screenHeight*.126) 
		mpChatTable = {}
		dialogButtonPosition()
	end
	
	if(optionChat2 == 1) then
		Infinity_SetArea('wdCombatLogBG2', screenWidth*.20775, screenHeight*.3, screenWidth*.5845, screenHeight*.7)
		Infinity_SetArea('worldDialogBackground2', screenWidth*.20775, screenHeight*.3, screenWidth*.5845, screenHeight*.7)
		Infinity_SetArea('dialogHandleY2', screenWidth*.20775, screenHeight*.3, screenWidth*.5845, screenHeight*.046)
		Infinity_SetArea('worldDialogMBox', screenWidth*.285, screenHeight*.313, screenWidth*.5, screenHeight*.488)
		Infinity_SetArea('worldPlayerDialogChoicesList2', screenWidth*.285, screenHeight*.805, screenWidth*.5, screenHeight*.126)
		dialogButtonPosition()
	end
	
end

function dragMessagesYxzD()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	if(optionChat2 == 1 and showAlreadyDiaL == 1) then
		showAlreadyDiaL = 0
		optionChat2 = 0
		Infinity_SetArea('wdCombatLogBG2', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
		Infinity_SetArea('worldDialogBackground2', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
		Infinity_SetArea('dialogHandleY2', screenWidth*.20775, screenHeight*.662, screenWidth*.5845, screenHeight*.046)
		Infinity_SetArea('worldDialogMBox', screenWidth*.285, screenHeight*.675, screenWidth*.5, screenHeight*.126)
		dialogButtonPosition()
	end
	
	if(optionChat2 == 1) then
		Infinity_SetArea('wdCombatLogBG2', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
		Infinity_SetArea('worldDialogBackground2', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
		Infinity_SetArea('dialogHandleY2', screenWidth*.20775, screenHeight*.662, screenWidth*.5845, screenHeight*.046)
		Infinity_SetArea('worldDialogMBox', screenWidth*.285, screenHeight*.675, screenWidth*.5, screenHeight*.126)
		dialogButtonPosition()
	end
	

	chatboxScrollToBottom = 1
end


function resizeDialog()
	
	if optionChat2 == 0 then
		buildResponsesList()
		--dialogButtonConfirm()
		--fit the npc text area to the text height.
		Infinity_ScaleToText("worldNPCDialog")
		
		--get npc area
		local npcX,npcY,npcW,npcH = Infinity_GetArea('worldNPCDialog')
		
		if(npcH > 250) then
			--limit the npc text height to 250
			npcH = 250
			Infinity_SetArea('worldNPCDialog',nil,nil,nil,npcH)
		end	
		
		--Get available height to work in
		local contentHeight = getCurrentBackgroundHeight()

		local desiredHeight = getDesiredDialogHeight()
		
		--make enough room for the choices and dialog
		if(contentHeight < desiredHeight) then
			resizeDialogContent(contentHeight - desiredHeight)
		else

			local xD,yD,wD,hD = Infinity_GetArea('dialogHandleY')
			
			--resize the choices list based on the dialog height
			 cH = contentHeight - npcH - (npcY - yD) - 60
			 cY = npcY + npcH + 16
			
			if cH > 50 then
				--set the new list area.
				Infinity_SetArea('worldPlayerDialogChoicesList',nil,cY,nil,cH)
			else
				local heightDifference = 50 - cH
				cY = cY - heightDifference
				cH = cH + heightDifference
				Infinity_SetArea('worldPlayerDialogChoicesList',nil,cY,nil,cH)
				npcH = npcH - heightDifference
				Infinity_SetArea('worldNPCDialog',nil,nil,nil,npcH)
			end
		end
	end
	
	if optionChat2 == 1 then
		buildResponsesList()
		--dialogButtonConfirm()
		
		--get npc area
		local npcX,npcY,npcW,npcH = Infinity_GetArea('worldDialogMBox')
		
		if(npcH ~= 95) then
			--limit the npc text height to 250
			npcH = 95
			Infinity_SetArea('worldDialogMBox',nil,nil,nil,npcH)
		end	
		
		--Get available height to work in
		local contentHeight = getCurrentBackgroundHeight()

		local desiredHeight = getDesiredDialogHeight()
		
		--make enough room for the choices and dialog
		if(contentHeight < desiredHeight) then
			resizeDialogContent(contentHeight - desiredHeight)
		else

			local xD,yD,wD,hD = Infinity_GetArea('dialogHandleY2')
			
			--resize the choices list based on the dialog height
			 cH = contentHeight - npcH - (npcY - yD) - 60
			 cY = npcY + npcH + 16
			
			if cH > 50 then
				--set the new list area.
				Infinity_SetArea('worldPlayerDialogChoicesList2',nil,cY,nil,cH)
			else
				local heightDifference = 50 - cH
				cY = cY - heightDifference
				cH = cH + heightDifference
				Infinity_SetArea('worldPlayerDialogChoicesList2',nil,cY,nil,cH)

				npcH = npcH - heightDifference
				Infinity_SetArea('worldDialogMBox',nil,nil,nil,npcH)
			end
		end		
	end
	dialogButtonPosition()
end

function getCurrentBackgroundHeight()

	if optionChat2 == 0 then
		local x,yB,w,contentHeight = Infinity_GetArea('worldDialogBackground')
		return contentHeight
	end
	
	if optionChat2 == 1 then
		local x,yB,w,contentHeight = Infinity_GetArea('worldDialogBackground2')
		return contentHeight
	end

end

function getDesiredDialogHeight()

	if optionChat2 == 0 then
		--get npc area
		local x,y,w,npcH = Infinity_GetArea('worldNPCDialog')
		
		--get dialog choices height
		local choicesHeight = Infinity_GetListHeight('worldPlayerDialogChoicesList')
	
		return (40 + choicesHeight + npcH)
	end
	
	if optionChat2 == 1 then
		--get npc area
		local x,y,w,npcH = Infinity_GetArea('worldDialogMBox')
		
		--get dialog choices height
		local choicesHeight = Infinity_GetListHeight('worldPlayerDialogChoicesList2')
	
		return (40 + choicesHeight + npcH)
	end

end

function resizeDialogContent(newY)

	if optionChat2 == 0 then
		local x,y,w,hOld = Infinity_GetArea('worldDialogBackground')
		local h = hOld - newY
		
		local contentHeight = getCurrentBackgroundHeight() - newY
		
		if(contentHeight <= 150) then
			--lower bound on height, should leave plenty of room for portrait.
			-- also don't push our toolbar top out of view.
			return
		end
		if(contentHeight >= 500) then
			-- upper bound as well because too high looks bad.
			return
		end
		
		y = y + newY
		Infinity_SetArea('worldDialogBackground',x,y,w,h)
		Infinity_SetArea('wdCombatLogBG',x,y,w,h)
		
		adjustItemGroup({'dialogHandleY','worldNPCDialog'},0,newY,0,0)
		
		--toolbarTop = toolbarTop - newY
	end
	
	if optionChat2 == 1 then	
		local x,y,w,hOld = Infinity_GetArea('worldDialogBackground2')
		local h = hOld - newY
		
		local contentHeight = getCurrentBackgroundHeight() - newY
		
		if(contentHeight <= 150) then
			--lower bound on height, should leave plenty of room for portrait.
			-- also don't push our toolbar top out of view.
			return
		end
		if(contentHeight >= 500) then
			-- upper bound as well because too high looks bad.
			return
		end
		
		y = y + newY
		Infinity_SetArea('worldDialogBackground2',x,y,w,h)
		Infinity_SetArea('wdCombatLogBG2',x,y,w,h)
		
		adjustItemGroup({'dialogHandleY2','worldDialogMBox'},0,newY,0,0)
	end
	resizeDialog()
	
end

function dragDialogMessagesY(newY)
	local x,y,w,h = Infinity_GetArea('worldDialogBackground')
	local hNew = h - newY
	local x2,y2,w2,h2 = Infinity_GetArea('worldDialogBackground2')
	local hNew2 = h2 - newY
	

	if optionChat2 == 0 then
		if hNew > 259 and hNew < 550 then
			adjustItemGroup({"dialogHandleY","mpWDText","mpWDBackground"},0,newY,0,0)
			adjustItemGroup({"wdCombatLogBG","worldDialogBackground","worldNPCDialog","worldPlayerDialogChoicesList"},0,newY,0,-newY)
		end
	end
	
	if optionChat2 == 1 then
		if hNew2 > 259 and hNew2 < 550 then
			adjustItemGroup({"dialogHandleY2"},0,newY,0,0)
			adjustItemGroup({"wdCombatLogBG2","worldDialogBackground2","worldDialogMBox","worldPlayerDialogChoicesList2"},0,newY,0,-newY)
		end
	end
	resizeDialog()
		
end

function currentTime()
local curTime = Infinity_GetClockTicks()
	return Infinity_GetClockTicks() >= plusOneTime
end

function getDialogEntryText(row) -- changes highlighted text color
	local text = worldPlayerDialogChoices[row].text
	if (row == worldPlayerDialogSelection) then
		--Color the text white when selected
		text = string.gsub(text, "%^0xff212eff", "^0xFFFFFFFF")
	end
	return text
end



function AddNewNote(text)
	if entryAlreadyAdded == 0 then
		e:GetActiveEngine():OnLeftPanelButtonClick(2)
		journalMode = const.JOURNAL_MODE_EDIT
		text = string.gsub(text, "%^0x........", "")
		text = string.gsub(text, '%\n', '\n"') .. '"'
		journalNoteEdit =  text
		journalNoteEditRef = nil
		journalNoteEdit = 'My Notes:' .. '\n\n' .. '- ' .. journalNoteEdit
		Infinity_OnAddUserEntry(journalNoteEdit)
		journalMode = const.JOURNAL_MODE_JOURNAL
		e:GetActiveEngine():OnLeftPanelButtonClick(2)
		entryAlreadyAdded = 1
	end
end
  

function getMBDWSize()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	Infinity_SetArea('wdCombatLogBG', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
	Infinity_SetArea('wdCombatLogBG2', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
	Infinity_SetArea('worldDialogBackground', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
	Infinity_SetArea('worldDialogBackground2', screenWidth*.20775, screenHeight*.6697, screenWidth*.5845, screenHeight*.3303)
	Infinity_SetArea('dialogHandleY', screenWidth*.20775, screenHeight*.662, screenWidth*.5845, screenHeight*.046)
	Infinity_SetArea('dialogHandleY2', screenWidth*.20775, screenHeight*.662, screenWidth*.5845, screenHeight*.046)
	
	Infinity_SetArea('worldDialogPortraitArea', screenWidth*.22, screenHeight*.685, screenWidth*.0508, screenHeight*.143)
	Infinity_SetArea('npcportrait', screenWidth*.2167, screenHeight*.682, screenWidth*.0578, screenHeight*.15)
	
	Infinity_SetArea('worldNPCDialog', screenWidth*.285, screenHeight*.685, screenWidth*.5, screenHeight*.126)
	Infinity_SetArea('worldDialogMBox', screenWidth*.285, screenHeight*.685, screenWidth*.5, screenHeight*.126) 
	Infinity_SetArea('worldPlayerDialogChoicesList', screenWidth*.285, screenHeight*.805, screenWidth*.5, screenHeight*.126) 
	Infinity_SetArea('worldPlayerDialogChoicesList2', screenWidth*.285, screenHeight*.805, screenWidth*.5, screenHeight*.126) 
	Infinity_SetArea('MPCHATDW', screenWidth*.285, screenHeight*.936, screenWidth*.5, screenHeight*.037)
	Infinity_SetArea('mpWDBackground', screenWidth*.285, screenHeight*.612, screenWidth*.508, screenHeight*.05)
	Infinity_SetArea('mpWDText', screenWidth*.285, screenHeight*.612, screenWidth*.508, screenHeight*.05)
	Infinity_SetArea('mpchahist2', screenWidth*.72, screenHeight*.971, screenWidth*.036, screenHeight*.029)
end
`
menu
{
	name 'WORLD_DIALOG' --world dialogue
	ignoreEsc
	onOpen
	"
		setWorldMessages = 1
		getMBDWSize()
		plusOneTime = Infinity_GetClockTicks() + 30
		if Infinity_IsMenuOnStack('WORLD_DIALOG') then
			if Infinity_IsMenuOnStack('OVERLAY_ESC') then
				Infinity_PopMenu('OVERLAY_ESC')
			end
		end
		if(isTouchActionbar() and not dialogViewMode) then
			Infinity_PushMenu('WORLD_DIALOG_LEFT')
			Infinity_PushMenu('WORLD_DIALOG_RIGHT')
		end
		entryAlreadyAdded = 0
		Infinity_PushMenu('WORLD_DIALOG_CONFIRM')
		Infinity_PushMenu('OVERLAY_PORTRAIT')
		
		mpChatTable = {}
		optionChat2 = Infinity_GetINIValue('Y5 Options','dialogChat Toggle','0')
	"
	onClose
	"
		curTimerMessages = Infinity_GetClockTicks() + 40
		Infinity_PopMenu('OVERLAY_PORTRAIT')
		Infinity_PopMenu('WORLD_DIALOG_CONFIRM')
		Infinity_PopMenu('WORLD_DIALOG_LEFT')
		Infinity_PopMenu('WORLD_DIALOG_RIGHT')
		mpChatTable = {} --clears the multiplayer message preview from showing on each screen
		
		local x,y,w,h = Infinity_GetArea('worldDialogBackground')
		resizeDialogContent(h - 253)
	"
	label
	{
		name "mpWDBackground"
		enabled "optionChat2 == 0"
		opacity lua "getMPBackgroundOpacity()"
		area 418 470 746 38
		rectangle 1
	}
	label
	{
		name "mpWDText"
		enabled "optionChat2 == 0"
		opacity lua "getMPMessageOpacity()"
		area 418 470 746 38
		text style "normal"
		text lua "getMPMessage()"
		pad 8 8 8 8
	}
-- first dialogue

	label
	{
		name 'wdCombatLogBG'
		enabled "optionChat2 == 0"
		area 305 514 859 253
		fill 0 0 0 150
	}
	label
	{
		name "worldDialogBackground"
		enabled "optionChat2 == 0"
		area 305 514 859 253
		rectangle 2
		rectangle opacity -1
	}
	text
	{
		name "worldNPCDialog"
		enabled "optionChat2 == 0"
		area 418 526 735 19
		text lua "worldNPCDialogText:gsub('\n',': ',1)"
		text style "gamelog"
		--scrollbar	'GUISCRC'
	}
	handle
	{
		name "dialogHandleY"
		enabled "optionChat2 == 0"
		area 305 508 859 35
		actionDrag
		"
			dragDialogMessagesY(motionY)
		"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "dialogEntryGreyed()"
				rectangle 1
				rectangle opacity 100
			}
			text
			{
				area 0 0 -1 -1
				text lua "getDialogEntryText(rowNumber)"
				text style "gamelog"
			}
		}
		name "worldPlayerDialogChoicesList"
		enabled "optionChat2 == 0"
		area 418 561 735 156
		rowheight dynamic
		hideHighlight
		table "worldPlayerDialogChoices"
		var "worldPlayerDialogSelection"
		scrollbar	'GUISCRC'
		actionEnter
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldPlayerDialogSelection = mouseoverRow
		"
		actionExit
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldPlayerDialogSelection = 0
		"
		action
		"
			--In confirm mode, just highlight the choice.
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
			entryAlreadyAdded = 0
		"
	}
-- secondary dialogue
	label
	{
		name 'wdCombatLogBG2'
		enabled "optionChat2 == 1"
		area 305 514 859 253
		fill 0 0 0 150
	}
	label
	{
		name "worldDialogBackground2"
		enabled "optionChat2 == 1"
		area 305 514 859 253
		rectangle 2
		rectangle opacity -1
	}
	
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1 --controls the word wrapping on dialogue box, 0 0 808 -1
				text lua "combatLog[rowNumber]" -- vs. Reflex Change
				text style "normal"
				pad 0 0 0 10
			}
		}
		name "worldDialogMBox"
		enabled "optionChat2 == 1"
		area 418 526 735 96
		rowheight dynamic
		table "combatLog"
		align center center
		hideHighlight
		scrollbar 'guiwrsp'
		scrollbar func "chatboxScroll"
		scrollbar skipReset
	}
	
	handle
	{
		name "dialogHandleY2"
		enabled "optionChat2 == 1"
		area 305 508 859 35
		actionDrag
		"
			dragDialogMessagesY(motionY)
		"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "dialogEntryGreyed()"
				rectangle 1
				rectangle opacity 100
			}
			text
			{
				area 0 0 -1 -1
				text lua "getDialogEntryText(rowNumber)"
				text style "gamelog"
			}
		}
		name "worldPlayerDialogChoicesList2"
		enabled "optionChat2 == 1"
		area 418 618 735 96
		rowheight dynamic
		hideHighlight
		table "worldPlayerDialogChoices"
		var "worldPlayerDialogSelection"
		scrollbar 'GUISCRC'
		actionEnter
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldPlayerDialogSelection = mouseoverRow
		"
		actionExit
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldPlayerDialogSelection = 0
		"
		action
		"
			--In confirm mode, just highlight the choice.
			if(gameOptions.m_bConfirmDialog == true) then return end
			worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
			entryAlreadyAdded = 0
		"
	}

-- final overlay elements
    label
    {
        area 0 0 0 0
        on return
		enabled "e:IsMultiplayer()"
        action
		"
			if not B3PreventFocus then
				if Infinity_TextEditHasFocus() == 0 then
					Infinity_FocusTextEdit('MPCHATDW')
				end
			else
				B3PreventFocus = false
			end
		"
	}
	label
	{
		name "npcportrait"
		enabled "worldNPCDialogPortrait~='NONE' and worldNPCDialogPortrait~=''"
		area 318 523 84 115
		bam portnpc
		scaleToClip
	}
	button
	{
		name "worldDialogPortraitArea"
		area 323 526 74 109
		bitmap lua "worldNPCDialogPortrait"
		action 
		"
			if e:IsMultiplayer() and not e:IsHosting() then
				return nil
			else
				AddNewNote(worldNPCDialogText)
			end
		"
	}
	edit
	{
		name		"MPCHATDW"
		enabled 	"e:IsMultiplayer()"
		area		418 718 735 28
		var			mpChatEditOverlay
		text style	"edit"
		text point 12
		text useFontZoom 0
		align left bottom
		text color G
		placeholder "ENTER_TEXT"
		scrollbar 'guiwrsp'
		scrollbar func "chatboxScroll"
		--maxchars 200
		maxlines 2
		action
	
		"
			if B3PreventFocus then B3PreventFocus = false; 
				return 0 
			end
				if not (key_pressed == 13) then return 1
			end
			if (key_pressed == 13) and (mpChatEditOverlay == '') then
				B3PreventFocus = true
				Infinity_FocusTextEdit('')
				return 0
			end			
			if (key_pressed == 13) then
				B3PreventFocus = true
				Infinity_SendChatMessage(mpChatEditOverlay, false) 
				mpChatEditOverlay=''
				Infinity_FocusTextEdit('')
				return 0
			end	
		"
	}
	text
	{
		name "mpchahist2"
		area 1058 745 52 22
		bam "CHAHIST2"
		scaleToClip
		frame lua "showMessagesButtonFrameDiaL()"
		action
		"
			toggleDialogShowMessagesDiaL()
			chatboxScrollToBottom = 1
			if optionChat2 == 0 then
				Infinity_FocusTextEdit('')
			end
		"
	}
}

`
	function getOverlaySize()
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		--Infinity_SetArea('actionbarhide', screenWidth*.2, screenHeight*.93, screenWidth*.6, screenHeight*.073)
		Infinity_SetArea('portraithide', screenWidth*.94, screenHeight*.00825, screenWidth*.0568, screenHeight)
	end
`
menu
{
	name 'OVERLAY_PORTRAIT' --overlay dialog, overlay portrait, portrait hide
	ignoreEsc
	onOpen
	"
	getOverlaySize()
	"
	
	label
	{
	name "portraithide"
	area 1381 6 83 768
	fill 0 0 0 0
	}
}

`
dialogButtonText = dialogButtonText and dialogButtonText or 0
overlayConfirmList = overlayConfirmList and overlayConfirmList or {{}}
function getDialogButtonEnabled()

	if(gameOptions.m_bConfirmDialog == true) then
		return true
	else
		return (#worldPlayerDialogChoices == 0)
	end

end

function getDialogButtonClickable()
	if(gameOptions.m_bConfirmDialog == true) then
		return (#worldPlayerDialogChoices == 0) or (worldPlayerDialogSelection and worldPlayerDialogSelection > 2) --no choices, or we've selected a choice.
	else
		return true
	end
end

function autoDialogue()
	if not (#worldPlayerDialogChoices > 0) then
		worldScreen:StepDialog()
	end
end

function optDialogue()
	if Infinity_IsMenuOnStack('WORLD_DIALOG_CONFIRM') then
		Infinity_PushMenu('optDialogM')
	end
end

function dialogButtonConfirm()
local ret = text
local s = dialogButtonText
--overlayConfirmList = {}
	if string.find(s, "c") ~= nil then
		ret = dialogButtonText:gsub('%.*%a*','^0xFFCDD6D91^0xFFEEFFFF: ^0xFF0000FFContinue',1)
		--table.insert(overlayConfirmList, {1,ret})
		return ret
	elseif string.find(s, "d") ~= nil then
		ret = dialogButtonText:gsub('%a*%s*%a*','^0xFFCDD6D91^0xFFEEFFFF: ^0xFF0000FFEnd Dialogue',1)
		--table.insert(overlayConfirmList, {1,ret})
		return ret
	end
end
--function overlayConfirmList2(row)
--	local text = dialogButtonConfirm()
--	if (row == overlayConfirmVar) then
--		--Color the text white when selected
--		text = string.gsub(text, "%^0xFF0000FF", "^0xFFFFFFFF")
--	end
--	return text
--end
	
function dialogButtonPosition()
	local xNPC,yNPC,wNPC,hNPC = Infinity_GetArea('worldNPCDialog')
	local xWCL,yWCL,wWCL,hWCL = Infinity_GetArea('worldDialogMBox')
	local xCur,yCur,wCur,hCur = Infinity_GetArea('overlayConfirmName')
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	local moveNPC = yNPC + hNPC + 20
	local moveWCL = yWCL + hWCL + 20
	
	if optionChat2 == 0 then
		Infinity_SetArea('overlayConfirmName',screenWidth*.285,moveNPC,screenWidth*.5,hCur)
	elseif optionChat2 == 1 then
		Infinity_SetArea('overlayConfirmName',screenWidth*.285,moveWCL,screenWidth*.5,hCur)
	end
end


function getConfirmSize()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	Infinity_SetArea('confirmOverlay', screenWidth*.285, screenHeight*.805, screenWidth*.5, screenHeight*.126) 
end
`
menu
{
	name 'optDialogM'
	label
	{
	area 0 0 200 50
	--text "Space/Esc:"
	text color G
	text align center center
	}
}
menu
{
	name 'WORLD_DIALOG_CONFIRM' --confirm dialogue, world confirm, confirm menu
	ignoreEsc
	--onOpen 
	--"
	--getConfirmSize()
	--"
	
	list
	{
		column
		{
			width 100
			label
			{
			area 0 0 -1 -1
			text lua "dialogButtonConfirm()"
			text style "gamelog"
			}
			--label
			--{
			--area 0 0 -1 -1
			--text lua "overlayConfirmList2(rowNumber)"
			--text style "gamelog"
			--}
		}
	name "overlayConfirmName"
	on '1'
	enabled "currentTime() and getDialogButtonEnabled()"
	area 418 565 735 38
	rowheight dynamic
	hidehighlight
	table "overlayConfirmList"
	var "overlayConfirmVar"
	scrollbar 'GUISCRC'
	actionEnter "overlayConfirmVar = mouseoverRow"
	actionExit "overlayConfirmVar = 0"
	action
	"
		if(gameOptions.m_bConfirmDialog == true and (#worldPlayerDialogChoices > 0)) then
			-- if confirm dialog and choices available.
			entryAlreadyAdded = 0
			worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection - 2].marker)
			worldScreen:StepDialog()
		else
			-- no choices, just step.
			entryAlreadyAdded = 0
			worldScreen:StepDialog()
		end
	"
	}
}
`
importSearchString = ""

function importContainsSearchString(rowNumber)
	
	if(importSearchString == nil or importSearchString == "") then return 1 end --no search string, do nothing
	
	local text = character_select[rowNumber].name .. '\n' .. character_select[rowNumber].desc
	if(string.find(string.lower(text),string.lower(importSearchString))) then
		return 1
	else
		return nil --does not contain search string
	end
end
`
menu
{
	name 'CHARACTER_SELECT'
	--modal
	align center center
	offset 15 0 --offset 178 0
	onopen "selectedCharacter = 0"
	ignoreesc
	label
	{
		mosaic GUIMPB
		area 0 154 1024 614
	}
	label
	{
		area 32 172 966 50
		text "IMPORT_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 8
			label
			{
				area 10 2 70 105
				enabled "importContainsSearchString(rowNumber)"
				bitmap lua "character_select[rowNumber].portrait"
			}
		}
		column
		{
			width 92
			label
			{
				area 20 2 -1 -1
				enabled "importContainsSearchString(rowNumber)"
				text lua "character_select[rowNumber].name .. '\n' .. character_select[rowNumber].desc " 
				text style "label"
				text align left top
			}
		}
		name "importList"
		area 24 244 964 320
		rowheight dynamic
		table "character_select"
		var selectedCharacter
		scrollbar GUISCRC
		action
		"
			Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)			
		"
		actionDbl
		"
			Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)	
			Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)	
		"
	}
	button
	{
		--on escape
		area 194 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action 
		"
			createCharScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_SELECT')
			importSearchString = ''
		"
	}
	button
	{
		area 438 718 206 44
		bam GUIOSTUM
		text "ACCEPT_BUTTON"
		text style "button"
		clickable 0
	}
	button
	{
		area 346 570 30 30
		bam GUIOSW
		sequence 2
		scaleToClip
		action
		"
			importSearchString = ''
			Infinity_FocusTextEdit('ImportSearch')
		"
	}
	edit
	{
		name "ImportSearch"
		area 381 570 250 30
		var importSearchString
		placeholder "ENTER_TEXT"
		text style "edit"
		maxlines 1
		text point 14
		align left bottom
		fill		112 111 111 64
		--EXTEXT6
	}
	button
	{
		area 650 718 238 44
		text "DONE_BUTTON" 
		text style "button"
		bam GUIOSTUR
		clickable lua "selectedCharacter ~= 0"
		action 
		"
			createCharScreen:OnDoneButtonClick() 
			Infinity_PopMenu('CHARACTER_SELECT');
			createCharScreen:OnMenuButtonClick()
			importSearchString = ''
		"
	}

}

`
chargen = chargen and chargen or {

	races = {},
	kits = {},

}

function chargenAcceptOrExport()
	if createCharScreen:GetEngineState() == 4 then
		return t("EXPORT_BUTTON")
	else
		return t("ACCEPT_BUTTON")

	end
end

function randChar()
	RandGender = 0
	choosePortrait = 0
	toggleMale = 0
	toggleFemale = 0
	currentChargenRace = 0
	currentChargenClass = 0
	currentChargenKit = 0
	currentChargenAlignment = 0
	if randomCharacter == 0 then
		randomCharacter = 1
	end
	
	-- Gender
	if createCharScreen:GetCurrentStep() == 0 then
		RandGender = math.random(2)
		choosePortrait = math.random(100)
		createCharScreen:OnMenuButtonClick()
		
		if RandGender == 1 then
			gender = 1
		elseif RandGender == 2 then
			gender = 2
		end
		if RandGender == 1 then
			selPortrait = math.random(#portraitTable)
			setCurrentPortrait(selPortrait)
			--createCharScreen:DecCurrentPortrait()
		elseif RandGender == 2 then
			selPortrait = math.random(#portraitTable)
			setCurrentPortrait(selPortrait)
		end
		Infinity_PopMenu()
		createCharScreen:OnDoneButtonClick()
	end
	
	-- Race
	if createCharScreen:GetCurrentStep() == 3 then
		createCharScreen:OnMenuButtonClick()
		currentChargenRace = math.random(#chargen.races)
		createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
		Infinity_PopMenu()
		createCharScreen:OnDoneButtonClick()
	end
	
	-- Class
	if createCharScreen:GetCurrentStep() == 4 then
		createCharScreen:OnMenuButtonClick()
		currentChargenClass = math.random(#chargen.class)
		createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
		Infinity_PopMenu('CHARGEN_CLASS')
		createCharScreen:OnDoneButtonClick()
	end
	
	if createCharScreen:GetCurrentStep() == 5 then
		-- do nothing
	end
	
	-- Kit
	if createCharScreen:GetCurrentStep() == 6 then
		currentChargenKit = math.random(#chargen.kit)
		createCharScreen:OnKitSelectButtonClick(chargen.kit[currentChargenKit].id)
		Infinity_PopMenu()
		createCharScreen:OnDoneButtonClick()
	end
	
	-- Alignment
	if createCharScreen:GetCurrentStep() == 7 then
		createCharScreen:OnMenuButtonClick()
		currentChargenAlignment = math.random(#chargen.alignment)
		createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
		Infinity_PopMenu()
		createCharScreen:OnDoneButtonClick()
	end
	
	-- Abilities
	if createCharScreen:GetCurrentStep() == 8 then
		createCharScreen:OnMenuButtonClick()
		while chargen.totalRoll < 85 do
			createCharScreen:OnAbilityReRollButtonClick()
		end
		Infinity_PopMenu()
		createCharScreen:OnDoneButtonClick()
	end
	
	-- Skills
	if createCharScreen:GetCurrentStep() == 9 then
		createCharScreen:OnMenuButtonClick()
	end
	
	if createCharScreen:GetCurrentStep() == 14 then
		while chargen.extraProficiencySlots > 0 do
			currentChargenProficiency = math.random(#chargen.proficiency)
			createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
		end
		
		if Infinity_GetINIValue('Program Options','Active Campaign') == 4 and chargen.extraSkillPoints > 0 then
			return
		else
			while chargen.extraSkillPoints > 0 do
				currentChargenThiefSkill = math.random(#chargen.thief_skill)
				for i = 1, 5, 1 do
					createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
				end
			end
		end

		Infinity_PopMenu()
		createCharScreen:OnDoneButtonClick()
	end
	
	-- Mage Choose Learned Spells
	if createCharScreen:GetCurrentStep() == 11 then
		while createCharScreen:GetCurrentStep() == 11 do
			randLearnedMage()
		end
	end
	
	-- Mage Choose Active Spells
	if createCharScreen:GetCurrentStep() == 12 then
		while createCharScreen:GetCurrentStep() == 12 do
			randActiveMage()
		end
	end
	
	-- Priest
	if createCharScreen:GetCurrentStep() == 13 then
		while createCharScreen:GetCurrentStep() == 13 do
			randPriest()
		end
	end
	
	-- Racial Enemy
	if createCharScreen:GetCurrentStep() == 10 then
		currentChargenHatedRace = math.random(#chargen.hatedRace)
		createCharScreen:OnRacialEnemySelectButtonClick(chargen.hatedRace[currentChargenHatedRace].id)
		createCharScreen:OnDoneButtonClick()
	end
	chargen.information = chargen.information
end


function randLearnedMage()
	while chargen.extraSpells > 0 do
		currentChargenChooseMageSpell = math.random(#chargen.choose_spell)
		createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)
	end
	createCharScreen:OnDoneButtonClick()
end


function randActiveMage()
	while chargen.extraSpells > 0 do
		currentChargenMemorizeMageSpell = math.random(#chargen.choose_spell)
		createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, 1)
		if chargen.extraSpells == 0 and not createCharScreen:IsDoneButtonClickable() then
			createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, -1)
		end
	end
	createCharScreen:OnDoneButtonClick()
end


function randPriest()
	while chargen.extraSpells > 0 do
		currentChargenMemorizePriestSpell = math.random(#chargen.choose_spell)
		createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, 1)
	end
	createCharScreen:OnDoneButtonClick()
end

`
menu
{
	name 'CHARGEN' --chargen menu
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onOpen
	"
		gender = nil
		if type(generateAllChargenOptions) == 'function' then
			generateAllChargenOptions()
		end
		gender = 1
		randomCharacter = 0
		mpChatTable = {}
	"
	onClose
	"
	mpChatTable = {}
	"
--	label
--	{
--	enabled "createCharScreen:GetCurrentStep() == 0"
--	on return
--	action
--	"
--	createCharScreen:OnMenuButtonClick()
--	"
--	}
--	label
--	{
--	enabled "createCharScreen:IsChargenComplete()"
--	on return
--	action
--	"
--		if not Infinity_IsMenuOnStack('CHARACTER_SELECT') then
--			createCharScreen:AcceptCharacter(-1)
--		else
--			return 0
--		end
--	"
--	}
	label
	{
		area 0 0 1024 768
		mosaic GUICGB
	}
	label
	{
		area 64 16 898 44
		text "CHARGEN_TITLE"
		text style "title"
	}
	text
	{
		area 412 180 288 416
		text lua "modifiedChargenInfo()"
		scrollbar 'GUISCRC'
		text style "normal"
	}
	label
	{
		area 775 171 210 330
		bitmap lua "chargen.portrait"
	}

	button
	{
		area 22 226 340 30
		bam GUICHLNG
		sequence 0
		clickable lua "createCharScreen:GetCurrentStep() == 0"
		glow lua "createCharScreen:GetCurrentStep() == 0"
		text "GENDER_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 256 340 30
		bam GUICHLNG
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 3"
		glow lua "createCharScreen:GetCurrentStep() == 3"
		text "RACE_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 286 340 30
		bam GUICHLNG
		sequence 2
		clickable lua "createCharScreen:GetCurrentStep() == 4"
		glow lua "createCharScreen:GetCurrentStep() == 4"
		text "CLASS_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 316 340 30
		bam GUICHLNG
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 7"
		glow lua "createCharScreen:GetCurrentStep() == 7"
		text "ALIGNMENT_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 22 346 340 30
		bam GUICHLNG
		sequence 0
		clickable lua "createCharScreen:GetCurrentStep() == 8"
		glow lua "createCharScreen:GetCurrentStep() == 8"
		text "ABILITIES_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 376 340 30
		bam GUICHLNG
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 9"
		glow lua "createCharScreen:GetCurrentStep() == 9"
		text "SKILLS_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 406 340 30
		bam GUICHLNG
		sequence 2
		clickable lua "createCharScreen:GetCurrentStep() == 15"
		glow lua "createCharScreen:GetCurrentStep() == 15"
		text "APPEARANCE_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 22 436 340 30
		bam GUICHLNG
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 17"
		glow lua "createCharScreen:GetCurrentStep() == 17"
		text "NAME_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 770 552 204 44
		text "IMPORT_BUTTON"
		text style "button"
		bam GUIOSTUM
		clickable lua "Infinity_GetCurrentScreenName() == 'CHARGEN'"
		action "createCharScreen:OnImportCharacterButtonClick()"
	}
	button
	{
		area 770 604 204 44
		text "BIOGRAPHY_BUTTON"
		text style "button"
		bam GUIOSTLM
		clickable lua "createCharScreen:GetCurrentStep() >= 17"
		action "createCharScreen:OnBiographyButtonClick()"
	}
	button
	{
		area 290 610 206 44
		text "PREGEN_LABEL"
		text style "button"
		bam GUIOSTUM
		clickable lua "createCharScreen:IsMainBackButtonClickable()"
		action 
		"
			if createCharScreen:GetCurrentStep() == 0 then
				randChar()
			else
				while createCharScreen:GetCurrentStep() ~= 0 do
					createCharScreen:OnMainBackButtonClick()
				end
				randChar()
			end	
		"
	}
	button
	{
		--on escape
		area 194 718 238 44
		text "BACK_BUTTON"
		text style "button"
		bam GUIOSTUL
		clickable lua "createCharScreen:IsMainBackButtonClickable()"
		action 
		"
			if(e:IsMultiplayer()) then
				createCharScreen:OnMainBackButtonClick()
			end
            if not (e:IsMultiplayer()) and createCharScreen:GetCurrentStep() == 0 then
                createCharScreen:OnMainBackButtonClick();
				Infinity_PopMenu('IMPORTPARTY');
                startEngine:SetEngineState(0); 
                Infinity_PushMenu('START')
			end
			if not (e:IsMultiplayer()) and createCharScreen:GetCurrentStep() ~= 0 then
				createCharScreen:OnMainBackButtonClick()
			end					
		"
	}
	button
	{
		--on escape
		area 194 718 232 44
		text "CANCEL_BUTTON"
		text style "button"
		bam GUIOSTUL
		enabled "not createCharScreen:IsMainBackButtonClickable()"
		action "createCharScreen:OnMainCancelButtonClick()"
	}
	button
	{
		area 438 718 206 44
		text lua "chargenAcceptOrExport()"
		text style "button"
		bam GUIOSTUM
		clickable lua "createCharScreen:IsChargenComplete()"
		action "createCharScreen:AcceptCharacter(-1)"
	}

	button
	{
		area 650 718 238 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIOSTUR
		clickable lua "createCharScreen:IsAdvancedButtonClickable() == true"
		action "createCharScreen:OnAdvancedButtonClick()"
	}
}
menu
{
	name 'CHARGEN_GENDER'
	onOpen
	"
		if gender ~= nil then
			createCharScreen:OnGenderSelectButtonClick(gender)
			Infinity_PopMenu()
			createCharScreen:OnDoneButtonClick()
		end
	"
	label
	{
		area 0 0 1 1
	}
}
`

portraitSearchString = ""

function setCurrentPortrait(idx)
	local portrait = portraitTable[idx]
	local curPortrait = createCharScreen:GetCurrentPortrait():upper()
	while portrait ~= curPortrait do
		createCharScreen:IncCurrentPortrait()
		curPortrait = createCharScreen:GetCurrentPortrait():upper()
	end
end
function getPortrait(idx)
	local portrait = portraitTable[idx]
	if portrait:sub(-1) == 'L' then
		return portrait:sub(1, -2)
	end
	return portrait
end
function comparePortrait(portrait, curPortrait)
	if portrait:sub(-1) == 'L' or portrait:sub(-1) == 'M' then
		portrait = portrait:sub(1, -2)
	end
	if curPortrait:sub(-1) == 'L' or curPortrait:sub(-1) == 'M' then
		curPortrait = curPortrait:sub(1, -2)
	end
	return portrait == curPortrait
end
function portraitScroll(top, height, contentHeight)
	if scrollPortrait ~= nil then
		top = top - 107 * scrollPortrait
		top = math.min(top, 0)
		top = math.max(top, height - contentHeight)
		scrollPortrait = nil
		return top
	end
	return nil
end

function portraitContainsSearchString(rowNumber)
	
	if(portraitSearchString == nil or portraitSearchString == "") then return 1 end --no search string, do nothing
	
	local text = getPortrait(rowNumber)
	if(string.find(string.lower(text),string.lower(portraitSearchString))) then
		return 1
	else
		return nil --does not contain search string
	end
end


`
menu
{
	name 'CHARACTER_PORTRAIT' --portrait menu, chargen portrait
	align center center
	--offset 15 0 --offset 178 0
	modal
	ignoreesc
	onOpen
	"
		--Infinity_PlaySound('GAM_03')
		portraitTable = {}
		selPortrait = 1
		local firstPortrait = createCharScreen:GetCurrentPortrait():upper()
		local curGender = gender == 1 and 15729749 or 15729635
		local curPortrait = firstPortrait
		if CurrentlyInGame() then
			curGender = characters[currentID].gender
			curPortrait = characters[currentID].portrait
			Infinity_SetOffset('CHARACTER_PORTRAIT', 0, 0)
		else
			Infinity_SetOffset('CHARACTER_PORTRAIT', 15, 0)
		end
		local portrait = firstPortrait
		local idx = 1
		while idx == 1 or portrait ~= firstPortrait do
			local gender = nil
			if portrait:find('M#') == 1 then
				gender = 15729749
			elseif portrait:find('F#') == 1 then
				gender = 15729635
			end
			if gender == curGender or gender == nil then
				table.insert(portraitTable, portrait)
			end
			if comparePortrait(portrait, curPortrait) then
				selPortrait = idx
			end
			createCharScreen:IncCurrentPortrait()
			portrait = createCharScreen:GetCurrentPortrait():upper()
			idx = idx + 1
		end
		scrollPortrait = selPortrait - 1
	"
	onClose
	"
		--Infinity_PlaySound('GAM_04')
		portraitTable = nil
	"
	label
	{
		area 0 0 864 710
		mosaic GUIAPBR
	}
	label
	{
		area 82 12 700 40
		text "APPEARANCE_TITLE"
		text style "title"
	}
	button
	{
		enabled "not CurrentlyInGame()"
		area 122 542 77 68
		bam GUIGEND1
		frame lua "gender == 1 and 2 or 0"
		sequence 0
		action
		"
			gender = 1
			Infinity_PopMenu()
			createCharScreen:OnCancelButtonClick()
		"
	}
	button
	{
		enabled "not CurrentlyInGame()"
		area 226 542 77 68
		bam GUIGEND1
		frame lua "gender == 2 and 2 or 0"
		sequence 1
		action
		"
			gender = 2
			Infinity_PopMenu()
			createCharScreen:OnCancelButtonClick()
		"
	}
	list
	{
		column
		{
			width 1
			label
			{
				enabled "portraitContainsSearchString(rowNumber)"
				area 0 2 0 105
			}
		}
		column
		{
			width 100
			label
			{
				area 0 0 70 105 --57 90
				enabled "portraitContainsSearchString(rowNumber)"
				bitmap lua "portraitTable[rowNumber]"
				glow lua "rowNumber == mouseoverRow"
				--glow lua "selPortrait == rowNumber"
			}
			label
			{
				area 80 0 -1 -1
				enabled "portraitContainsSearchString(rowNumber)"
				text lua "getPortrait(rowNumber)"
				text style 'label'
				glow lua "rowNumber == mouseoverRow"
			}
		}
		name "portraitList"
		actionEnter	""
		actionExit	"mouseoverRow = 0"
		rowheight dynamic
		hidehighlight
		area 436 130 378 428
		table "portraitTable"
		var selPortrait
		scrollbar 'GUISCRC'
		scrollbar func "portraitScroll"
		action
		"
			if selPortrait == 0 then
				selPortrait = 1
			end
		"
	}
	button
	{
		enabled "not CurrentlyInGame()"
		on "Left Shift"
		action
		"
			if gender == 2 then gender = 1 else gender = 2 end
			Infinity_PopMenu()
			createCharScreen:OnCancelButtonClick()
		"
	}
	button
	{
		area 465 575 30 30
		bam GUIOSW
		sequence 2
		scaleToClip
		action
		"
			portraitSearchString = ''
			Infinity_FocusTextEdit('PortraitSearch')
		"
	}
	edit
	{
		name "PortraitSearch"
		area 500 575 250 30
		var portraitSearchString
		placeholder "ENTER_TEXT"
		text style "edit"
		maxlines 1
		text point 14
		align left bottom
		fill		112 111 111 64
		--EXTEXT7
	}
	button
	{
		on up
		action
		"
			if selPortrait == 1 then
				return
			else
				selPortrait = selPortrait - 1
				scrollPortrait = -1
			end
		"
	}
	button
	{
		on down
		action
		"
			if selPortrait == #portraitTable then
				return
			else
				scrollPortrait = 1
				selPortrait = selPortrait + 1
			end
		"
	}
	button
	{
		on "Keypad +"
		action
		"
			if (selPortrait -4) >= 1 then
				scrollPortrait = -4
				selPortrait = selPortrait - 4
			elseif selPortrait == 1 then
				return
			else
				selPortrait = 1
			end
		"
	}
	button
	{
		on "Keypad Enter"
		action
		"	
			if (selPortrait + 4) <= #portraitTable then
				scrollPortrait = 4
				selPortrait = selPortrait + 4
			elseif selPortrait == #portraitTable then
				return
			else
				scrollPortrait = ((selPortrait - #portraitTable) * -1)
				selPortrait = #portraitTable
			end
		"
	}

	label
	{
		area 107 200 210 330
		bitmap lua "portraitTable[selPortrait]"
	}
--	label
--	{
--		enabled "portraitTable[selPortrait]:sub(-1) == 'L'"
--		area 333 302 95 130
--		scaleToClip
--		bam GUIRSP10
--	}

--	label
--	{
--		enabled "portraitTable[selPortrait]:sub(-1) == 'L'"
--		area 340 305 77 115 --55 85, 82 123
--		bitmap lua "portraitTable[selPortrait]:sub(1, -2) .. 'M'"
--	}

	button
	{
		--on return
		bam GUIOSTUR
		area 464 653 234 44
		text style "button"
		text "DONE_BUTTON"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action
		"
			setCurrentPortrait(selPortrait)
			Infinity_PopMenu()
			createCharScreen:OnDoneButtonClick()	
			createCharScreen:OnMenuButtonClick()
			portraitSearchString = ''
			if not characterScreen:IsInGame() and Infinity_GetCurrentScreenName() == 'CHARGEN' then
				createCharScreen:OnMenuButtonClick()
			end
		"
	}

	button
	{
		--on escape
		area 210 653 234 44
		bam GUIOSTUL
		text style "button"
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu()
			if CurrentlyInGame() then
				createCharScreen:OnCancelButtonClick()
			else
				createCharScreen:OnDoneButtonClick()
				createCharScreen:OnMainBackButtonClick()
			end
			portraitSearchString = ''
		"
	}
}
menu
{
	name 'CHARGEN_PORTRAIT'
	onOpen
	"
		if CurrentlyInGame() then
			pushSidebars()
		end
		Infinity_PushMenu('CHARACTER_PORTRAIT')
		Infinity_PopMenu('CHARGEN_PORTRAIT')
	"
	label
	{
		   
		area 0 0 1 1
	   
	}

}

`
function raceOrGeneralHelp()
	race = chargen.races[currentChargenRace]
	if race then
		return Infinity_FetchString(race.desc)
	end
	return Infinity_FetchString(17237)
end
`
menu
{
	name 'CHARGEN_RACE' --chargen races
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onopen 
	"
	--currentChargenRace = nil
	currentChargenRace = 1
	createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
	"
	label
	{
		area 0 159 1024 609
		mosaic 'GUISMF'
	}
	label
	{
		area 22 164 334 44
		text "RACE_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 44
				text lua "Infinity_FetchString(chargen.races[rowNumber].name)"
				text style "list"
				pad 8 0 0 0
				text lower
				
			}
		}
	
		rowheight 44
		area 26 222 336 382
		table "chargen.races"
		var currentChargenRace
		scrollbar	'GUISCRC'
		action 
		"
		if chargen.races[currentChargenRace] then
			createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
		end
		"
	}
	text
	{
		area 412 182 576 412
		text lua "raceOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		--on escape
		area 194 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu();"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action
		"
			Infinity_PopMenu()
			createCharScreen:OnDoneButtonClick()	
			createCharScreen:OnMenuButtonClick()
		"
	}

}
`
function classOrGeneralHelp()
	class = chargen.class[currentChargenClass]
	if class then
		return Infinity_FetchString(class.desc)
	else
		--only bit that may need to change for dual class! :)
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_CLASS' --chargen class
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onopen 
	"
	--currentChargenClass = nil currentChargenKit = nil
	currentChargenClass = 1
	createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
	"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 159 1024 609
		mosaic GUISMF
	}
	label
	{
		area 22 166 334 44
		text "CLASS_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 44
				text lua "Infinity_FetchString(chargen.class[rowNumber].name)"
				text style "list"
				pad 8 0 0 0
				text lower
				
			}
		}
		action 
			"
			if chargen.class[currentChargenClass] then
				createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
			end
			"
		rowheight 44
		area 26 222 336 382
		table "chargen.class"
		var currentChargenClass
		scrollbar 'GUISCRC'
	}
	text
	{
		area 414 182 574 414
		text lua "classOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		--on escape
		area 194 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		clickable lua "createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_CLASS"
		action "Infinity_PopMenu('CHARGEN_CLASS');"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action 
		"
		createCharScreen:OnDoneButtonClick()
		if not characterScreen:IsInGame() and Infinity_GetCurrentScreenName() == 'CHARGEN' then
			createCharScreen:OnMenuButtonClick()
		end
		"
	}

}
`
function kitOrGeneralHelp()
	kit = chargen.kit[currentChargenKit]
	if kit then
		return Infinity_FetchString(kit.desc)
	else
		return Infinity_FetchString(17242)
	end
end

--CHARGEN INFORMATION

`
menu
{
	name 'CHARGEN_KIT' --chargen kit
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	label
	{
		area 0 159 1024 609
		mosaic GUISMF
	}
	label
	{
		area 22 166 334 44
		text "CLASS_KIT_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 44
				text lua "Infinity_FetchString(chargen.kit[rowNumber].name)"
				text style "list"
				pad 8 0 0 0
				text lower
				
			}
		}
		action "
			if chargen.kit[currentChargenKit] then
				createCharScreen:OnKitSelectButtonClick(chargen.kit[currentChargenKit].id)
			end
			"
			
		rowheight 44
		area 26 222 336 382
		table "chargen.kit"
		var currentChargenKit
		scrollbar	'GUISCRC'
	}
	text
	{
		area 414 182 574 414
		text lua "kitOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		--on escape
		area 194 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}
}
`
function alignmentOrGeneralHelp()
	alignment = chargen.alignment[currentChargenAlignment]
	if alignment then
		return Infinity_FetchString(alignment.desc)
	else
		return Infinity_FetchString(9602)
	end
end
`
menu
{
	name 'CHARGEN_ALIGNMENT'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onopen 
	"
	--currentChargenAlignment = nil
	currentChargenAlignment = 1
	createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
	"
	label
	{
		area 0 159 1024 609
		mosaic GUISMF
	}
	label
	{
		area 22 168 332 44
		text "ALIGNMENT_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 44
				text lua "Infinity_FetchString(chargen.alignment[rowNumber].name)"
				text style "list"
				pad 8 0 0 0
				text lower
				
			}
		}
		action "
			if chargen.alignment[currentChargenAlignment] then
				createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
			end
			"
		rowheight 40
		area 26 222 336 382
		table "chargen.alignment"
		var currentChargenAlignment
		scrollbar	'GUISCRC'
	}
	text
	{
		area 412 180 576 416
		text lua "alignmentOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		--on escape
		area 194 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}

}
`
dualInfo = 0 

chargen.ability = chargen.ability and chargen.ability or {
	{name = 'STRENGTH_LABEL', desc = 9582},
	{name = 'DEXTERITY_LABEL', desc = 9584},
	{name = 'CONSTITUTION_LABEL', desc = 9583},
	{name = 'INTELLIGENCE_LABEL', desc = 9585},
	{name = 'WISDOM_LABEL', desc = 9586},
	{name = 'CHARISMA_LABEL', desc = 9587},
}

function abilityOrGeneralHelp()
	ability = chargen.ability[currentChargenAbility]
	if ability and ability.desc ~= -1 then
		createCharScreen:SetAbilityHelpInfo(currentChargenAbility)
		return Infinity_FetchString(ability.desc)
	else
		return Infinity_FetchString(17247)
	end
end

function abilityOrDesc()
local text = value
ability = chargen.ability[currentChargenAbility]

	if ability and ability.desc ~= -1 then
		text = currentChargenAbility ~= 0
		return text
	else
	end
end

function chargenTable()
local text = 1
ability = chargen.ability[currentChargenAbility]

	if ability and ability.desc ~= -1 then
		if currentChargenAbility == 1 then
			text = strchargen
		elseif currentChargenAbility == 2 then
			text = dexchargen
		elseif currentChargenAbility == 3 then
			text = conchargen
		elseif currentChargenAbility == 4 then
			text = intchargen
		elseif currentChargenAbility == 5 then
			text = wischargen
		elseif currentChargenAbility == 6 then
			text = chachargen
		end
	else
		text = strchargen
	end

	return text
end

function chargenTableChange1()
local text = 1
	if currentChargenAbility == 1 then
		text = t(strchargen[rowNumber][1])
	elseif currentChargenAbility == 2 then
		text = t(dexchargen[rowNumber][1])
	elseif currentChargenAbility == 3 then
		text = t(conchargen[rowNumber][1])
	elseif currentChargenAbility == 4 then
		text = t(intchargen[rowNumber][1])
	elseif currentChargenAbility == 5 then
		text = t(wischargen[rowNumber][1])
	elseif currentChargenAbility == 6 then
		text = t(chachargen[rowNumber][1])
	end
	return text
end

function chargenTableChange2()
local text = 1
	if currentChargenAbility == 1 then
		text = t(strchargen[rowNumber][2])
	elseif currentChargenAbility == 2 then
		text = t(dexchargen[rowNumber][2])
	elseif currentChargenAbility == 3 then
		text = t(conchargen[rowNumber][2])
	elseif currentChargenAbility == 4 then
		text = t(intchargen[rowNumber][2])
	elseif currentChargenAbility == 5 then
		text = t(wischargen[rowNumber][2])
	elseif currentChargenAbility == 6 then
		text = t(chachargen[rowNumber][2])
	end
	return text
end

function chargenTableChange3()
local text = 1
	if currentChargenAbility == 1 then
		text = t(strchargen[rowNumber][3])
	elseif currentChargenAbility == 2 then
		text = t(dexchargen[rowNumber][3])
	elseif currentChargenAbility == 3 then
		text = t(conchargen[rowNumber][3])
	elseif currentChargenAbility == 4 then
		text = t(intchargen[rowNumber][3])
	elseif currentChargenAbility == 5 then
		text = t(wischargen[rowNumber][3])
	elseif currentChargenAbility == 6 then
		text = t(chachargen[rowNumber][3])
	end
	return text
end

function chargenTableChange4()
local text = 1
	if currentChargenAbility == 1 then
		text = t(strchargen[rowNumber][4])
		return text
	elseif currentChargenAbility == 2 then
		return
	elseif currentChargenAbility == 3 then
		text = t(conchargen[rowNumber][4])
		return text
	elseif currentChargenAbility == 4 then
		text = t(intchargen[rowNumber][4])
		return text
	elseif currentChargenAbility == 5 then
		return
	elseif currentChargenAbility == 6 then
		return
	end
end

function chargenTableChange5()
local text = 1
	if currentChargenAbility == 1 then
		text = t(strchargen[rowNumber][5])
		return text
	elseif currentChargenAbility == 2 then
		return
	elseif currentChargenAbility == 3 then
		text = t(conchargen[rowNumber][5])
		return text
	elseif currentChargenAbility == 4 then
		return
	elseif currentChargenAbility == 5 then
		return
	elseif currentChargenAbility == 6 then
		return
	end
end

--STR PLACEMENT

dexchargen = {
{'CS_','CS_','CS_'},
{'CS_','CS_','CS_'},
{'TABLE_DEX','TABLE_TOHIT','TABLE_AC'},
{'CS_','CS_','CS_'},
{'b_','n_d','d_'},
{'c_','n_c','c_'},
{'d_','n_b','b_'},
{'e_','n_a','a_'},
{'f_','q_','q_'},
{'g_','q_','q_'},
{'h_','q_','q_'},
{'i_','q_','q_'},
{'aq_','q_','q_'},
{'aa_','q_','q_'},
{'ab_','q_','q_'},
{'ac_','q_','q_'},
{'ad_','q_','q_'},
{'ae_','q_','n_a'},
{'af_','a_','n_b'},
{'ag_','b_','n_c'},
{'ah_','b_','n_d'},
{'ai_','c_','n_d'},
{'bq_','c_','n_d'},
{'ba_','d_','n_e'},
{'bb_','d_','n_e'},
{'bc_','d_','n_e'},
{'bd_','e_','n_f'},
{'be_','e_','n_f'}
}

conchargen = {
{'CS_','CS_','CS_','CS_','CS_'},
{'CS_','CS_','CS_','CS_','CS_'},
{'TABLE_CON','TABLE_HP','TABLE_WAR','TABLE_REG','TABLE_FATIGUE'},
{'CS_','CS_','CS_','CS_','CS_'},
{'b_','n_b','n_b','n_','n_c'},
{'c_','n_b','n_b','n_','n_c'},
{'d_','n_a','n_a','n_','n_b'},
{'e_','n_a','n_a','n_','n_b'},
{'f_','n_a','n_a','n_','n_a'},
{'g_','q_','q_','n_','n_a'},
{'h_','q_','q_','n_','q_'},
{'i_','q_','q_','n_','q_'},
{'aq_','q_','q_','n_','q_'},
{'aa_','q_','q_','n_','q_'},
{'ab_','q_','q_','n_','q_'},
{'ac_','q_','q_','n_','q_'},
{'ad_','q_','q_','n_','q_'},
{'ae_','a_','a_','n_','q_'},
{'af_','b_','b_','n_','a_'},
{'ag_','b_','c_','n_','a_'},
{'ah_','b_','d_','n_','b_'},
{'ai_','b_','e_','a_S_fq_SEC','b_'},
{'bq_','b_','e_','a_S_eq_SEC','c_'},
{'ba_','b_','f_','a_S_dq_SEC','c_'},
{'bb_','b_','f_','a_S_cq_SEC','d_'},
{'bc_','b_','f_','a_S_bq_SEC','d_'},
{'bd_','b_','g_','a_S_aq_SEC','e_'},
{'be_','b_','g_','a_S_aq_SEC','e_'}
}

intchargen = {
{'CS_','CS_','CS_','CS_'},
{'CS_','CS_','CS_','CS_'},
{'TABLE_INT','TABLE_SCR','TABLE_SPELLS','TABLE_LORE'},
{'CS_','CS_','CS_','CS_'},
{'b_','n_','n_','n_bq'},
{'c_','n_','n_','n_bq'},
{'d_','n_','n_','n_bq'},
{'e_','n_','n_','n_bq'},
{'f_','n_','n_','n_bq'},
{'g_','n_','n_','n_aq'},
{'h_','n_','n_','n_aq'},
{'i_','n_','f_','n_aq'},
{'aq_','ce_p','g_','q_'},
{'aa_','dq_p','g_','q_'},
{'ab_','de_p','g_','q_'},
{'ac_','eq_p','i_','q_'},
{'ad_','ee_p','i_','q_'},
{'ae_','fq_p','aa_','q_'},
{'af_','gq_p','aa_','c_'},
{'ag_','ge_p','ad_','g_'},
{'ah_','he_p','ah_','aq_'},
{'ai_','ie_p','ii_','ab_'},
{'bq_','if_p','ii_','ae_'},
{'ba_','ig_p','ii_','bq_'},
{'bb_','ih_p','ii_','be_'},
{'bc_','ii_p','ii_','cq_'},
{'bd_','aqq_p','ii_','ce_'},
{'be_','aqq_p','ii_','dq_'}
}

wischargen = {
{'CS_','CS_','CS_'},
{'CS_','CS_','CS_'},
{'TABLE_WIS','TABLE_LORE','TABLE_SPELLG'},
{'CS_','CS_','CS_'},
{'b_','n_bq','n_'},
{'c_','n_bq','n_'},
{'d_','n_bq','n_'},
{'e_','n_bq','n_'},
{'f_','n_bq','n_'},
{'g_','n_aq','n_'},
{'h_','n_aq','n_'},
{'i_','n_aq','n_'},
{'aq_','q_','n_'},
{'aa_','q_','n_'},
{'ab_','q_','n_'},
{'ac_','q_','wis_ac'},
{'ad_','q_','wis_ae'},
{'ae_','c_','wis_af'},
{'af_','e_','wis_ag'},
{'ag_','g_','wis_ah'},
{'ah_','aq_','wis_ai'},
{'ai_','ab_','wis_bq'},
{'bq_','ae_','wis_bq'},
{'ba_','bq_','wis_ba'},
{'bb_','be_','wis_bb'},
{'bc_','cq_','wis_bc'},
{'bd_','ce_','wis_bd'},
{'be_','dq_','wis_be'}
}

--CHA PLACEMENT

racechargen = {
{'DUAL_HUMAN_DESC','CS_','CS_'},
{'CS_','CS_','CS_'},
{'DUAL_CLASS','DUAL_SECONDARY','DUAL_REQ'},
{'CS_','CS_','CS_'},
{'CS_','DUAL_CL','TABLE_STR_W'},
{'DUAL_FI','DUAL_DR','TABLE_STR_WC'},
{'CS_','DUAL_WA','TABLE_STR_I'},
{'CS_','DUAL_TH','TABLE_STR_D'},
{'CS_','CS_','CS_'},
{'DUAL_RA','DUAL_CL','TABLE_STR_DW'},
{'CS_','CS_','CS_'},
{'CS_','DUAL_FI','TABLE_DEX_S'},
{'DUAL_TH','DUAL_CL','TABLE_DEX_W'},
{'CS_','DUAL_WA','TABLE_DEX_I'},
{'CS_','CS_','CS_'},
{'CS_','DUAL_FI','TABLE_DEX_SDCS'},
{'DUAL_TSD','DUAL_CL','TABLE_DEX_SDCSW'},
{'CS_','DUAL_WA','TABLE_DEX_SDCSI'},
{'CS_','CS_','CS_'},
{'CS_','DUAL_FI','TABLE_INT_S'},
{'DUAL_WA','DUAL_CL','TABLE_INT_W'},
{'CS_','DUAL_TH','TABLE_INT_D'},
{'CS_','CS_','CS_'},
{'CS_','DUAL_FI','TABLE_WIS_S'},
{'DUAL_CL','DUAL_RA','TABLE_WIS_SD'},
{'CS_','DUAL_WA','TABLE_WIS_I'},
{'CS_','DUAL_TH','TABLE_WIS_D'},
{'CS_','CS_','CS_'},
{'DUAL_DR','DUAL_FI','TABLE_WIS_CS'},
{'CS_','CS_','CS_'},
{'CS_','CS_','CS_'},
{'DUAL_TABLE','CS_','CS_'},
}

`

menu
{
	name 'CHARGEN_ABILITIES' --chargen abilities
	align center center
	offset 80 0 --offset 178 0
	ignoreesc
	onopen "ticksPassed = 0; ticksStarting = 0"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 156 1024 612
		mosaic GUISMDB
	}
	label
	{
		area 20 174 496 48
		text "ABILITIES_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 60
			label
			{
				area 0 0 290 55
				text lua "t(chargen.ability[rowNumber].name)"
				text style "normal"
				align right center
				
			}
		}
		column
		{
			width 22
			label
			{
				area 20 0 90 55
				text lua "chargen.ability[rowNumber].roll"
				text style "normal"
				align center center
			}
		}
		column
		{
			width 9
			label
			{
				area 0 6 45 42
				bam GUIOSW
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 16
			label
			{
				area 0 6 45 42
				bam GUIOSW
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}
		action 
		"
			if ticksStarting < 10 then
				if cellNumber == 3 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
				elseif cellNumber == 4 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 3 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
					elseif cellNumber == 4 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight 52
		hidehighlight
		area 32 254 496 320
		table "chargen.ability"
		var currentChargenAbility
	}
	label
	{
		area 152 568 186 54
		text "TOTAL_ROLL_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 368 568 50 54
		text lua "chargen.totalRoll"
		text style "normal"
		text align center center
	}
	label
	{
		area 434 568 94 54
		text lua "chargen.extraAbilityPoints"
		text style "normal"
		text align center center
	}


--	text
--	{
--		area 582 200 404 400
--		text lua "abilityOrDesc()"
--		text style "normal"
--		scrollbar	'GUISCRC'
--	}

	list
	{
	column
	{
		width 100
		text
		{
		area 0 0 -1 -1
		enabled "rowNumber < 2"
		text lua "t(abilityOrGeneralHelp())"
		text style "normal"
		text useFontZoom 0
		text point 14
		text color "B"
		}
		label
		{
		area 0 0 -1 -1
		enabled "abilityOrDesc()"
		text lua "chargenTableChange1()"
		text style "normal"
		text useFontZoom 0
		text point 13
		}
		label
		{
		area 60 0 -1 -1
		enabled "abilityOrDesc()"
		text lua "chargenTableChange2()"
		text style "normal"
		text useFontZoom 0
		text point 14
		}
		
		label
		{
		area 140 0 -1 -1
		enabled "abilityOrDesc()"
		text lua "chargenTableChange3()"
		text style "normal"
		text useFontZoom 0
		text point 14
		}
		
		label
		{
		area 230 0 -1 -1
		enabled "abilityOrDesc()"
		text lua "chargenTableChange4()"
		text style "normal"
		text useFontZoom 0
		text point 14
		}
		label
		{
		area 300 0 -1 -1
		enabled "abilityOrDesc()"
		text lua "chargenTableChange5()"
		text style "normal"
		text useFontZoom 0
		text point 14
		}
	}
		
	area 580 200 404 400
	rowheight dynamic
	table "chargenTable()"
	scrollbar 'guiscrc'
	}

	button
	{
		area 378 642 142 40
		bam GUIOSTSM
		sequence 0
		text "REROLL_BUTTON"
		text style "button"
		action "createCharScreen:OnAbilityReRollButtonClick()"
	}
	button
	{
		area 60 642 142 40
		bam GUIOSTSM
		sequence 0
		text "STORE_BUTTON"
		text style "button"
		action "createCharScreen:OnAbilityStoreButtonClick()"
	}
	button
	{
		area 220 642 142 40
		bam GUIOSTSM
		sequence 0
		text "RECALL_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsAbilityRecallButtonClickable()"
		action "createCharScreen:OnAbilityRecallButtonClick()"
	}

	button
	{
		on '8'
		action "createCharScreen:OnCheatyMcCheaterson()"
		
		
	}
	
	button
	{
		area 711 620 142 40
		bam GUIOSTSM
		enabled "currentChargenRace == 1"
		sequence 0
		text "DUAL_LABEL"
		text style "button"
		action "if dualInfo == 0 then dualInfo = 1 else dualInfo = 0 end"
	}

	label
	{
	area 580 190 560 415
	enabled "dualInfo == 1 and currentChargenRace == 1"
	fill 0 0 0 255
	}
	label
	{
	area 560 175 595 445
	enabled "dualInfo == 1 and currentChargenRace == 1"
	rectangle 4
	rectangle opacity -1
	}
	list
	{
		column
		{
			width 100
			label
			{
			area 0 0 -1 -1
			text lua "t(racechargen[rowNumber][1])"
			text style "normal"
			text useFontZoom 0
			text point 14
			}
			label
			{
			area 120 0 -1 -1
			text lua "t(racechargen[rowNumber][2])"
			text style "normal"
			text useFontZoom 0
			text point 14
			}
			label
			{
			area 240 0 -1 -1
			text lua "t(racechargen[rowNumber][3])"
			text style "normal"
			text useFontZoom 0
			text point 14
			}
		}
		
	area 580 200 556 400
	enabled "dualInfo == 1 and currentChargenRace == 1"
	rowheight dynamic
	hidehighlight
	table racechargen
	scrollbar 'guiscrc'
	}
	button
	{
		--on escape
		area 194 716 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu();"
	}
	button
	{
		--on return
		area 438 720 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}

}

`
function proficiencyOrGeneralHelp()
	local prof = chargen.proficiency[currentChargenProficiency]
	local skill = chargen.thief_skill[currentChargenThiefSkill]
	if prof and prof.desc ~= -1 then
		return Infinity_FetchString(prof.desc)
	elseif skill and skill.desc ~= -1 then
		return Infinity_FetchString(skill.description)
	else
		if(chargen.levelingUp) then
			if(levelUpInfoToggle == 1) then
				return chargen.charInfo
			else
				return chargen.levelInfo
			end
		else
		return Infinity_FetchString(--PROFREP))
	end
	end
end

function getProficienciesTitle()
	if(chargen.levelingUp) then
		return t("LEVEL_UP_TITLE")
	else
		return t("CHARGEN_TITLE")
	end
end

function isChargenProficienciesBackButtonClickable()
	return ((not chargen.levelingUp) and createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_PROFICIENCIES)
end

function removeKeyOption(list, option, keychange)
	local startingPoint = 1
	local found = false
	local amount = 0
	local pamount = 0
	for index = 1, #list, 1 do
		if list[index].id == option then
			startingPoint = index
			amount = list[startingPoint].value
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list, 1 do
			list[index] = list[index+1]
		end
		--list[#list+1] = nil
		table.remove(list,#list+1)
	end
	for index = 1, #list, 1 do
		if list[index].id == keychange then
			pamount = list[index].value
			list[index].value = tostring(tonumber(list[index].value) + amount)
			if pamount ~= list[index].value then
				break
			end
		end
	end	
end

function modifiedThiefTable()
	local s = chargen.thief_skill
	removeKeyOption(s,4,3)
	return s
end
`

menu
{
	name 'CHARGEN_PROFICIENCIES' --chargen proficiencies
	modal
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onopen 
	"
	currentChargenProficiency = nil; currentChargenThiefSkill = nil; ticksPassed = 0; ticksStarting = 0
	"
	onClose
	"
	mpChatTable = {}
	"
	label
	{
		area 0 0 1024 768
		mosaic GUILUPB
	}
	label
	{
		area 162 16 700 44
		text lua "getProficienciesTitle()"
		text style "title"
	}
	label
	{
		area 58 172 392 44
		text "PROF_SLOTS_LABEL"
		text style "label"
		text align left bottom
	}
	label
	{
		area 450 172 50 44
		text lua "chargen.extraProficiencySlots"
		text style "label"
		text align center bottom
	}
	label
	{
		area 578 172 318 44
		text "SKILLS_LABEL"
		text style "label"
		text align left bottom
	}
	label
	{
		area 896 172 50 44
		text lua "chargen.extraSkillPoints"
		text style "label"
		text align center bottom
	}

	list
	{
		column
		{
			width 62
			label
			{
				area 0 0 280 55
				text lua "Infinity_FetchString(chargen.proficiency[rowNumber].name)"
				text style "normal"
				align right center
				
			}
		}
		column
		{
			width 4
			label
			{
				bam GUIPFC
				area 0 19 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 4"
			}
		}
		column
		{
			width 4
			label
			{
				bam GUIPFC
				area 0 19 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 3"
			}
		}
		column
		{
			width 4
			label
			{
				bam GUIPFC
				area 0 19 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 2"
			}
		}
		column
		{
			width 4
			label
			{
				bam GUIPFC
				area 0 19 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 1"
			}
		}
		column
		{
			width 4
			label
			{
				bam GUIPFC
				area 0 19 16 16
				align center center
				enabled "chargen.proficiency[rowNumber].value > 0"
			}
		}

		column
		{
			width 9
			label
			{
				area 0 6 45 42
				bam GUIOSW
				frame lua "getPlusFrame(7)"
				sequence 0
				align center center
			}
		}
		column
		{
			width 9
			label
			{
				area 0 6 45 42
				bam GUIOSW
				sequence 1
				frame lua "getMinusFrame(8)"

				align center center
			}
		}

		action "
			currentChargenThiefSkill = nil
			if ticksStarting < 10 then
				if cellNumber == 7 and plusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
				elseif cellNumber == 8 and minusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			currentChargenThiefSkill = nil
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 7 and plusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
					elseif cellNumber == 8 and minusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight dynamic --54
		area 46 268 484 390
		table "chargen.proficiency"
		var currentChargenProficiency
		scrollbar	'GUISCRC'

	}
	list
	{
		column
		{
			width 60
			label
			{
				area 0 0 180 54
				text lua "Infinity_FetchString(modifiedThiefTable()[rowNumber].name)" --chargen.thief_skill
				text style "normal"
				text align right center
				
			}
		}
		column
		{
			width 10
			label
			{
				area 0 0 40 54
				text lua "modifiedThiefTable()[rowNumber].value" --chargen.thief_skill
				text style "normal"
				text align left center

			}
		}
		column
		{
			width 18
			label
			{
				area 24 6 45 42
				bam GUIOSW
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 12
			label
			{
				area 0 6 45 42
				bam GUIOSW
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}
		
		action 
		"
			currentChargenProficiency = nil
			if ticksStarting < 10 then
				if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
					if cellNumber == 3 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
					elseif cellNumber == 4 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
					end
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenProficiency = nil
			if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
				ticksStarting = ticksStarting + 1
				if ticksStarting > 10 then
					ticksPassed = ticksPassed + 1
					if ticksPassed > 2 then
						if cellNumber == 3 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
						elseif cellNumber == 4 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
						end
						ticksPassed = 0
					end
				end
			end
		"

		rowheight 54
		area 578 268 402 168
		table "modifiedThiefTable()" --chargen.thief_skill
		var currentChargenThiefSkill
		scrollbar	'GUISCRC'
	}

	text
	{
		area 578 500 402 174
		text lua "proficiencyOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
		action
		"
			currentChargenProficiency = nil
			currentChargenThiefSkill = nil
		"
	}
	
	button
	{
		enabled "chargen.levelingUp"
		area 360 70 302 44
		bam GUIOSTCL
		text "INFORMATION_BUTTON"
		text style "button"
		toggle "levelUpInfoToggle"
		action
		"
			currentChargenProficiency = nil
		"
	}
	button
	{
		enabled "chargen.levelingUp"
		area 650 718 238 44
		bam GUIOSTUR
		text "HIGH_LEVEL_ABILITIES_BUTTON"
		text style "button"
		toggle "levelUpInfoToggle"
		clickable lua "createCharScreen:IsHighLevelAbilitiesButtonClickable()"
		action
		"
			createCharScreen:OnHighLevelAbilitiesButtonClick()
		"
	}
	button
	{
		--on escape
		area 194 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		clickable lua "isChargenProficienciesBackButtonClickable()"
		action "createCharScreen:OnCancelButtonClick();"
	}
	--if(string.find(string.lower(text),string.lower(journalSearchString)))
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action 
		"
		
		createCharScreen:OnDoneButtonClick()
		if not characterScreen:IsInGame() and Infinity_GetCurrentScreenName() == 'CHARGEN' then
			createCharScreen:OnMenuButtonClick()
		end
		"
	}
	button
	{
		enabled "not chargen.levelingUp"
		area 650 718 238 44
		bam GUIOSTUR
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}

}
`
function specialistFrame(num)
	if spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[num].key].specialist then
		return 3
	end
	return 0
end
function spellLearnOrUnlearnText()
	if currentChargenChooseMageSpell == nil or not chargen.choose_spell[currentChargenChooseMageSpell].enabled then
		return t("BUTTON_LEARN")
	else
		return t("BUTTON_UNLEARN")
	end
end
function spellLearnOrUnlearnClickable()
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if chargen.extraSpells == 0 and spl ~= nil and spl.enabled == false or spl == nil or spl.known then
		return false
	else
		return true 
	end
end


function chooseSpellOrGeneralHelp()
	local helpText = chargen.helpText
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if spl == nil then
		return helpText
	end

	local desc = spellBook[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenChooseMageSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return helpText
	end
end

function nextOrDone()
	if(createCharScreen:HasMoreMageLevels()) then
		return t('NEXT_BUTTON')
	else
		return t('DONE_BUTTON')
	end
end
function shouldShowSpecialistMessage()
	local ret = false

	if chargen.extraSpells == 0 and not createCharScreen:IsDoneButtonClickable() then
		ret = true
	end

	return ret
end
`
menu
{
	name 'CHARGEN_CHOOSE_SPELLS'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onOpen 
	"
		table.sort(chargen.choose_spell, sortBySpellName)
		currentChargenChooseMageSpell = nil

		if currentChargenKit == nil then
			currentChargenKit = 0
		end

		local currentKitName = ''
		
		--gnome illusionists
		if currentChargenRace ~= 6 and chargen.kit then
			if (#chargen.kit) == 0 or next(chargen.kit) == nil then
				currentKitName = Infinity_FetchString(0)
			else
				currentKitName = Infinity_FetchString(tonumber(chargen.kit[currentChargenKit].name))
			end
		else
			currentKitName = Infinity_FetchString(2862)
		end
		
		if currentKitName == Infinity_FetchString(597) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ABJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(2179) then
			setStringTokenLua('<SCHOOLTOKEN>',t('CONJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(2846) then
			setStringTokenLua('<SCHOOLTOKEN>',t('DIVINATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(2861) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ENCHANTMENT_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(2862) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ILLUSION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(3015) then
			setStringTokenLua('<SCHOOLTOKEN>',t('EVOCATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(12744) then
			setStringTokenLua('<SCHOOLTOKEN>',t('NECROMANCY_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(12745) then
			setStringTokenLua('<SCHOOLTOKEN>',t('TRANSMUTATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(54893) then
			setStringTokenLua('<SCHOOLTOKEN>',Infinity_FetchString(--WILDREP))
		end
	"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 156 1024 612
		mosaic GUISMS
	}
	label
	{
		area 32 170 270 52
		text lua "t(chargen.title) .. ': ' .. t('LEVEL_LABEL') .. ' ' .. chargen.currentSpellLevelChoice"
		text style "title"
	}
	list
	{
		column
		{
			width 16

			label
			{
				bam GUIPFC
				area 4 19 16 16
				align center center
				enabled "chargen.choose_spell[rowNumber].enabled or chargen.choose_spell[rowNumber].known"
			}
			label
			{
				bam GUIBTBUT
				area 20 0 52 52 
				align center center
				frame lua "specialistFrame(rowNumber)"
			}
			label
			{
				area 20 0 52 52
				greyscale lua "chargen.choose_spell[rowNumber].enabled == false"
				bam lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				align center center
			}
		}
		column
		{
			width 84
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name)"
				text style "normal"

				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
				
			}
		}

		scrollbar	'GUISCRC'
		rowheight 52
		area 32 244 492 376
		table "chargen.choose_spell"
		var currentChargenChooseMageSpell
		action "
			if cellNumber == 1 and not chargen.choose_spell[currentChargenChooseMageSpell].known then
				createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)
			end
		"
	}
	text
	{
		area 580 196 406 334
		text lua "chooseSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}

	label
	{
		area 316 174 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 484 174 36 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}
	label
	{
		area 598 568 360 40
		enabled "shouldShowSpecialistMessage()"
		text lua "t('SPECIALIST_SPELL_REQ')"
		text style "normal"
		text align center center
		rectangle 0
	}

	button
	{
		area 566 636 206 44
		bam GUIOSTUM
		text lua "spellLearnOrUnlearnText()"
		text style "button"
		clickable lua "spellLearnOrUnlearnClickable()"
		action "createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)"
	}

	button
	{
		--on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		clickable lua "not chargen.levelingUp"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`

function mageMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizeMageSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = mageSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenMemorizeMageSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return Infinity_FetchString(17253)
	end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_MAGE'
	offset 15 0 --offset 178 0
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByMageSpellName)
		currentChargenMemorizeMageSpell = nil
		"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 156 1024 612
		mosaic GUISMS
	}
	label
	{
		area 32 170 270 52
		text lua "chargen.title"
		text style "title"
	}
	list
	{
		column
		{
			width 12

			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				frame lua "specialistFrame(rowNumber)"
				count lua "chargen.choose_spell[rowNumber].count"
			}
		}
		column
		{
			width 68
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name)"
				text style "normal"

				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
				
			}
		}
		column
		{
			width 10
			label
			{
				area 0 4 45 42
				bam GUIOSW
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 10
			label
			{
				area 0 4 45 42
				bam GUIOSW
				frame lua "currentCellCheck(4)"
				sequence 1

			}
		}


		scrollbar	'GUISCRC'
		rowheight 52
		area 34 248 492 370
		table "chargen.choose_spell"
		var currentChargenMemorizeMageSpell
		action "
			if cellNumber == 3 then
				createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, 1)
			elseif cellNumber == 4 then
				createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, -1)
			end
			cellNumber = nil
		"
	}
	text
	{
		area 580 196 404 334
		text lua "mageMemorizeSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}

	label
	{
		area 316 174 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 484 174 36 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}

	button
	{
		--on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text lua "nextOrDone()"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}

}
`

function priestMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizePriestSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = priestSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenMemorizePriestSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return Infinity_FetchString(17253)
	end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_PRIEST'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByPriestSpellName)
		currentChargenMemorizePriestSpell = nil
		"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 156 1024 612
		mosaic GUISMS
	}
	label
	{
		area 32 170 270 52
		text lua "chargen.title"
		text style "title"
	}
	list
	{
		column
		{
			width 12

			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				frame 0
				count lua "chargen.choose_spell[rowNumber].count"
			}
		}
		column
		{
			width 68
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name)"
				text style "normal"

				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
				
			}
		}
		column
		{
			width 10
			label
			{
				area 0 4 45 42
				bam GUIOSW
				sequence 0
			}
		}
		column
		{
			width 10
			label
			{
				area 0 4 45 42
				bam GUIOSW
				sequence 1

			}
		}


		scrollbar	'GUISCRC'
		rowheight 52
		area 34 246 492 374
		table "chargen.choose_spell"
		var currentChargenMemorizePriestSpell
		action "
			if cellNumber == 3 then
				createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, 1)
			elseif cellNumber == 4 then
				createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, -1)
			end
		"
	}
	text
	{
		area 572 190 420 346
		text lua "priestMemorizeSpellOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}

	label
	{
		area 316 174 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 484 174 36 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}

	button
	{
		--on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text lua "nextOrDone()"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}

}
`
currentChargenCustomSound = 0

`
menu
{
	name 'CHARGEN_CUSTOMSOUNDS'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onOpen
	"
	if Infinity_IsMenuOnStack('CHARACTER_SELECT') then
		Infinity_PopMenu('CHARACTER_SELECT')
	end
	"
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 162 1024 606
		mosaic 'GU3MPB'
	}
	label
	{
		area	24 174 408 44
		text	"SOUND_TITLE"
		text style	title
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 384 18
				text lua "getFileNameStringRef(rowNumber, chargen.customSound)"
				text style	"list"
				pad 8 0 0 0
			}
		}
		area 20 242 412 362
		rowheight	18
		table		"chargen.customSound"
		var			"currentChargenCustomSound"
		scrollbar	'GUISCRC'
		action
		"
			createCharScreen:OnSoundItemSelect(currentChargenCustomSound-1)
		"
	}
	text
	{
		area 492 198 492 398
		text "SOUND_DESCRIPTION"
		scrollbar 'GUISCRC'
		text style	normal
	}
	button
	{
		area 82 624 300 44
		bam GUIOSTCL
		text "PLAY_SOUND_BUTTON"
		text style "button"
		action "createCharScreen:OnPlayButtonClick()"
	}
	button
	{
		--on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}
}

`
function hatedRaceOrGeneralHelp()
	race = chargen.hatedRace[currentChargenHatedRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17256)
	end
end
`
menu
{
	name 'CHARGEN_HATEDRACE'
	offset 15 0 --offset 178 0
	align center center
	ignoreesc
	label
	{
		area 0 0 1024 768
		mosaic 'GUICGB'
		enabled "CurrentlyInGame()"
	}
	label
	{
		area 0 159 1024 609
		mosaic GUISMF
	}
	label
	{
		area 18 164 338 44
		text "HATED_RACE_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 44
				text lua "Infinity_FetchString(chargen.hatedRace[rowNumber].name)"
				text style "list"
				pad 8 0 0 0
				
			}
		}
		action "
			if chargen.hatedRace[currentChargenHatedRace] then
				createCharScreen:OnRacialEnemySelectButtonClick(chargen.hatedRace[currentChargenHatedRace].id)
			end
			"
		rowheight 44
		area 24 224 332 382
		table "chargen.hatedRace"
		var currentChargenHatedRace
		scrollbar	'GUISCRC'
	}
	text
	{
		area 414 184 574 412
		text lua "hatedRaceOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		--on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick(); createCharScreen:OnMenuButtonClick()"
	}

}
`
charNameEdit = ""
`
menu
{
	name 'CHARGEN_NAME'
	modal
	align center center
	ignoreesc
	onopen 
	"
		if chargen.name then
			charNameEdit = chargen.name
		else
			charNameEdit = ''
		end
		Infinity_FocusTextEdit('charNameEditArea')
	"
	label
	{
		area 0 0 406 415
		mosaic 'GUIERR'

	}
	label
	{
		area 66 46 272 44
		text "NAME_LABEL"
		text style "button"
	}
	
	label
	{
		area 72 108 256 34
		fill            112 111 111 64
	}
	edit
	{
		name		"charNameEditArea"
		area		78 114 244 24
		var			charNameEdit
		text style	"edit"
		maxlines	1
		maxchars	20
	}
	button
	{
		--on escape
		area 52 216 302 44
		bam GUIOSTCL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 52 266 302 44
		bam GUIOSTCL
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}

}
`
createBioEdit = ""
`
menu
{
	name 'CHARGEN_BIO'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onopen
	"
		generateBioText()
		if bioRace == '' then
			createBioEdit = bioClass
		else
			createBioEdit = bioClass .. '\n\n' .. bioRace
		end
	"
	label
	{
		area 0 154 1024 614
		mosaic 'GUIMPB'
	}
	label
	{
		area 34 172 968 52
		text "BIOGRAPHY_TITLE"
		text style "title"
	}
	edit
	{
		name		"createBioEditArea"
		area		34 254 944 338
		var			createBioEdit
		scrollbar	'GUISCRC'
		text style	"edit"
	}
	button
	{
		--on escape
		area 192 718 232 44
		text "BACK_BUTTON"
		text style "button"
		bam GUIOSTUL
		action "createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		area 438 718 206 44
		text "CLEAR_BUTTON"
		text style "button"
		bam GUIOSTUM
		action "createBioEdit = ''"
	}
	button
	{
		--on return
		area 650 718 238 44
		text "DONE_BUTTON"
		text style "button"
		bam GUIOSTUR
		action "createCharScreen:OnDoneButtonClick()"
	}

}
`
list_GUICG_20_2_idx = 0
function NextOrDone()
	if createCharScreen:GetImportState() == 1 then
		return t("NEXT_BUTTON")
	else
		return t("DONE_BUTTON")
	end
end
`
menu
{
	name 'CHARGEN_IMPORT'
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onOpen
	"
		list_GUICG_20_2_idx = 0
	"
	label
	{
		area 0 156 1024 612
		mosaic 'GUISMDA'
	}
	label
	{
		area 34 172 488 52
		text "IMPORT_TITLE"
		text style "title"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUICG_20_2[rowNumber]"
				text style "list"
				pad 8 0 0 0
			}
		}
		area 22 244 508 424
		rowheight	34
		table		"list_GUICG_20_2"
		var			"list_GUICG_20_2_idx"
		scrollbar	'GUISCRC'
		action
		"
			Infinity_OnCharacterImportItemSelect(list_GUICG_20_2_idx - 1)
		"
	}
	text
	{
		area 574 190 418 412
		text 10963
		text style normal
		scrollbar 'GUISCRC'
	}
	button
	{
		--on escape
		area 192 718 232 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text lua "NextOrDone()"
		text style "button"
		clickable lua "list_GUICG_20_2_idx ~= 0"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnDoneButtonClick();
		createCharScreen:OnMenuButtonClick()"
	}

}

`
chargenExportCharacterEdit = ""
list_GUICG_21_2_idx = 0
`
menu
{
	name 'CHARGEN_EXPORT'
	modal
	align center center
	ignoreesc
	onopen "chargenExportListId = 0"
	label
	{
		area 0 162 1024 606
		mosaic 'GU3MPB'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "list_GUICG_21_2[rowNumber]"
				text style "list"
				pad 8 0 0 0
			}
		}
		area 22 244 410 360
		rowheight	18
		table		"list_GUICG_21_2"
		var			"chargenExportListId"
		scrollbar	'GUISCRC'
		action
		"
			createCharScreen:OnCharacterExportItemSelect(chargenExportListId - 1)
		"
	}
	text
	{
		area 484 192 506 412
		text 10962
		text style "normal"

	}
	label
	{
		area		82 624 298 23
		text		"EXPORT_FILENAME_LABEL"
		text style	"label"
		text color 3
	}
	edit
	{
		name		"chargenExportCharacterEditArea"
		area		82 642 298 26
		var			chargenExportCharacterEdit
		text style	"edit"
		maxlines	1
	}
	button
	{
		--on escape
		area 198 718 234 44
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		--on return
		area 438 718 206 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnDoneButtonClick()"
	}
	
}
menu
{
	name 'CHARGEN_DUALCLASS'
	align center center
	ignoreesc
	label
	{
		area 0 0 864 710
		mosaic guidcx
	}
	label
	{
		area 82 10 700 44
		text "DUALCLASS_TITLE"
		text style "title"
	}
	label
	{
		area 62 124 363 37
		text lua "characters[currentID].name"
		text style "label"
	}
	label
	{
		area 459 124 363 37
		text lua "characters[currentID].class"
		text style "label"
	}
	label
	{
		area 136 191 177 243
		bitmap		lua "characters[currentID].portrait"
	}
	text
	{
		area 481 194 336 407
		text 10811 --dual class info
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		area 90 495 303 49
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_CLASS"
		bam GUIOSTCL
		text "CLASS_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 90 544 303 49
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_PROFICIENCIES"
		bam GUIOSTCL
		text "SKILLS_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 464 653 236 44
		bam GUIOSTUR
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_DONE"
		text "DONE_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 210 653 236 44
		clickable false
		bam GUIOSTUL
		text "BACK_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnCancelButtonClick()
		"
	}
}
`
difficulties = 
{
	{name = "DIFFICULTY_LABEL_STORYMODE", 		description = "DIFFICULTY_DESCRIPTION_STORYMODE_BG2EE"},
	{name = "DIFFICULTY_LABEL_EASY", 			description = "DIFFICULTY_DESCRIPTION_EASY_BG2EE"},
	{name = "DIFFICULTY_LABEL_NORMAL", 			description = "DIFFICULTY_DESCRIPTION_NORMAL_BG2EE"},
	{name = "DIFFICULTY_LABEL_CORERULES", 		description = "DIFFICULTY_DESCRIPTION_CORERULES_BG2EE"},
	{name = "DIFFICULTY_LABEL_HARD", 			description = "DIFFICULTY_DESCRIPTION_HARD_BG2EE"},
	{name = "DIFFICULTY_LABEL_INSANE", 			description = "DIFFICULTY_DESCRIPTION_INSANE_BG2EE"},
	{name = "DIFFICULTY_LABEL_LEGACYOFBHAAL", 	description = "DIFFICULTY_DESCRIPTION_LEGACYOFBHAAL_BG2EE"},
}
fromSinglePlayer = false
fromMultiPlayer = false
function WhoYouGonnaCall()	
	--singleplayer or import
	fromSinglePlayer = (createCharScreen:GetEngineState() == 1 or createCharScreen:GetEngineState() == 7) and multiplayerScreen:GetEngineState() ~= 1
end
`
menu
{
	name 'CHARGEN_DIFFICULTY' --chargen difficulty
	align center center
	offset 15 0 --offset 178 0
	ignoreesc
	onopen 
	"
		currentDifficulty = 3
		WhoYouGonnaCall()
	"
	label
	{
		mosaic GUICREDT
		area 0 0 1024 768
	}
	label
	{
		area 30 6 966 50
		text "DIFFICULTY_LABEL"
		text style "title"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 10 15 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 1"
				frame lua "0"
				align bottom center
			}
			label
			{
				area 10 20 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 2"
				frame lua "1"
				align bottom center
			}
			label
			{
				area 10 30 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 3"
				frame lua "2"
				align bottom center
			}
			label
			{
				area 10 25 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 4"
				frame lua "3"
				align bottom center
			}
			label
			{
				area 10 20 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 5"
				frame lua "4"
				align bottom center
			}
			label
			{
				area 10 25 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 6"
				frame lua "5"
				align bottom center
			}
			label
			{
				area 10 25 60 60
				scaleToClip
				bam "GUIDIFFS"
				enabled "rowNumber == 7"
				frame lua "6"
				align bottom center
			}
		}
		area 48 84 90 602
		rowheight	dynamic
		hidehighlight
		table		"difficulties"
		var			"currentDifficulty"
		scrollbar	'GUISCRC'
		action
		"
		"
	}
	
	list
	{
		column 
		{ 
			width 18
			label
			{
				area 0 0 -1 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text align center center
				text color	B
			}
		}
		column 
		{ 
			width 82
			label
			{
				area 0 0 -1 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "label"
				text point	12
				text align left center
				text color	B
			}
		}
		column
		{
			width 1
			label
			{
				area 0 0 -1 -1
				pad 10 70 0 0
				text lua "t('CS_')"
			}
		}
		area 134 84 850 602
		rowheight	dynamic
		table		"difficulties"
		var			"currentDifficulty"
		scrollbar	'GUISCRC'
		action
		"
		"
	}
	button
	{
		on escape
		area 276 712 232 44
		bam GUIOSTUL
		text 15416
		text style "button"
		action 
		"
			if(createCharScreen:GetEngineState() == 7) then
				--if create char is in import mode, kick us back to the start screen.
				e:SelectEngine(startEngine)
			end
			Infinity_PopMenu()
		"
	}
	button
	{
		area 530 712 238 44
		bam GUIOSTUR
		text lua "t('VENTURE_FORTH')"
		text style "button"
		enabled "fromSinglePlayer"
		action 
		"	
			Infinity_PopMenu('CHARGEN_DIFFICULTY')
			createCharScreen:AcceptCharacter(currentDifficulty)
		"
	}
	button
	{
		area 530 712 238 44
		bam GUIOSTUR
		text 11973
		text style "button"
		enabled "fromMultiPlayer"
		action 
		"
			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			fromMultiPlayer = false
			mulitplayerPreexistingDifficulty = currentDifficulty
			connectionScreen:OnNewGameButtonClick()
			Infinity_PopMenu()
		"
	}
}
`
currentHLASelection = nil
function chargenHLADescription()
	if currentHLASelection == nil then
		return 63817
	else
		return chargen.HLAs[currentHLASelection].description
	end
end
function chargenHLAPlusMinusFrame(cell, rownumber)
	if cell == 3 then
		if chargen.HLAs[rownumber].canAdd then
			return currentCellCheck(cell)
		else
			return 3
		end
	elseif cell == 4 then
		if chargen.HLAs[rownumber].canSubtract then
			return currentCellCheck(cell)
		else
			return 3
		end
	end
end
`
menu
{
	name 'CHARGEN_HIGH_LEVEL_ABILITIES'
	align center center
	ignoreesc
	modal
	onOpen 
	"
		currentHLASelection = nil
	"
	label
	{
		area 0 0 864 710
		mosaic GUIHSBS
	}
	label
	{
		area 74 10 716 52
		text "HIGH_LEVEL_ABILITIES_TITLE"
		text style "title"
	}
	label
	{
		area 36 114 448 52
		text lua "chargen.numHLAs"
		text style "title"
	}
	text
	{
		area 522 118 302 494
		text lua "Infinity_FetchString(chargenHLADescription())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	
	list
	{
		column
		{
			width 15

			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "chargen.HLAs[rowNumber].icon"
				glow lua "chargen.HLAs[rowNumber].count > 0"
				count lua "chargen.HLAs[rowNumber].count"
			}
		}
		column
		{
			width 61
			label
			{
				area 4 0 -1 -1
				text lua "Infinity_FetchString(chargen.HLAs[rowNumber].name)"
				text style "normal"
				align left center
				
			}
		}
		column
		{
			width 12
			label
			{
				area 0 4 45 42
				bam GUIOSW
				frame lua "chargenHLAPlusMinusFrame(3, rowNumber)"
				sequence 0
			}
		}
		column
		{
			width 12
			label
			{
				area 0 4 45 42
				bam GUIOSW
				frame lua "chargenHLAPlusMinusFrame(4, rowNumber)"
				sequence 1

			}
		}


		scrollbar	'GUISCRC'
		rowheight 52
		area 58 194 404 404
		table "chargen.HLAs"
		var currentHLASelection
		action 
		"
			if cellNumber == 3 and chargenHLAPlusMinusFrame(3, currentHLASelection) ~= 3 then
				createCharScreen:OnHLAButtonClick(currentHLASelection, 1)
			elseif cellNumber == 4 and chargenHLAPlusMinusFrame(4, currentHLASelection) ~= 3 then
				createCharScreen:OnHLAButtonClick(currentHLASelection, -1)
			end
			cellNumber = nil
		"
	}
	button
	{
		area 210 652 238 44
		bam GUIOSTUL
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action 
		"
			createCharScreen:OnDoneButtonClick()
		"
	}
}

`
TEXT_popup_big = 0
`
menu
{
	name 'POPUP_BIG'
	align center center
	modal
	label
	{
		area 0 0 512 651
		mosaic GUICONNB
	}
	text
	{
		area 82 64 338 452
		text lua "Infinity_FetchString(TEXT_popup_big)"
		text style	"label"
		text align left top
		scrollbar 'GUISCRC'
	}
	button
	{
		area 148 530 204 44
		bam GUIOSTUM
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
		"
	}
}


`
list_GUIMOVIE_0_0_idx = 0
`
menu
{
	name 'MOVIES'
	align center center
	onOpen
	"
		if Infinity_IsMenuOnStack('OPTIONS_GAMEPLAY') then
			Infinity_PopMenu('OPTIONS_GAMEPLAY')
		end
	"

	label
	{
		area 0 0 1024 768
		mosaic "GUIMOVB"
	}
	label
	{
		area 318 136 390 44
		text "MOVIES_TITLE"
		text style "title"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 384 18
				text lua "list_GUIMOVIE_0_0[rowNumber].description"
				text style	"list"
				text align left center
			}
		}
		area 318 184 390 270
		rowheight	18
		table		"list_GUIMOVIE_0_0"
		var		"list_GUIMOVIE_0_0_idx"
		scrollbar	'GUISCRC'
		action
		"
			moviesScreen:OnMovieItemSelect(list_GUIMOVIE_0_0[list_GUIMOVIE_0_0_idx].movieCode)
		"
	}
	button
	{
		area 366 486 300 44
		bam GUIOSTCL
		text "PLAY_MOVIE_BUTTON"
		text style "button"
		action "moviesScreen:OnPlayButtonClick()"
	}
	button
	{
		area 366 540 300 44
		bam GUIOSTCL
		text "CREDITS_BUTTON"
		text style "button"
		action "moviesScreen:OnCreditsButtonClick()"
	}
	button
	{
		area 418 602 204 44
		bam GUIOSTLM
		text "DONE_BUTTON"
		text style "button"
		on escape
		action
		"
			Infinity_PopMenu('MOVIES')
			moviesScreen:OnDoneButtonClick()

			 if e:GetActiveEngine() == worldScreen then
                e:SelectEngine(optionsScreen)
				Infinity_PushMenu('OPTIONS_GAMEPLAY')
            else
				optionsScreen:SetEngineState(1)
				startEngine:OnOptionsButtonClick()
				Infinity_PushMenu('OPTIONS_GAMEPLAY')
            end
		"
	}
}
`
--Multiplayer start.
mp_shownSessions = {}
selectedMp = 0
detailsStr = ""
passwordReq = 0
passwordMp = ""
connectionPlayerNameEdit = ""
connectionFilterNoPasswords = 0
connectionFilterNoFullGames = 0
selectedIndex = 0
connectionIsHosting = false

function connectionBuildGameList()
	local index = 1
	local count = 0
	local entryOK = true
	local foundSelected = false

	for index = 1, #(mp_sessions), 1 do
		entryOK = true
		Infinity_GetPasswordRequired(index)
		if mp_sessions[index] == nil then
			entryOK = false
		elseif mp_sessions[index]["flags"] == nil then
			entryOK = false
		elseif connectionFilterNoPasswords == 1 and passwordReq ~= 0 then
			entryOK = false
		elseif connectionFilterNoFullGames == 1 and mp_sessions[index]["players"] == 6 then 
			entryOK = false
		end

		if entryOK == true then
			count = count + 1
			mp_shownSessions[count] = {}
			mp_shownSessions[count]["actualIndex"] = index
			mp_shownSessions[count]["updated_at"] = mp_sessions[index]["updated_at"]

			if mp_sessions[index]['sessionIDString'] == selectedIndex then
				selectedMp = count
				foundSelected = true
			end
		end
	end

	local tableCount = #(mp_shownSessions) 
	while tableCount > count do
		mp_shownSessions[tableCount] = nil
		tableCount = tableCount - 1
	end

	if foundSelected == false then
		selectedMp = 0
	end
end
function chooseNetworkProtocol(num)
	connectionScreen:SelectServiceProvider(num)
end
function joinGameEnabled()
	if selectedMp <= 0 or mp_shownSessions[selectedMp]['actualIndex'] == nil then
		return 0
	else
		return 1
	end
end
function gameHasPassword(slot)
	if(mp_sessions[mp_shownSessions[slot]["actualIndex"]] == nil) then
		--if the session isn't loaded don't show anything.
		return ""
	end
	Infinity_GetPasswordRequired(mp_shownSessions[slot]["actualIndex"])
	if passwordReq ~= 0 then 
		ret = t('MP_JOIN_NOT')
	else
		ret = t('MP_JOIN_ABLE')
	end
	return ret
end
function connectionGetGameName(slot)
	ret = ""

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['name']

	return ret
end
function connectionGetNumPlayers(slot)
	ret = 0

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['players']

	return ret
end
function connectionGetGameType(slot)
	ret = ""

	--if mp_sessions[mp_shownSessions[slot]["actualIndex"]] ~= nil then
	--	if mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bg2ee-main" then
	--		ret = t("MAIN_GAME_BG2_LABEL")
	--	elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bg2ee-bp" then
	--		ret = t("ARENA_MODE_BG2_LABEL")
	--	elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bg2ee-tob" then
	--		ret = t("EXPANSION_BG2_LABEL")
	--	end
	--end
	
	if mp_sessions[mp_shownSessions[slot]["actualIndex"]] ~= nil then
		if mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-main" then
			ret = t("MAIN_GAME_LABEL")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-bp" then
			ret = t("ARENA_MODE_LABEL")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bgee-sod" then
			ret = t("EXPANSION_LABEL")
		end
	end

	return ret
end
function matchMultiplayerGameType(gameVersion)
	if gameVersion == "bgee-main" then
		startEngine:OnCampaignButtonClick('BG1',false)
		e:CheckGUISong()
	elseif gameVersion == "bgee-bp" then
		startEngine:OnCampaignButtonClick('BP1',false)
		e:CheckGUISong()
	elseif gameVersion == "bgee-sod" then
		startEngine:OnCampaignButtonClick('SOD',false)
		e:CheckGUISong()
	elseif gameVersion == "bg2ee-main" then
		startEngine:OnCampaignButtonClick('SOA',false)
		e:CheckGUISong()
	elseif gameVersion == "bg2ee-bp" then
		startEngine:OnCampaignButtonClick('BP2',false)
		e:CheckGUISong()
	elseif gameVersion == "bg2ee-tob" then
		startEngine:OnCampaignButtonClick('TOB',false)
		e:CheckGUISong()
	end
end

mpSearchOverlay = ""
function mpListContainsSearchString(rowNumber) 
	
	if(mpSearchOverlay == nil or mpSearchOverlay == "") then return 1 end --no search string, do nothing
	
	local text = connectionGetGameName(rowNumber)
	if(string.find(string.lower(text),string.lower(mpSearchOverlay))) then
		return 1
	else
		return nil --does not contain search string
	end
end

function B3CalcEnabledRowNumC(visibleRowNum)
    local currentVisibleRow = 0
    for i = 1, #mp_shownSessions, 1 do
        if mpListContainsSearchString(i) then
            currentVisibleRow = currentVisibleRow + 1
            if currentVisibleRow == visibleRowNum then
                return i
            end
        end
    end
    return -1
end 

`
menu
{
	name 'CONNECTION' --connection menu
	offset 15 0 --offset 178 0
	align center center
	ignoreEsc

	onOpen
	"
		Infinity_SetOverlay('OVERLAY_MAIN')
		connectionFilterNoPasswords = 0
		connectionFilterNoFullGames = 0
		connectionIsHosting = false
		connectionBuildGameList()

		--if connectionPlayerNameEdit == '' then
		--	connectionSetDefaultGameSettings()
		--end
		Infinity_SetBackground('BACKGROUND') 
		connectionSessionPasswordEdit = Infinity_GetINIString('Multiplayer','Session Password','')
	"
	onClose
	"
	mpSearchOverlay=''
	if selectedIndex ~= 0 or mpSearched ~= 0 then
		selectedIndex = 0
		mpSearched = 0
	end
	"
	
	label -- clears search fields and is only active when text is there
	{
	area 0 0 50 50
	enabled "mpSearchOverlay ~= '' or Infinity_TextEditHasFocus('mpSearch')"
	on escape
	action
	"
			mpSearchOverlay=''
			if selectedMp ~= 0 or selectedIndex ~= 0 then
				selectedMp = 0
				selectedIndex = 0
			end
			Infinity_FocusTextEdit('mpSearch')
			Infinity_FocusTextEdit('')
	"
	}
	label -- Background
	{
		area 0 0 1024 768
		mosaic 'GUICREDT'
	}
	label -- Title
	{
		area 174 12 700 40
		text "MULTIPLAYER_BUTTON"
		text style title
	}
	label
	{
		area 30 280 186 24
		text lua "t('GAME_NAME_LABEL')"
		text style "title"
		align center center
		text color H
	}
--	label
--	{
--		area 576 196 84 24
--		text lua "t('PASSWORD_LABEL')"
--		text style "label_parchment"
--		align center center
--		text color 3
--	}
	label
	{
		area 600 280 186 24
		text lua "t('PLAYERS_LABEL')"
		text style "title"
		text upper
		align center center
		text color H
	}
	label
	{
		area 745 280 186 24
		text lua "t('GAME_TYPE_LABEL')"
		text style "title"
		align center center
		text color H
	}
	list -- Multiplayer sessions
	{
		column 
		{ 
			width 60 
			label
			{
				enabled	"mpListContainsSearchString(rowNumber)"
				area 20 0 500 40
				text lua "connectionGetGameName(rowNumber)"
				text style	"list_parchment"
				align left center
				text color 3
			}

		}
		column 
		{ 
			width 10 
			label
			{
				enabled	"mpListContainsSearchString(rowNumber)"
				area 70 3 210 40
				text lua "gameHasPassword(rowNumber)"
				text style	"normal"
				align left center
				text point 16
				text color H
				text useFontZoom 0
			}

		}
		column 
		{ 
			width 10 
			label
			{
				enabled	"mpListContainsSearchString(rowNumber)"
				area 20 0 210 40
				text lua "connectionGetNumPlayers(rowNumber)"
				text style	"list_parchment"
				align left center
				text point 16
				text color H
			}

		}
		column 
		{ 
			width 20 
			label
			{
				enabled	"mpListContainsSearchString(rowNumber)"
				area 20 0 210 40
				text lua "connectionGetGameType(rowNumber)"
				text style	"list_parchment"
				align left center 
				text color 3
			}

		}

		name "gameList"
		rowheight dynamic
		area 72 310 882 315
		table		"mp_shownSessions"
		var			selectedMp
		scrollbar	'GUISCRC'
		action
		"
			selectedIndex = mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['sessionIDString']
		"
		actionDbl
		"
			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if string.find(connectionPlayerNameEdit, '%S') == nil then
				Infinity_PushMenu('CONNECTION_NAME')
			elseif passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"
	}

	edit
	{
		name		"playerName"
		area		345 98 340 45
		var			connectionPlayerNameEdit
		placeholder "PLAYER_NAME"
		text style	"edit"
		text align  center center
		text point 14
		text UseFontZoom 0
		maxlines 1
		fill 		112 111 111 64
	}
	edit
	{
		--name		"connectionSessionNameEditArea"
		area		345 152 340 45
		var			connectionSessionNameEdit
		placeholder "SESSION_NAME"
		text 		style	"edit"
		text point 14
		text UseFontZoom 0
		text 		align center center
		maxlines	1
		fill        112 111 111 64
	}
	edit
	{
		--name		"connectionSessionPasswordEditArea"
		area		345 206 340 45
		var			connectionSessionPasswordEdit
		placeholder "MP_GAME_PASSWORD"
		text 		style "edit"
		text 		align center center
		text point 14
		text UseFontZoom 0
		maxlines	1
		--enabled 	connectionPasswordProtected
		fill        112 111 111 64
	}
	
	edit
	{
		name "mpSearch"
		area 150 630 406 35
		var mpSearchOverlay
		placeholder "GAME_SEARCH"
		text style "edit"
		text align left bottom
		maxlines 1
		fill 122 111 111 64
		action
		"
			if (key_pressed == 13) then
				selectedMp = B3CalcEnabledRowNumC(1)
				selectedIndex = mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['sessionIDString']
				Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
				mpSearched = 1
				if string.find(connectionPlayerNameEdit, '%S') == nil then
					Infinity_PushMenu('CONNECTION_NAME')
				elseif passwordReq == 0 then
					Infinity_PopMenu(); 
					Infinity_PopMenu(); 
					mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
					Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
				else
					Infinity_PushMenu('CONNECTION_PASSWORD')
				end
			else
				return 1
			end
		"	
		--EXTEXT8
	}

	label -- filter options
	{
		area		645 626 50 50
		text		style 'normal'
		text		"CONNECTION_NOT_PASSWORD_PROTECTED_LABEL"
		text point 16
		text color H
		align 		center center
		--tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
		--tooltip lua "t('+')"
	}
	button
	{
		area		690 630 45 45
		bam 		ROUNDBUT
		glow lua	"connectionFilterNoPasswords"
		align 		center center
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
		action
		"
			connectionFilterNoPasswords = 1 - connectionFilterNoPasswords
			connectionBuildGameList()
		"
	}
	
--	button
--	{
--		area		715 225 45 45
--		bam 		ROUNDBUT
--		glow lua	"connectionFilterNoFullGames"
--		align 		center center
--		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
--		action
--		"
--			connectionFilterNoFullGames = 1 - connectionFilterNoFullGames
--			connectionBuildGameList()
--		"
--	}
	button -- create game
	{
		clickable lua 	"connectionCreateGameClickable()"
		area			55 130 206 44
		bam				'GUIMPLGC'	
		text style		"button"
		text			"CREATEGAME_BUTTON"
		--tooltip lua 	"t('Creates a new game.')"
		action		
		"
			local stringStart = string.find(connectionPlayerNameEdit, '%S');
			connectionPlayerNameEdit = string.sub(connectionPlayerNameEdit, stringStart, string.len(connectionPlayerNameEdit))
			stringStart = string.find(connectionSessionNameEdit, '%S');
			connectionSessionNameEdit = string.sub(connectionSessionNameEdit, stringStart, string.len(connectionSessionNameEdit))

			if connectionSessionPasswordEdit ~= '' then
			--if connectionPasswordProtected == 1 then
				stringStart = string.find(connectionSessionPasswordEdit, '%S');
				connectionSessionPasswordEdit = string.sub(connectionSessionPasswordEdit, stringStart, string.len(connectionSessionPasswordEdit))
			else
			--if connectionPasswordProtected == 0 then
				connectionSessionPasswordEdit = ''
			end

			--Infinity_PushMenu('CONNECTION_NEWORSAVED')
			fromMultiPlayer = true
			Infinity_PushMenu('CHARGEN_DIFFICULTY')
		"
	}
	button -- quit game
	{
		bam GUIOSTUR
		sequence 0
		area 530 714 236 44
		--pad 10 8 10 8
		text style "button"
		text "QUIT_GAME_BUTTON"
		action 
		"
			Infinity_PopMenu(); connectionScreen:OnMainCancelButtonClick(); startEngine:OnQuitButtonClick()
			removeDeferredOptions()
		"
	}
	text -- local option
	{
		area		745 626 50 50
		text		style 'normal'
		text		"CONNECTION_LOCAL_NETWORK_GAME"
		--tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		text point 16
		text color S
		--text color 
		align 		center center
	}
	button
	{
		area		790 630 45 45
		bam 		ROUNDBUT
		glow lua	"connectionLocalNetworkGame"
		align 		center center
		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		action
		"
			if connectionScreen:HasServiceProvider() then
				connectionLocalNetworkGame = 1 - connectionLocalNetworkGame
			end
		"
	}
	label -- filter options
	{
		area		845 626 50 50
		text		style 'normal'
		--text		"CONNECTION_NOT_PASSWORD_PROTECTED_LABEL"
		text  		"CONNECTION_DIRECT_CONNECTION_BUTTON"
		text point 16
		text color G
		align 		center center
		--tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
		--tooltip lua "t('+')"
	}
	button -- Direct Connect
	{
		area		890 630 45 45
		bam			ROUNDBUT
		--sequence	6
		--text  		"CONNECTION_DIRECT_CONNECTION_BUTTON"
		--text style	"button"
		align center center
		tooltip lua "t('CONNECTION_DIRECT_CONNECT_TOOLTIP')"
		action
		"
			connectionIsHosting = false
			chooseNetworkProtocol(2)
		"	
	}
	button -- refresh
	{
		area		775 174 206 44
		bam 		GUIMPLGC
		--tooltip lua "t('CONNECTION_REFRESH_TOOLTIP')"
		text "REFRESH_LIST"
		text style "button"
		action
		"
			selectedMp = 0
			mp_shownSessions = {}
			mp_sessions = {}
			connectionScreen:ClearSessions()
		"
	}
	button -- loads game
	{
		area		55 174 206 44
		bam			GUIMPLGC
		text style	"button"
		text		"LOAD_BUTTON"
		--text color 3
		--tooltip lua "t('CONNECTION_LOAD_GAME_TOOLTIP')"
		clickable lua 	"connectionCreateGameClickable()"
		action		
		"
			local stringStart = string.find(connectionPlayerNameEdit, '%S');
			connectionPlayerNameEdit = string.sub(connectionPlayerNameEdit, stringStart, string.len(connectionPlayerNameEdit))
			stringStart = string.find(connectionSessionNameEdit, '%S');
			connectionSessionNameEdit = string.sub(connectionSessionNameEdit, stringStart, string.len(connectionSessionNameEdit))

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			connectionScreen:OnLoadGameButtonClick()
		"
	}

	button -- Join game
	{
		area		775 130 206 44
		bam			GUIMPLGC
		--sequence	6
		text  "JOIN_BUTTON"
		text style	"button"
		clickable lua	"joinGameEnabled()"
		action
		"
			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if string.find(connectionPlayerNameEdit, '%S') == nil then
				Infinity_PushMenu('CONNECTION_NAME')
			elseif passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"	
	}
	button -- Back/ Log out
	{
		area		278 714 236 44
		bam			GUIOSTUL
		sequence	0
		text  "BACK_BUTTON"
		text style	"button"
		--on 			escape
		action
		"
				connectionScreen:OnMainCancelButtonClick()
		"	
	}
}
`
connectionTCPIPEdit = ""
`
menu
{
	name 'CONNECTION_IP'
	modal
	align center center

	onopen "Infinity_FocusTextEdit('ConnectionTCPIPEditArea')"
	label
	{
		area 0 0 680 242
		mosaic GUIERR6 
	}
	label --Title
	{
		area 38 20 592 64
		text  20681
		text style	"label"
	}
	button
	{
		area		370 170 234 44
		bam		GUIOSTUR
		sequence	0
		text  "DONE_BUTTON"
		text style	"button"
		on		return
		clickable lua "connectionScreen:IsValidAddress(connectionTCPIPEdit)"
		action
		"
			Infinity_PopMenu();
			connectionScreen:JoinGameIPAddress(connectionTCPIPEdit)
		"	
	}
	button
	{
		area		88 170 234 44
		bam		GUIOSTUL
		sequence	1
		text  "CANCEL_BUTTON"
		text style	"button"
		on 		escape
		action
		"
			Infinity_PopMenu();
			chooseNetworkProtocol(1)
		"	
	}
	
	label
	{
		area 56 84 542 32
		fill 112 111 111 64
	}
	
	edit
	{
		name		"ConnectionTCPIPEditArea"
		area		62 88 532 22
		var		connectionTCPIPEdit
		text style	"edit"
		maxlines	1
	}
}
`
connection = {}
connectionSessionNameEdit = ""
connectionSessionPasswordEdit = ""
connectionPasswordProtected = 0
connectionLocalNetworkGame = 0

function connectionCreateGameClickable()
	local ret = string.find(connectionPlayerNameEdit, '%S') ~= nil and string.find(connectionSessionNameEdit, '%S') ~= nil

	if connectionPasswordProtected == 1 then
		ret = ret and string.find(connectionSessionPasswordEdit, '%S') ~= nil
	end

	return ret
end
function connectionSetDefaultGameSettings() 
	local player = t("MULTIPLAYER_DEFAULT_PLAYER")
	local game = t("MULTIPLAYER_ENTER_GAME_NAME")
	local pass = t("MULTIPLAYER_ENTER_GAME_PASSWORD")

	if connectionPlayerNameEdit == "" then
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', player)
		Infinity_SetINIValue('Multiplayer', 'Player Name', connectionPlayerNameEdit)
	end

	if connectionSessionPasswordEdit == "" then
		connectionSessionPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', pass)
		Infinity_SetINIValue('Multiplayer', 'Session Password', connectionSessionPasswordEdit)
	end

	if connectionSessionNameEdit == "" then
		connectionSessionNameEdit = Infinity_GetINIString('Multiplayer', 'Session Name', game)
		Infinity_SetINIValue('Multiplayer', 'Session Name', connectionSessionNameEdit)
	end

	if connectionSessionPasswordEdit ~= "" then
		connectionPasswordProtected = 1
	else
		connectionPasswordProtected = 0
	end

	if connectionScreen:HasServiceProvider() then
		connectionLocalNetworkGame = 0
	else
		connectionLocalNetworkGame = 1
	end
end
`
menu
{
	name 'CONNECTION_CREATE'
	align center center
	ignoreEsc
	modal


--	onOpen
--	"
--		connectionSetDefaultGameSettings()
--	"

	onOpen
	"
	Infinity_PopMenu('CONNECTION_CREATE')
	"
	label
	{
	area 0 0 0 0
	}
--	text -- password option
--	{
--		area		179 259 241 45
--		text		style 'label'
--		text		"CONNECTION_PASSWORD_PROTECTED"
--		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
--		align 		left center
--	}
--	button
--	{
--		area		134 259 45 45
--		bam 		ROUNDBUT
--		glow lua	"connectionPasswordProtected"
--		align 		center center
--		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
--		action
--		"
--			connectionPasswordProtected = 1 - connectionPasswordProtected
--			if connectionPasswordProtected == 1 then
--				Infinity_FocusTextEdit('connectionSessionPasswordEditArea')
--			end
--		"
--	}
--
--	text -- local option
--	{
--		area		179 304 241 45
--		text		style 'label'
--		text		"CONNECTION_LOCAL_NETWORK_GAME"
--		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
--		align 		left center
--	}
--	button
--	{
--		area		134 304 45 45
--		bam 		ROUNDBUT
--		glow lua	"connectionLocalNetworkGame"
--		align 		center center
--		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
--		action
--		"
--			if connectionScreen:HasServiceProvider() then
--				connectionLocalNetworkGame = 1 - connectionLocalNetworkGame
--			end
--		"
--	}
}
menu
{
	name 'CONNECTION_NEWORSAVED'
	align center center
	modal
	onOpen
	"
	Infinity_PopMenu('CONNECTION_NEWORSAVED')
	"
	label
	{
	area 0 0 0 0
	}
}
`
connectionPasswordPasswordEdit = ""
`
menu
{
	name 'CONNECTION_PASSWORD'
	align center center
	ignoreEsc
	modal
	onOpen
	"
		if mp_sessions[selectedMp]['name'] == Infinity_GetINIString('Multiplayer', 'Session Name', '') then
			connectionPasswordPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', '')
		else
			connectionPasswordPasswordEdit = ''
		end
		Infinity_FocusTextEdit('connectionPasswordPasswordEditArea')
	"

	label
	{
		area 0 0 660 240
		mosaic "GUIERR6"
	}
	label
	{
		area		12 6 632 45
		text		style 'title'
		text		"PASSWORD_REQUIRED_LABEL"
	}
	label
	{
		area		12 51 632 31
		text		style 'label'
		text		"ENTER_PASSWORD_LABEL"
	}

	edit
	{
		name		"connectionPasswordPasswordEditArea"
		area		12 82 632 50
		var			connectionPasswordPasswordEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
					mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
					Infinity_PopMenu()
					Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area 		416 166 204 44
		bam			'GUIOSTUM'	
		text style	"button"
		text		"DONE_BUTTON"
		clickable lua "connectionPasswordPasswordEdit ~='' and string.find(connectionPasswordPasswordEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
			mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
			Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			if mpSearched == 1 then
				mpSearched = 0
			end
		"
	}

	button
	{
		area 		34 166 204 44
		on esc
		bam			'GUIOSTUM'	
		text style	"button"
		text		"BACK_BUTTON"
		on escape
		action		
		"
			Infinity_PopMenu()
			if mpSearched == 1 then 
				Infinity_FocusTextEdit('mpSearch')
				mpSearched = 0
			end
		"
	}
}
`
connectionNameNameEdit = ""
`
menu
{
	name 'CONNECTION_NAME'
	align center center
	modal
	onOpen
	"
		connectionNameNameEdit = ''
		Infinity_FocusTextEdit('connectionNameNameEditArea')
	"

	label
	{
		area 0 0 660 240
		mosaic "GUIERR6"
	}
	label
	{
		area		12 16 632 70
		text		style 'title'
		text  		"PLAYER_NAME_LABEL"
	}

--	button
--	{
--		bam 		GUIOSW
--		on esc
--		area 		616 0 44 44
--		sequence 	2
--		action 
--		"	
--			Infinity_PopMenu()
--		"
--	}

	edit
	{
		name		"connectionNameNameEditArea"
		area		12 82 632 50
		var			connectionNameNameEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )
					Infinity_PopMenu()

					Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
					if passwordReq == 0 then
						Infinity_PopMenu(); 
						Infinity_PopMenu(); 
						mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
						Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
					else
						Infinity_PushMenu('CONNECTION_PASSWORD')
					end
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area 		416 166 204 44
		bam			'GUIOSTUM'	
		text style	"button"
		text		"DONE_BUTTON"
		clickable lua "connectionNameNameEdit ~='' and string.find(connectionNameNameEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionNameNameEdit, '%S')
			connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )

			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"
	}

	button
	{
		area 		34 166 204 44
		bam			'GUIOSTUM'	
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_PLAYERNAME'
	align center center
	ignoreEsc
	modal

	onOpen
	"
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', 'Player Name')
		Infinity_FocusTextEdit('connectionPlayerNameEditArea')
	"
	label
	{
		area 0 0 512 651
		mosaic "GUICONNB"
	}
	label
	{
		area 83 59 338 32
		text style "label"
		text "CURRENT_PLAYERS_LABEL"
	}
	label
	{
		area 83 446 338 32
		text style "label"
		text "PLAYER_NAME_LABEL"
	}

	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "connection.currentPlayers[rowNumber].name"
				text style "edit"
				align center center
			}
		}

		action 
		"
		"

		rowheight 50
		area 83 99 338 338
		table "connection.currentPlayers"
		var connectionSelectedPlayer
	}

	edit
	{
		name		"connectionPlayerNameEditArea"
		area		110 479 280 35
		var			connectionPlayerNameEdit
		text style	"edit"
		text align  center center
		maxlines	1
		maxchars 	32
	}
	button
	{
		clickable 	lua "connectionPlayerNameEdit ~= ''"
		area		154 538 204 44
		bam			GUIOSTUM
		sequence	0
		text  		"DONE_BUTTON"
		text style	"button"
		on			return
		action
		"
			Infinity_PopMenu();
			Infinity_PopMenu();
			connectionScreen:SetPlayerName(connectionPlayerNameEdit)
		"	
	}
}

menu
{
	name 'CONNECTION_JOINING'
	modal
	align center center

	label
	{
		area 0 0 657 234
		mosaic GUIERR6 
	}
	label --Title
	{
		area 30 20 600 64
		text  20274
		text style	"label"
	}
	button
	{
		area		222 170 230 44
		bam		GUIBUTMT
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}
menu
{
	name 'CONNECTION_ERROR'
	modal
	align center center

	label
	{
		area 0 0 410 420
		mosaic GUIERR
	}
	label --Title
	{
		area 60 100 286 64
		text lua "Infinity_FetchString(CONNECTION_ERROR_MESSAGE)"
		text style	"label"
	}
	button
	{
		area		104 320 202 44
		bam			GUIOSTUM
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		area 0 0 682 234
		mosaic GUIERR6
	}
	label --Title
	{
		area 14 8 628 124
		text "CONNECTION_FINDING_DEVICES"
		text style	"label"
	}
	button
	{
		area 		79 170 234 44
		bam			GUIOSTUL
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on			escape
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			Infinity_PopMenu('CONNECTION');
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
	button
	{
		area 		343 170 234 44
		bam			GUIOSTUR
		sequence	0
		text  		"CONNECTION_LOCAL_NETWORK_GAME"
		text style	"button"
		on			return
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			connectionScreen:StopConnectingToProvider()
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_SERVER'
	modal
	align center center

	label
	{
		area 0 0 408 418
		mosaic GUIERR
	}
	label --Title
	{
		area 70 78 258 84
		text "CONNECTION_WAITING_FOR_SERVER"
		text style	"label"
	}
	button
	{
		area		104 320 202 44
		bam			GUIOSTUM
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_SERVER')
			connectionScreen:CancelJoinGame();
		"	
	}
}
`
function getBackgroundSize() -- backgrounds are movies, cut to short lengths, sized to the screen, in .webm format changed to .wbm, max video size is 1280 by 720, it will just get recaled from a higher res image though
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	Infinity_SetArea('BG1', nil, nil, screenWidth, screenHeight)
	Infinity_SetArea('SOD', nil, nil, screenWidth, screenHeight)
	--Infinity_SetArea('SOA', -200, nil, screenWidth*1.2, screenHeight)
	--Infinity_SetArea('TOB', nil, nil, screenWidth, screenHeight)
	Infinity_SetArea('BP1', nil, nil, screenWidth, screenHeight)
	--Infinity_SetArea('BP2', nil, nil, screenWidth, screenHeight)
	--Infinity_SetArea('TUT', nil, nil, screenWidth, screenHeight)
end
`
menu 
{
	name 'BACKGROUND'  -- game background, background menu
	onOpen 
	"
	Infinity_PlayMovie('BG1','BG1')
	Infinity_PlayMovie('SOD','SOD')
	--Infinity_PlayMovie('SOA','SOA')
	--Infinity_PlayMovie('TOB','TOB')
	Infinity_PlayMovie('BP1','BP1')
	--Infinity_PlayMovie('BP2','BP2')
	--Infinity_PlayMovie('TUT','TUT')
	getBackgroundSize()
	"
	movie
	{
		enabled "currentCampaign == 1"
		name "BG1"
	}
	movie
	{
		enabled "currentCampaign == 2"
		name "SOD"
	}
	--movie
	--{
	--	enabled "currentCampaign == const.START_CAMPAIGN_SOA"
	--	name "SOA"
	--}
	--movie
	--{
	--	enabled "currentCampaign == const.START_CAMPAIGN_TOB"
	--	name "TOB"
	--}
	movie
	{
		enabled "currentCampaign == 3"
		name "BP1"
	}
	--movie
	--{
	--	enabled "currentCampaign == const.START_CAMPAIGN_BP2"
	--	name "BP2"
	--}

	--movie
	--{
	--	enabled "currentCampaign == const.START_CAMPAIGN_TUT"
	--	name "TUT"
	--}		
}
--`
--function getMPBackgroundSize()
--	local screenWidth, screenHeight = Infinity_GetScreenSize()
--	Infinity_SetArea('worldmap', nil, nil, screenWidth, screenHeight)
--end
--`	
--menu
--{
--	name 'BACKGROUND'
--	onOpen
--	"
--	getMPBackgroundSize()
--	"
--	label
--	{
--		area 0 0 3840 2160 
--		mosaic 'worldmap'
--	}
--}


`
multiplayer = {}
mpChatEdit = ""
mpHelpTextString = ""
mpModifyingCharacter = -1
mpErrorText = 0
mpErrorState = 0
text_GUIMP_0_25 = ""
text_GUIMP_0_25_lines = 0
multiplayerInPermission = false
multiplayerInPermissionForPlayer = 0

multiplayerSessionName = ""
multiplayerSaveName = ""
multiplayerChapter = ""
multiplayerTimePlayed = ""
multiplayerDifficultyLabel = ""
multiplayerDifficultyImage = 0
mulitplayerPreexistingDifficulty = 0;

multiplayerLocalPlayerID = 1

multiplayerFromInGame = false

mpaCharacters = 
{
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"}
}

mpaPlayers =
{
	{name = "", id = 0, color = "0x7a7aFF"}, -- color change for displayed names
	{name = "", id = 0, color = "0xFFAF7A"},
	{name = "", id = 0, color = "0x7aFFa3"},
	{name = "", id = 0, color = "0x57F9FF"},
	{name = "", id = 0, color = "0xF2F188"},
	{name = "", id = 0, color = "0xFE97FF"}
}

function updateMultiplayerPlayerSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] == "" and value ~= "" then
		mpaPlayers[slot][setting] = value
		broadcastPlayerAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] ~= "" and value == "" then
		broadcastPlayerRemoved(slot)
		mpaPlayers[slot][setting] = value
	else
		mpaPlayers[slot][setting] = value
	end
end
function updateMultiplayerCharacterSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "color" and mpaCharacters[slot][setting] == "0xffffff" and value ~= "0xffffff" then
		mpaCharacters[slot][setting] = value
		broadcastCharacterAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == false and value == true then
		broadcastCharacterReady(slot)
		mpaCharacters[slot][setting] = value
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == true and value == false then
		broadcastCharacterNotReady(slot)
		mpaCharacters[slot][setting] = value
	else
		mpaCharacters[slot][setting] = value
	end
end

function clearCharacterSlot(slot, announce)
	if announce == true and mpaCharacters[slot]['name'] ~= "" then
		broadcastCharacterRemoved(slot)
	end
	mpaCharacters[slot]['ready'] = false
	mpaCharacters[slot]['name'] = ""
	mpaCharacters[slot]['class'] = ""
	mpaCharacters[slot]['portrait'] = "NOPORTMD"
	mpaCharacters[slot]['inprogress'] = false
	mpaCharacters[slot]['color'] = "0xffffff"
end

function clearPlayerSlot(slot, announce)
	if announce == true and mpaPlayers[slot]["name"] ~= "" then
		broadcastPlayerRemoved(slot)
	end
	mpaPlayers[slot]["name"] = ""
	mpaPlayers[slot]["id"] = 0
end

function getMultiplayerCharacterName(slot, newLine, getClass)
	local ret = ""
	local separator = ", "

	if newLine == true then
		separator = "\n"
	end

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("MULTIPLAYER_CREATE_CHARACTER_MESSAGE")
--	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] and mpaCharacters[slot]["inprogress"] == false then
--		ret = t("MULTIPLAYER_EMPTY_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["inprogress"] == true and mpaCharacters[slot]["class"] == "" then
		setStringTokenLua("<PLAYER_NAME_1>",getMultiplayerPlayerName(mpaCharacters[slot]["player"], false, true))
		setStringTokenLua("<SEPERATOR>",separator)
		ret = t("MULTIPLAYER_CREATING_CHARACTER_MESSAGE")
		removeStringTokenLua("<SEPERATOR>")
		removeStringTokenLua("<PLAYER_NAME_1>")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" then
		ret = "^0xff"..mpaCharacters[slot]["color"]..mpaCharacters[slot]["name"].."^-" --display a name in multiplayer
		if getClass == true then
			ret = ret..separator..mpaCharacters[slot]["class"]
		end
	end

	return ret
end
function getMultiplayerCharacterButtonText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("CREATE_CHAR_BUTTON")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] == "" then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] ~= multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID and multiplayer.allowreformparty == false and multiplayerDifficultyLabel ~= "" then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_EDIT_CHAR_BUTTON")
	end

	return ret
end
function shouldGreyscaleEditButton(slot)
	local ret = false
	local storedString = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")

	if multiplayerFromInGame == true then
		ret = true
	end

	if ret == true and getMultiplayerCharacterButtonText(slot) == storedString  then
		ret = false
	end

	if ret == true and (multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[7] == true) then
		ret = false
	end

	if ret == true and mpaCharacters[slot]["name"] == "" then
		ret = false
	end

	if ret == false and mpaCharacters[slot]['ready'] == true and getMultiplayerCharacterButtonText(slot) ~= storedString and multiplayerFromInGame == false then
		ret = true
	end

	return ret
end
function getMultiplayerCharacterReadyText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and mpaCharacters[slot]["inprogress"] == false then
		ret = ""
	elseif mpaCharacters[slot]["ready"] == false then
		ret = t("MULTIPLAYER_NOT_READY_MESSAGE")
	elseif mpaCharacters[slot]["ready"] == true then
		ret = t("MULTIPLAYER_READY_MESSAGE")
	end

	return ret
end
function getMultiplayerPlayerName(slot,newLine,hostyou)
	local ret = mpaPlayers[slot]["name"]
	if ret ~= "" then
		ret = "^0x"..mpaPlayers[slot]["color"]..mpaPlayers[slot]["name"].."^-"
	end

	local separator = " "
	if newLine == true then
		separator = "\n"
	end

	if hostyou == true then
--		if slot == multiplayerLocalPlayerID then
--			ret = ret..separator.."^0xFFFFFFFF"..t("MULTIPLAYER_PLAYER_YOU").."^-"
--		elseif slot == 1 then
--			ret = ret..separator.."^0xFFFFFFFF"..t("MULTIPLAYER_PLAYER_HOST").."^-"
--		elseif ret == "" then
		if ret == "" then
			ret = "^0xFF9B9B9B"..t("MULTIPLAYER_EMPTY_PLAYER").."^-"
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacter(player,slot)
	local count = 0
	local ret = "" -- need blank square or something, can put .bmp between ""

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if currentMultiplayerSelectPlayer == player and mpDraggedCharacter == index then
			slot = slot + 1
		end

		if count == slot then
			ret = mpaCharacters[index]["portrait"]
			break
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacterSlot(player,slot)
	local count = 0
	local ret = -1

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if count == slot then
			ret = index
			break
		end
	end

	return ret
end

function getPlayerKickWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 0
	else
		return 10
	end
end

function getPlayerNameWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 45
	else
		return 35
	end
end

function getStartGameButtonTooltip()
	if multiplayer.donebuttonclickable then
		return ""
	else
		return t("MULTIPLAYER_CANNOT_START")
	end
end

function updateMultiplayerSessionData(sessionName, saveName, chapter, timePlayed, difficulty)
	local gold = "^0xffc7f8fb"
	multiplayerSessionName = gold..sessionName.."^-"

	if areaName ~= "" then
		multiplayerSaveName = gold..t("MULTIPLAYER_SAVED_GAME_LABEL").."^- ^0xffffffff"..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- ^0xffffffff"..chapter.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_LABEL").."^- ^0xffffffff"..timePlayed.."^-"
		if difficulty > 0 then
			mulitplayerPreexistingDifficulty = difficulty
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^-^0xffffffff"..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	else
		multiplayerSaveName = gold..t("MULTIPLAYER_NEW_GAME_LABEL").."^- ^0xffffffff"..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- ^0xffffffff"..chapter.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_NEW_GAME").."^-"
		if difficulty > 0 then
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^- ^0xffffffff"..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	end
end

function broadcastCharacterControlChange(slot, newPlayer)
	if mpaCharacters[slot]["player"] ~= newPlayer then
		local host = getMultiplayerPlayerName(1,false,false)
		local player = getMultiplayerPlayerName(newPlayer,false,false)
		setStringTokenLua("<PLAYER_NAME_1>",host)
		setStringTokenLua("<PLAYER_NAME_2>",player)
		local message = t("MULTIPLAYER_SLOT_"..slot.."_ASSIGNED_TO")
		removeStringTokenLua("<PLAYER_NAME_1>")
		removeStringTokenLua("<PLAYER_NAME_2>")
		Infinity_SendChatMessage(message, true) 
	end
end

function broadcastCharacterAdded(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_ADDED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterRemoved(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_REMOVED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_READY_TO_START")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterNotReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_NO_LONGER_READY")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerAdded(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_JOINED_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerRemoved(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_LEFT_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

mpDraggedCharacter = nil
mpDraggedPortrait = 'NOCTRL'

function multiplayerStartSwapPortraits(player, character)
	if multiplayerLocalPlayerID == 1 and player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" then
		mpDraggedCharacter = character
		multiplayerScreen:SetModifiedCharacterSlot(character - 1)
		currentMultiplayerSelectPlayer = player
		mpDraggedPortrait = mpaCharacters[character]["portrait"]
	end
end

function multiplayerStopSwapPortraits(player)
	if multiplayerLocalPlayerID == 1 then
		if player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" and currentMultiplayerSelectPlayer ~= nil then
			if mpaCharacters[mpDraggedCharacter]['ready'] == true and mpaCharacters[mpDraggedCharacter]['player'] ~= player then 
				multiplayerScreen:OnReadyButtonClick(mpDraggedCharacter-1)
			end
			broadcastCharacterControlChange(mpDraggedCharacter, player)
			multiplayerScreen:OnPlayerSelection(player-1)
		end
		mpDraggedCharacter = nil
		currentMultiplayerSelectPlayer = nil
		mpDraggedPortrait = 'NOCTRL'
	end
end

function getMultiplayerReadyTooltip(character)
	local ret = ""

	if mpaCharacters[character]["ready"] == true then
		ret = t("MULTIPLAYER_READY_BUTTON_ON_TOOLTIP")
	else
		ret = t("MULTIPLAYER_READY_BUTTON_OFF_TOOLTIP")
	end

	return ret
end

function multiplayerUpdateDraggedPortrait()
	if mpDraggedPortrait ~= 'NOCTRL' and multiplayerLocalPlayerID == 1 then
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		x,y = Infinity_GetMousePosition();
		x = x - 20
		y = y - 30
		Infinity_SetArea('multiplayerDraggingPortraitImage',x,y,w,h)
		return true
	else
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		Infinity_SetArea('multiplayerDraggingPortraitImage',-20,-20,w,h)
		return false
	end
end

function get4CheckFrame(slot)
	local ret = 0

	if mpaCharacters[slot]['ready'] == true and mpaCharacters[slot]['player'] == multiplayerLocalPlayerID then
		ret = 1
	elseif mpaCharacters[slot]['ready'] == true then
		ret = 1
	end

	return ret
end

function mpBGSet()
	if not multiplayerFromInGame and BGmpSet == 1 then
		Infinity_SetBackground('BACKGROUND')
		BGmpSet = 0
	else
		return nil
	end
end

`
menu
{
	name 'MULTIPLAYER' --multiplayer menu
	align center center
	ignoreesc
	onOpen
	"
		existingDifficulty = Infinity_GetOption(12, 8) + 1;
		multiplayerFromInGame = multiplayerScreen:GetEngineState() == 2
		if Infinity_IsMenuOnStack('MULTIPLAYER') then
			Infinity_PopMenu('OVERLAY_ESC')
		end
		mpChatboxScrollToBottom = 1
		BGmpSet = 1
	"
	label 
	{
		area 0 12 1024 773
		mosaic 'y5wmb1'
	}
	label 
	{

		area -16 0 1056 800
		rectangle 4
		rectangle opacity 200
	}
	label 
	{

		area 700 55 340 135
		rectangle 4
		rectangle opacity 200
	}
	label 
	{

		area 700 162 340 135
		rectangle 4
		rectangle opacity 200
	}
	label 
	{

		area 700 269 340 135
		rectangle 4
		rectangle opacity 200
	}
	label 
	{

		area 700 376 340 135
		rectangle 4
		rectangle opacity 200
	}
	label 
	{

		area 700 483 340 135
		rectangle 4
		rectangle opacity 200
	}
	label 
	{

		area 700 590 340 135
		rectangle 4
		rectangle opacity 200
	}	
	label
	{
		area 162 16 700 44
		text "ARBITRATION_TITLE"
		text style "title"
		text color G
	}

	list -- character list
	{
	
		column --character
		{ 
			--width 45
			width 100
			label -- text for characters name and class
			{
				area 		25 20 195 44
				--pad 0 0 0 0
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"label"
				text color G
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label -- text fill when there is no character created
			{
				area 		25 0 195 95
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"label"
				text color G
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) == ''"
			}
			label -- text for create character/edit
			{
				area		25 48 195 44
				text lua 	"getMultiplayerCharacterButtonText(rowNumber)"
				text style 	"button"
			}

		}

		area 				712 68 245 648
		rowheight			108
		table				"mpaCharacters"
		var					selectedCharacter
		scrollbar			'GUISCRC'
		hidehighlight
		action
		"
			if cellNumber == 1 then
				cellNumber = nil
				if getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_VIEW_DETAILS_BUTTON') then
					multiplayerScreen:OnPortraitButtonClick(selectedCharacter-1) --OPENS RECORD PAGE ON CLICK
				end
					
				if getMultiplayerCharacterButtonText(selectedCharacter) == t('CREATE_CHAR_BUTTON') then
					if multiplayerFromInGame == false then --can't make char in game
						multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter-1)
						multiplayerScreen:UpdateModifyCharacterPanel()
					elseif shouldGreyscaleEditButton(selectedCharacter) == false then
						multiplayerScreen:OnModifyButtonClick() -- if char is made, allows deleting first
					end
					
				elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_EDIT_CHAR_BUTTON') then
					mpModifyingCharacter = selectedCharacter - 1
					Infinity_PushMenu('MP_MODIFYCHARACTER')
				elseif shouldGreyscaleEditButton(selectedCharacter) == false then
					multiplayerScreen:OnModifyButtonClick()
				end
				
			elseif cellNumber == 4 then
				cellNumber = nil
			end
		"
		actionAlt
		"
			cellNumber = nil
		"

	}	
	
	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 -1 -1
				pad 0 0 0 0
				--bam 		'GUIRSP10'
				sequence 	1
				align 		center center
			}
			label
			{
				area		0 0 68 103
				bitmap lua	'mpaCharacters[rowNumber]["portrait"]'
				sequence 	1
				align 		center center
			}	
		}


		area 956 71 68 640
		rowheight 107
		table				"mpaCharacters"
		var					selectedCharacter
		hidehighlight
		action
		"
			if Infinity_IsMenuOnStack('OVERLAY_CHARACTER') then
				Infinity_PopMenu('OVERLAY_CHARACTER')
				multiplayerScreen:OnPortraitButtonClick(selectedCharacter-1)
			else
				multiplayerScreen:OnPortraitButtonClick(selectedCharacter-1)
			end
		"
	}
	--ready buttons
	button
	{
		area 903 127 50 35
		bam 		'mprbtn'
		scaleToClip
		sequence lua "get4CheckFrame(1)"
		--glow lua "get4CheckFrame(1)"
		--tooltip lua "getMultiplayerReadyTooltip(1)"
		--align center center
		--bam 		'GUMPBUTX'
		--area 903 127 50 50
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[1]['player'] then
					multiplayerScreen:OnReadyButtonClick(1-1)
				end
			end
		"
	}
	button
	{
		area 903 235 50 35
		bam 		'mprbtn'
		scaleToClip
		sequence lua "get4CheckFrame(2)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[2]['player'] then
					multiplayerScreen:OnReadyButtonClick(2-1)
				end
			end
		"
	}
	button
	{
		area 903 341 50 35
		bam 		'mprbtn'
		scaleToClip
		sequence lua "get4CheckFrame(3)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[3]['player'] then
					multiplayerScreen:OnReadyButtonClick(3-1)
				end
			end
		"
	}
	button
	{
		area 903 448 50 35
		bam 		'mprbtn'
		scaleToClip
		sequence lua "get4CheckFrame(4)"
		--align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[4]['player'] then
					multiplayerScreen:OnReadyButtonClick(4-1)
				end
			end
		"
	}
	button
	{
		area 903 556 50 35
		bam 		'mprbtn'
		scaleToClip
		sequence lua "get4CheckFrame(5)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[5]['player'] then
					multiplayerScreen:OnReadyButtonClick(5-1)
				end
			end
		"
	}
	button
	{
		area 903 664 50 35
		bam 		'mprbtn'
		scaleToClip
		sequence lua "get4CheckFrame(6)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[6]['player'] then
					multiplayerScreen:OnReadyButtonClick(6-1)
				end
			end
		"
	}



		list -- player list
		{
--			column -- kick
--			{
--				width lua "getPlayerKickWidth(rowNumber)"
--				label
--				{
--					area		6 5 45 45
--				}
--			}
			column --player names that are set not in game
			{ 
				--width lua "getPlayerNameWidth(rowNumber)"
				width 100
				label
				{
					area 		0 0 195 55
					text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
					text style 	"label"
					align 		left center
					enabled 	"getPlayerKickWidth(rowNumber) == 0"
				}
				label
				{
					area 		0 0 150 55
					text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
					text style 	"label"
					align 		left center
					enabled 	"getPlayerKickWidth(rowNumber) ~= 0"
				}
	
			}
	
			--area 				52 339 442 306
			area 				465 65 245 645
			--rowheight			51
			rowheight			107
			table				"mpaPlayers"
			var					selectedPlayer
			scrollbar			'GUISCRC'
			hidehighlight
			action
			"
				if cellNumber == 1 and selectedPlayer > 1 then
					cellNumber = 0
				elseif cellNumber == 2 then
					cellNumber = 0
				elseif cellNumber == 3 then
					cellNumber = 0
				elseif cellNumber == 4 and selectedPlayer > 1  then
					cellNumber = 0
				end
			"
		}

	--kick
	button
	{
		area		410 235 46 45
		bam 			gumpbutx --GUMPBUTX
		sequence 		4
		clickable lua	"mpaPlayers[2]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(2-1)
			end
		"
	}
	button
	{
		area		410 339 46 45
		bam 			gumpbutx
		sequence 		4
		clickable lua	"mpaPlayers[3]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(3-1)
			end
		"
	}
	button
	{
		area		410 449 46 45
		bam 			gumpbutx
		sequence 		4
		clickable lua	"mpaPlayers[4]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(4-1)
			end
		"
	}
	button
	{
		area		410 557 46 45
		bam 			gumpbutx
		sequence 		4
		clickable lua	"mpaPlayers[5]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(5-1)
			end
		"
	}
	button
	{
		area		410 665 46 45
		bam 			gumpbutx
		sequence 		4
		clickable lua	"mpaPlayers[6]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(6-1)
			end
		"
	}


	--character drag/drop
	--player 1
	button
	{
		area 465 65 245 108
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				465 116 37 57	--56 85
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,1)'
		sequence 			1
		fill 		0 0 0 170
		
		align 				center center
		--No changing control of character 1
	}
	button
	{
		area 				506 116 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,2)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,2)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				547 116 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,3)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,3)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				588 116 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,4)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,4)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				629 116 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,5)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,5)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				670 116 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,6)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,6)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	--player 2
	button
	{
		area 465 173 245 108
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				465 224 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,1)'
		sequence 			1
		fill 		0 0 0 170
		--fill 25 25 25 200
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,1)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				506 224 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,2)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,2)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				547 224 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,3)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,3)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				588 224 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,4)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,4)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				629 224 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,5)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,5)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				670 224 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,6)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,6)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	--player 3
	button
	{
		area 465 281 245 108
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				465 330 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,1)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,1)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				506 330 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,2)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,2)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				547 330 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,3)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,3)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				588 330 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,4)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,4)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				629 330 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,5)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,5)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				670 330 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,6)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,6)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	--player 4
	button
	{
		area 465 389 245 108
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				465 440 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,1)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,1)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				506 440 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,2)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,2)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				547 440 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,3)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,3)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				588 440 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,4)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,4)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				629 440 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,5)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,5)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				670 440 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,6)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,6)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	--player 5
	button
	{
		area 465 497 245 108
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				465 548 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,1)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,1)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				506 548 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,2)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,2)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				547 548 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,3)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,3)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				588 548 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,4)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,4)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				629 548 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,5)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,5)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				670 548 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,6)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,6)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	--player 6
	button
	{
		area 465 605 245 108
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				465 656 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,1)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,1)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				506 656 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,2)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,2)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				547 656 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,3)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,3)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				588 656 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,4)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,4)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				629 656 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,5)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,5)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				670 656 37 57
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,6)'
		sequence 			1
		fill 		0 0 0 170
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,6)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	--permissions
	button
	{
		area		465 177 245 45
		bam 			GUIWRSP
		sequence 		3
		clickable lua	"mpaPlayers[2]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		--tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 2
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		465 284 245 45
		bam 			GUIWRSP
		sequence 		3
		clickable lua	"mpaPlayers[3]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		--tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 3
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		465 393 245 45
		bam 			GUIWRSP
		sequence 		3
		clickable lua	"mpaPlayers[4]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		--tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 4
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		465 500 245 45
		bam 			GUIWRSP
		sequence 		3
		clickable lua	"mpaPlayers[5]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		--tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 5
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		465 607 245 45
		bam 			GUIWRSP
		sequence 		3
		clickable lua	"mpaPlayers[6]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		--tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 6
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}

	label -- game name
	{
		area 		0 84 454 56
		text lua	"multiplayerSessionName"
		text style 	'label'
	}
	label -- new game type/save name
	{
		area 		151 140 258 44
		text lua	"multiplayerSaveName"
		text style 	'label'
		align 		left center
	}
	label -- chapter
	{
		area 		151 180 258 44
		text lua	"multiplayerChapter"
		text style 	'label'
		align 		left center
	}
	label -- time played
	{
		area 		151 220 258 44
		text lua	"multiplayerTimePlayed"
		text style 	'label'
		align 		left center
	}
	label -- difficulty
	{
		area 		151 260 258 44
		text lua	"multiplayerDifficultyLabel"
		text style 	'label'
		align 		left center
	}
	label -- other difficulty
	{
		area 		-15 140 166 164
		bam			"GUIDIFF"
		frame lua 	"multiplayerDifficultyImage"
		sequence 	0
		align 		center center
	}
	label 
	{
	area 0 0 50 50
	enabled "not multiplayerFromInGame"
	mosaic lua "mpBGSet()"
	}
	button
	{
		--area 524 714 236 44
		area 780 733 206 44
		--bam 'GUIOSTUR'
		bam guimplgc
		--sequence 1
		text "START_GAME_BUTTON" -- Done
		text style 'button'
		clickable lua "multiplayer.donebuttonclickable"
		enabled "not multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
			mpChatTable = {}
		"
	}
	button
	{
		on escape
		area 780 733 206 44
		bam guimplgc
		--sequence 1
		text "DONE_BUTTON" -- Done
		text style 'button'
		clickable lua "multiplayer.donebuttonclickable"
		enabled "multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
			mpChatTable = {}
		"
	}
	button
	{
		area 40 733 206 44
		bam guimplgc
		text "LOGOUT_BUTTON" -- Logout
		text style 'button'
		action 
		"	
			multiplayerScreen:OnLogoutButtonClick()
		"
	}
	button
	{
		area 574 733 206 44
		bam guimplgc
		text "MULTIPLAYER_GAME_OPTIONS_BUTTON"
		text style 'button'
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			Infinity_PushMenu('MP_OPTIONS')
			Infinity_SetOverlay('OVERLAY_MAIN')
		"
	}
	button
	{
		bam guimplgc
		area 368 733 206 44
		pad 10 8 10 8
		text style "button"
		text "LOAD_GAME_BUTTON"
		enabled "multiplayerLocalPlayerID == 1"
		clickable lua "canClickSaveLoad()"
		action
		"
			setNoEscMenu = 1
			e:SelectEngine(optionsScreen)
			optionsScreen:SetEngineState(1)
			popup2Button(19531, 'LOAD_BUTTON', function() optionsScreen:LoadGame()  end)
			Popup2Button.okFunc()
		"
	}

	--dragged portrait
	label
	{
		name 				"multiplayerDraggingPortraitImage"
		area 				-20 -20 37 57
		bitmap lua			'mpDraggedPortrait'
		sequence 			1
		align 				center center
		enabled 			"multiplayerUpdateDraggedPortrait()"
	}
	label
	{
	area -15 330 425 385
	rectangle 4
	rectangle opacity 230
	}
	text
	{
		name "mpChatDisplay"
		--enabled "optionChat3"
		area 5 355 400 295
		text lua "mpChatText"
		scrollbar 'guiwrsp'
		scrollbar func "mpChatboxScroll"
		text style	normal
	}
    label
    {
        area 0 0 0 0
        on return
        action
		"
			if not B3PreventFocus then
				Infinity_FocusTextEdit('MPCHATCA')
			else
				B3PreventFocus = false
			end
		"
	}
	edit
	{
		name		"MPCHATCA"
		area		5 650 385 48
		var			mpChatEditOverlay
		text style	"edit"
		text point 12
		text useFontZoom 0
		align left bottom
		text color G
		placeholder "ENTER_TEXT"
		scrollbar 'guiwrsp'
		scrollbar func "chatboxScroll"
		--maxchars 136
		maxlines 3
		action
	
		"
			if B3PreventFocus then B3PreventFocus = false; 
				return 0 
			end
				if not (key_pressed == 13) then return 1
			end
			if (key_pressed == 13) and (mpChatEditOverlay == '') then
				B3PreventFocus = true
				Infinity_FocusTextEdit('')
				return 0
			end			
			if (key_pressed == 13) then
				B3PreventFocus = true
				Infinity_SendChatMessage(mpChatEditOverlay, false) 
				mpChatEditOverlay=''
				Infinity_FocusTextEdit('')
				return 0
			end	
		"
	}
}
`
multiplayerPermissions = 
{
	{'MULTIPLAYER_PERMISSIONS_MODIFY',	'MULTIPLAYER_PERMISSIONS_MODIFY_TOOLTIP',	false, false, 7},
	{'MULTIPLAYER_PERMISSIONS_GOLD',	'MULTIPLAYER_PERMISSIONS_GOLD_TOOLTIP',		false, false, 0},
	{'MULTIPLAYER_PERMISSIONS_TRAVEL',	'MULTIPLAYER_PERMISSIONS_TRAVEL_TOOLTIP',	false, false, 1},
	{'MULTIPLAYER_PERMISSIONS_VIEW',	'MULTIPLAYER_PERMISSIONS_VIEW_TOOLTIP',		false, false, 3},
	{'MULTIPLAYER_PERMISSIONS_DIALOGUE','MULTIPLAYER_PERMISSIONS_DIALOGUE_TOOLTIP',	false, false, 2},
	{'MULTIPLAYER_PERMISSIONS_PAUSE',	'MULTIPLAYER_PERMISSIONS_PAUSE_TOOLTIP',	false, false, 4}
}

function broadcastPermissionChange(player,permission,setting)
	local player = getMultiplayerPlayerName(player,false,true)
	local todo = t(multiplayerPermissions[permission][1])
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<PERMISSION>",todo)
	if setting == true then
		message = t("MULTIPLAYER_IS_NOW_PERMITTED")
	else
		message = t("MULTIPLAYER_IS_NOT_PERMITTED")
	end
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<PERMISSION>")
	Infinity_SendChatMessage(message, true) 
end

function getMultiplayerPlayerPermissionDescription()
	local player = getMultiplayerPlayerName(multiplayerInPermissionForPlayer,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
 	local canPerform = t("MULTIPLAYER_CAN_PERFORM")
	removeStringTokenLua("<PLAYER_NAME_1>")

	return canPerform
end
`
menu
{
	name 'MP_PERMISSIONS'
	align center center
	modal
	onOpen
	"
		local index = 1
		for index = 0, #(multiplayer.player[multiplayerInPermissionForPlayer].permissions), 1 do
			local luaIndex = -1
			local loopLuaIndex = -1

			for loopLuaIndex = 1, #multiplayerPermissions, 1 do
				if multiplayerPermissions[loopLuaIndex][5] == index then
					luaIndex = loopLuaIndex
					break
				end
			end

			if luaIndex ~= -1 then
				if multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == true then
					multiplayerPermissions[luaIndex][3] = true
					multiplayerPermissions[luaIndex][4] = true
				elseif multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == false then
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				else
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				end
			end
		end
	"

	label 
	{
		area 0 4 512 656
		mosaic "GUICONNB"
	}
	label
	{
		area 82 70 340 44
		text "PERMISSIONS_TITLE"
		text style "title"
	}

	label
	{
		area 86 114 330 48
		text lua "getMultiplayerPlayerPermissionDescription()"
		text style "title"
	}

	button
	{
		bam GUIOSW
		on esc
		area 462 10 44 44
		sequence 2
		action 
		"	
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}

	--bottom buttons
	button
	{
		area 152 534 200 44
		bam 'GUIOSTUM'
		sequence 0
		text "CANCEL_BUTTON" -- Back
		text style 'button'
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 152 586 200 44
		bam 'GUIOSTUM'
		sequence 1
		text "DONE_BUTTON" -- Done
		text style 'button'
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			local index = 1
			for index = #(multiplayerPermissions), 1, -1 do
				if multiplayerPermissions[index][3] ~= multiplayerPermissions[index][4] then
					broadcastPermissionChange(multiplayerInPermissionForPlayer,index,multiplayerPermissions[index][3])
					multiplayerScreen:OnPermissionButtonClick(multiplayerInPermissionForPlayer - 1, multiplayerPermissions[index][5])
				end
			end

			multiplayerInPermission = false
			multiplayerScreen:OnDoneButtonClick()
			Infinity_PopMenu()
		"
	}

	--permissions
	button
	{
		area 165 176 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[1][3] == true"
		tooltip lua "t(multiplayerPermissions[1][2])"
		align center center
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[1][3] = not multiplayerPermissions[1][3]
			end
		"
	}
	text
	{
		area 210 170 212 56
		text lua "t(multiplayerPermissions[1][1])"
		tooltip lua "t(multiplayerPermissions[1][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 232 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[2][3] == true"
		tooltip lua "t(multiplayerPermissions[2][2])"
		align center center
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[2][3] = not multiplayerPermissions[2][3]
			end
		"
	}
	text
	{
		area 210 226 212 56
		text lua "t(multiplayerPermissions[2][1])"
		tooltip lua "t(multiplayerPermissions[2][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 286 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[3][3] == true"
		tooltip lua "t(multiplayerPermissions[3][2])"
		align center center
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[3][3] = not multiplayerPermissions[3][3]
			end
		"
	}
	text
	{
		area 210 282 212 56
		text lua "t(multiplayerPermissions[3][1])"
		tooltip lua "t(multiplayerPermissions[3][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 338 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[4][3] == true"
		tooltip lua "t(multiplayerPermissions[4][2])"
		align center center
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[4][3] = not multiplayerPermissions[4][3]
			end
		"
	}
	text
	{
		area 210 334 212 56
		text lua "t(multiplayerPermissions[4][1])"
		tooltip lua "t(multiplayerPermissions[4][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 394 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[5][3] == true"
		tooltip lua "t(multiplayerPermissions[5][2])"
		align center center
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[5][3] = not multiplayerPermissions[5][3]
			end
		"
	}
	text
	{
		area 210 390 212 56
		text lua "t(multiplayerPermissions[5][1])"
		tooltip lua "t(multiplayerPermissions[5][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 165 450 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[6][3] == true"
		tooltip lua "t(multiplayerPermissions[6][2])"
		align center center
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[6][3] = not multiplayerPermissions[6][3]
			end
		"
	}
	text
	{
		area 210 446 212 56
		text lua "t(multiplayerPermissions[6][1])"
		tooltip lua "t(multiplayerPermissions[6][2])"
		text style "normal"
		align left center
	}
}
`
multiplayerGameOptions =
{
	{"LISTEN_JOIN_LABEL",	"LISTEN_JOIN_TOOLTIP",	false, false},
	{"ALLOW_REFORM_LABEL",	"ALLOW_REFORM_TOOLTIP",	false, false}
}
multiplayerImportOptions =
{
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SE"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_S"}
}
multiplayerImportOption = 0

function broadcastOptionChange(slot, onOff)
	if multiplayerLocalPlayerID == 1 then
		local message = ""
		if slot < 3 then
			local setting = t(multiplayerGameOptions[slot][1])
			setStringTokenLua("<SESSION_RULES>",setting)
			if onOff == true then
				message = t("MULTIPLAYER_GAME_WILL_NOW")
			else
				message = t("MULTIPLAYER_GAME_WILL_NO_LONGER")
			end
			removeStringTokenLua("<SESSION_RULES>")
		else
			local setting = t(multiplayerImportOptions[slot-2][1])
			setStringTokenLua("<IMPORT_RULES>",setting)
			message = t("MULTIPLAYER_IMPORT_SETTINGS_CHANGE")
			removeStringTokenLua("<IMPORT_RULES>")
		end
		Infinity_SendChatMessage(message, true) 
	end
end
`
menu
{
	name 'MP_OPTIONS'
	align center center
	offset 24 0
	modal 
	onOpen
	"
		multiplayerGameOptions[1][3] = multiplayer.listentojoin
		multiplayerGameOptions[1][4] = multiplayerGameOptions[1][3]
		multiplayerGameOptions[2][3] = multiplayer.allowreformparty
		multiplayerGameOptions[2][4] = multiplayerGameOptions[2][3]
		multiplayerImportOption = multiplayer.importsetting + 1
	"

	label 
	{
		area 0 4 512 656
		mosaic "GUICONNB"
	}
	label
	{
		area 82 70 340 44
		text "OPTIONS_TITLE"
		text style "title"
	}
	label
	{
		area 74 262 348 56
		text "MULTIPLAYER_IMPORT_CHARACTER_RULES_LABEL"
		text style "title"
		align center center
	}

	button
	{
		area 107 136 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerGameOptions[1][3] == true"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		align center center
		action 
		"
			multiplayerGameOptions[1][3] = not multiplayerGameOptions[1][3]
		"
	}
	text
	{
		area 152 130 212 55
		text lua "t(multiplayerGameOptions[1][1])"
		text style "normal"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		align left center
	}
	button
	{
		area 107 200 45 42
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerGameOptions[2][3] == true"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		align center center
		action 
		"
			multiplayerGameOptions[2][3] = not multiplayerGameOptions[2][3]
		"
	}
	text
	{
		area 152 194 212 55
		text lua "t(multiplayerGameOptions[2][1])"
		text style "normal"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		align left center
	}

	button
	{
		area 107 342 45 42
		bam ROUNDBUT
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 1"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		align center center
		action 
		"
			multiplayerImportOption = 1
		"
	}
	text
	{
		area 152 336 212 55
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}
	button
	{
		area 107 400 45 42
		bam ROUNDBUT
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 2"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		align center center
		action 
		"
			multiplayerImportOption = 2
		"
	}
	text
	{
		area 152 391 212 55
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SE')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}
	button
	{
		area 107 452 45 42
		bam ROUNDBUT
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 3"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		align center center
		action 
		"
			multiplayerImportOption = 3
		"
	}
	text
	{
		area 152 446 212 56
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_S')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}

	--bottom buttons
	button
	{
		on return
		area 152 590 200 44
		bam 'GUIOSTUM'
		sequence 0
		text "DONE_BUTTON" -- Done
		text style 'button'
		action 
		"
			if multiplayerImportOption ~= multiplayer.importsetting + 1 then
				multiplayerScreen:SetImportSetting(multiplayerImportOption - 1)
				broadcastOptionChange(multiplayerImportOption+2)
			end

			if multiplayerGameOptions[1][3] ~= multiplayerGameOptions[1][4] then
				broadcastOptionChange(1, multiplayerGameOptions[1][3])
				multiplayerScreen:ToggleListenToJoin()
			end

			if multiplayerGameOptions[2][3] ~= multiplayerGameOptions[2][4] then
				broadcastOptionChange(2, multiplayerGameOptions[2][3])
				multiplayerScreen:ToggleAllowReformParty()
			end

			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 152 536 200 44
		bam 'GUIOSTUM'
		sequence 1
		text "CANCEL_BUTTON" -- Cancel
		text style 'button'
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
}
`
	function getActivePlayerIndex(index)
		local ret = -1
		local count = 0
		local slot = 0

		for slot = 1, 6, 1 do
			if mpaPlayers[slot]["name"] ~= '' then
				count = count + 1
			end
			if count == index then
				ret = slot
				break
			end
		end

		return ret
	end
`
menu
{
	name 'MP_PICKPLAYER'
	align center center
	modal 
	label 
	{
		mosaic 'GUICONN1'
		area 0 0 512 551
	}
	label 
	{
		area 56 60 390 44
		text "SELECT_PLAYER_TITLE"
		text style "title"
	}

	-- list
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 340 32
				text lua "getMultiplayerPlayerName(getActivePlayerIndex(rowNumber), false, true)"
				text style "normal"
				align left center
			}
		}

		action 
		"
		"

		rowheight 32
		area 124 116 258 194
		table "multiplayer.player"
		var currentMultiplayerSelectPlayer
	}
	
	button
	{
		bam GUIOSW
		on esc
		area 464 4 44 44
		sequence 2
		action 
		"	
			Infinity_PopMenu()
		"
	}

	button
	{
		on escape
		area 152 408 204 44
		text "CANCEL_BUTTON"
		text style "button"
		align center center
		bam 'GUIOSTUM'
		sequence 0
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 152 458 204 44
		text "DONE_BUTTON"
		text style "button"
		align center center
		bam 'GUIOSTUM'
		sequence 0
		action
		"	
			if mpaCharacters[selectedCharacter]['ready'] == true and mpaCharacters[selectedCharacter]['player'] ~= getActivePlayerIndex(currentMultiplayerSelectPlayer) then
				multiplayerScreen:OnReadyButtonClick(selectedCharacter-1)
			end
			broadcastCharacterControlChange(selectedCharacter, getActivePlayerIndex(currentMultiplayerSelectPlayer))
			multiplayerScreen:OnPlayerSelection(getActivePlayerIndex(currentMultiplayerSelectPlayer)-1)
			Infinity_PopMenu()
		"
	}
}
`
	function multiplayerIsDelete ()
		if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
			return t("DELETE_BUTTON")
		else
			return t("CREATE_BUTTON")
		end
	end
	function getModifyConfirmationLabel()
		return t('MULTIPLAYER_EDIT_CONFIRM').. ' ' .. getMultiplayerCharacterName(mpModifyingCharacter+1)
	end
`
menu
{
	name 'MP_MODIFYCHARACTER'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR6'
		area 0 0 682 234
	}
	label
	{
		area 14 8 628 124
		text lua "getModifyConfirmationLabel()"
		text style "title"
		align center center
	}
	button
	{
		on escape
		area 79 170 234 44
		text "CANCEL_BUTTON" -- cancel
		text style "button"
		align center center
		bam GUIOSTUL
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 343 170 234 44
		text lua "multiplayerIsDelete()"
		text style "button"
		align center center
		bam GUIOSTUR
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:SetModifiedCharacterSlot(mpModifyingCharacter)
			if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
				multiplayerScreen:OnModifyCharacterDelete()
			else
				multiplayerScreen:UpdateModifyCharacterPanel()
			end
		"
	}
}

menu
{
	name 'MP_ERRORONE'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR6'
		area 0 0 657 253
	}
	label
	{
		area 29 21 600 126
		text lua "Infinity_FetchString( mpErrorText )"
		text style "normal"
		align center center
	}
	button
	{
		on return
		area 213 170 230 44
		text "DONE_BUTTON" -- done
		text style "button"
		align center center
		bam GUIBUTMT
		action
		"	
			Infinity_PopMenu()
		"
	}
}

menu
{
	name 'MP_ERRORTWO'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR'
		area 0 0 408 418
	}
	label
	{
		area 72 82 258 80
		text lua "Infinity_FetchString( mpErrorText )"
		text style "normal"
		align center center
	}
	button
	{
		on return
		enabled "mpErrorState == 2"
		area 52 220 302 44
		text "MODIFY_BUTTON" -- modify
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:ModifyCharacters()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 3"
		area 52 220 302 44
		text "KICK_BUTTON" -- kick player
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:KickPlayer()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 4"
		area 52 220 302 44
		text "LOGOUT_BUTTON" -- log out
		text style "button"
		align center center
		bam GUIOSTCL
		action
		"	
			local index = 1
			Infinity_PopMenu()
			multiplayerScreen:Logout()
		"
	}
	button
	{
		on escape
		area 102 318 204 44
		text "CANCEL_BUTTON" -- cancel
		text style "button"
		align center center
		bam GUIOSTUM
		action
		"	
			Infinity_PopMenu()
		"
	}
}
`

	mpChatTable = {}
	optionChat3 = 1
	showAlreadyMpChat = 0

function dragMPChat(newY)
	local x,y,w,h = Infinity_GetArea('mpChatDisplayBackground')
	local hNew = h - newY

	--lower bound on height, sliced rects can't get too small and we don't want to make the message box invisible.
	--also don't go too high because it looks bad.
	if hNew > 146 and hNew < 450 then
		adjustItemGroup({"mpChatHandle"},0,newY,0,0)
		adjustItemGroup({"mpCombatLogBG","mpChatDisplayBackground","MPCMessageBox"},0,newY,0,-newY)
	end

	--setQuickLootOffset()
	chatboxScrollToBottom = 1
end

function dragOverlayChat(newY)
	local x,y,w,h = Infinity_GetArea('overlayChatDisplayBackground')
	local hNew = h - newY

	--lower bound on height, sliced rects can't get too small and we don't want to make the message box invisible.
	--also don't go too high because it looks bad.
	if hNew > 146 and hNew < 450 then
		adjustItemGroup({"overlayChatHandle"},0,newY,0,0)
		adjustItemGroup({"overlayCombatLogBG","overlayChatDisplayBackground","overlayMessageBox"},0,newY,0,-newY)
	end

	--setQuickLootOffset()
	chatboxScrollToBottom = 1
end
	
	
function updateChatViewed()
	if(showMpChat == 0) then chatViewed = 0 end
end

function updateMPChatPreview(message)
	if(showMpChat == 0) then 
	table.insert(mpChatTable,{text = message}) 
		else 
	table.insert(mpChatTable,{text = message}) 
	end
	
end

function getMPMessageOpacity()
	local current = mpChatTable[#mpChatTable]
	if(current == nil) then
		return nil
	end
	if(current.displayTime == nil) then
		current.displayTime = 1000
		
		--set the box size
		--Infinity_ScaleToText("mpChatPreview")
		
		--give some extra room for the padding
		--adjustItemGroup({"mpChatPreview"},0,0,0,16)
	end
	if(current.displayTime > 0) then
		current.displayTime = current.displayTime - 4
	end
	if(current.displayTime > 150) then
		return 255
	else
		return current.displayTime
	end
end
	
function getMPBackgroundOpacity()
	local current = mpChatTable[#mpChatTable]
	if(current == nil) then
		return nil
	end
	if(current.displayTime == nil) then
		current.displayTime = 1000
		
		--set the box size
		--Infinity_ScaleToText("mpChatPreview")
		
		--give some extra room for the padding
		--adjustItemGroup({"mpChatPreview"},0,0,0,16)
	end
	if(current.displayTime > 0) then
		current.displayTime = current.displayTime - 4
	end
	if(current.displayTime > 150) then
		return 150
	else
		return current.displayTime
	end
end
	
	
function getMPMessage()
	if(#mpChatTable > 0 and mpChatTable[#mpChatTable].displayTime ~= nil) then 
		return mpChatTable[#mpChatTable].text 
	end
	return nil
end
	
	
function getChatIconOpacity()
	if(chatViewed == 1) then return 255 end
	local sinWave = math.sin(Infinity_GetFrameCounter() / 15)
	local sinWaveAdjusted = (sinWave / 2) + 0.5
	return sinWaveAdjusted * 255
end
function getChatBarTooltip()
	if(optionChat3 == 0) then
		return t("MULTIPLAYER_CHAT_BAR_COLLAPSED")
	else
		return t("MULTIPLAYER_CHAT_BAR_EXPANDED")
	end
end
function resizeMpEditBox()
	Infinity_ScaleToText('mpChatEdit')
	local x,y,w,h = Infinity_GetArea('mpChatEdit')
	local offset = 42
	if(h + offset < 42) then h = (42 - offset) end
	
	
	Infinity_SetArea('mpChatEdit',x,y,w,h)
end

function mpChatboxScroll(top, height, contentHeight)
	if(mpChatboxJumpToBottom and contentHeight > height) then
		mpChatboxJumpToBottom = nil
		return height-contentHeight
	end
	if(mpChatboxScrollToBottom == 0 and mpChatboxScrollLastHeight == contentHeight) then
		--defer to default scrolling
		return nil
	elseif mpChatboxScrollToBottom == 0 then
		mpChatboxScrollLastHeight = contentHeight
		return height-contentHeight
	end
	if(contentHeight < height) then
		--no scrolling required, content fits
		mpChatboxScrollToBottom = nil
		return nil
	end
	local dT = Infinity_GetClockTicks() - mpChatboxScrollTimeLast
	mpChatboxScrollTimeLast = Infinity_GetClockTicks()
	top = top + lastTrimmedContentHeight
	lastTrimmedContentHeight = 0
	local newTop = (dT * -0.25) + top
	if (newTop + contentHeight > height + 200) then
		return (height - contentHeight + 200)
	end
	if(newTop + contentHeight < height) then
		mpChatboxScrollToBottom = 0
		return height - contentHeight
	end
	return newTop
end

mpChatboxScrollLastHeight = 0
mpChatboxScrollToBottom = nil
mpChatboxScrollTimeLast = 0
mpChatEditOverlay = ""
	
function showMessagesButtonFrame()
	if(optionChat3 == 1) then 
		return 0 
	else 
		return 1 
	end
end
	
function toggleDialogShowMessages()
	if(optionChat3 == 1) then 
		optionChat3 = 0 
		Infinity_SetINIValue('Y5 Options','allChat Toggle','0')
	else 
		optionChat3 = 1
		Infinity_SetINIValue('Y5 Options','allChat Toggle','1')
	end
end

function toggleOverlayMessages()
	if(optionChatLua == 1) then 
		optionChatLua = 0 
		Infinity_SetINIValue('Y5 Options','luaChat Toggle','0')
	else 
		optionChatLua = 1
		Infinity_SetINIValue('Y5 Options','luaChat Toggle','1')
	end
end
function dragMessagesYxM()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	if(optionChat3 == 0 and showAlreadyMpChat == 0) then
		showAlreadyMpChat = 1
		optionChat3 = 1
		Infinity_SetArea('mpCombatLogBG', screenWidth*.0, screenHeight*.2, screenWidth*.2773, screenHeight*.79739)
		Infinity_SetArea('mpChatDisplayBackground', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.8)
		Infinity_SetArea('MPCMessageBox', screenWidth*.01225, screenHeight*.213, screenWidth*.25975, screenHeight*.723)
		Infinity_SetArea('mpChatHandle', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.046)
	end
	
	if(optionChat3 == 1) then
		Infinity_SetArea('mpCombatLogBG', screenWidth*.0, screenHeight*.2, screenWidth*.2773, screenHeight*.79739)
		Infinity_SetArea('mpChatDisplayBackground', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.8)
		Infinity_SetArea('MPCMessageBox', screenWidth*.01225, screenHeight*.213, screenWidth*.25975, screenHeight*.723)
		Infinity_SetArea('mpChatHandle', screenWidth*.0, screenHeight*.2, screenWidth*.28, screenHeight*.046)
	end

end

function dragMessagesYxzM()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	
	if(optionChat3 == 1 and showAlreadyMpChat == 1) then
		showAlreadyMpChat = 0
		optionChat3 = 0
		Infinity_SetArea('mpCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('mpChatDisplayBackground', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('MPCMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('mpChatHandle', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)
	end
	
	if(optionChat3 == 1) then
		Infinity_SetArea('mpCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('mpChatDisplayBackground', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('MPCMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('mpChatHandle', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)
	end
	
	chatboxScrollToBottom = 1
end

evalOnceF5 = 0
curTimeF5 = 0
optionF5 = 0

function curRefreshOnce()

    if evalOnceF5 == 0 then
        evalOnceF5 = 1
        curTimeF5 = Infinity_GetClockTicks() + 250
    end
	 
end
		
function curF5Refresh()

	if Infinity_GetINIValue('Y5 Options','overlay Reset') == 1 then
	
		curRefreshOnce()
		print(' ')
		if Infinity_GetClockTicks() >= curTimeF5 then

			optionSeeLua = Infinity_GetINIValue('Y5 Options','view LuaConsole')
			optionQuickLoot = Infinity_GetINIValue('Y5 Options','view QuickLoot')		
			optionSeeCast = Infinity_GetINIValue('Game Options','Show AOE')
				  
			optionNoPause = Infinity_GetINIValue('Y5 Options','cancelPause')
			optionChat1 = Infinity_GetINIValue('Y5 Options','worldChat Toggle')
			optionChat2 = Infinity_GetINIValue('Y5 Options','dialogChat Toggle')
			optionChat3 = Infinity_GetINIValue('Y5 Options','allChat Toggle')
			optionSeeChat3 = Infinity_GetINIValue('Y5 Options','view allChat')
			optionF5 = Infinity_GetINIValue('Y5 Options','Function Binds')
			optionChatLua = Infinity_GetINIValue('Y5 Options','luaChat Toggle')
			luaViewed = Infinity_GetINIValue('Y5 Options','lua menuToggle')
			aiButtonToggle = Infinity_GetINIValue('Y5 Options','AI Enabled')

			versionString = CBaldurChitin:GetVersionString()
			
			--ADD VARIABLES
			
			if e:GetActiveEngine() == startEngine then
				getMenuPanelArea()
				Infinity_PopMenu('BACKGROUND')
				Infinity_SetBackground('BACKGROUND')
			elseif e:GetActiveEngine() == connectionScreen then
				Infinity_PopMenu('BACKGROUND')
				Infinity_SetBackground('BACKGROUND')
			elseif e:GetActiveEngine() == multiplayerScreen then
				Infinity_PopMenu('BACKGROUND')
				Infinity_SetBackground('BACKGROUND')
			elseif e:GetActiveEngine() == optionsScreen then
				Infinity_PopMenu('OPTIONS_GAMEPLAY')
				Infinity_PushMenu('OPTIONS_GAMEPLAY')
				Infinity_PopMenu('BACKGROUND')
				Infinity_SetBackground('BACKGROUND')
			elseif e:GetActiveEngine() == loadScreen then
				Infinity_PopMenu('BACKGROUND')
				Infinity_SetBackground('BACKGROUND')
			elseif e:GetActiveEngine() == worldScreen then
				getMBWSize()
				getRSidebarSize()
				if Infinity_IsMenuOnStack('WORLD_DIALOG') then
					getMBDWSize()
					dialogButtonPosition()
					getOverlaySize()
				elseif Infinity_IsMenuOnStack('OPTIONS_GAMEPLAY') then
					Infinity_PopMenu('OPTIONS_GAMEPLAY')
					Infinity_PushMenu('OPTIONS_GAMEPLAY')
				end
			elseif e:GetActiveEngine() == createCharScreen then
				Infinity_PopMenu('BACKGROUND')
				Infinity_SetBackground('BACKGROUND')
			elseif e:GetActiveEngine() == saveScreen or e:GetActiveEngine() == loadScreen then
				setNoEscMenu = 1
			elseif e:GetActiveEngine() == connectionScreen then
				connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer','Player Name','')
				connectionSessionNameEdit = Infinity_GetINIString('Multiplayer','Session Name','')
				connectionSessionPasswordEdit = Infinity_GetINIString('Multiplayer','Session Password','')
			end
			
			
			mpChatTable = {}
			getMPCSize()
			evalGameNew = 1
			evalRunStack = 1
			Infinity_SetOverlay('OVERLAY_MAIN')
			evalOverlay = 1
			print('func curF5Refresh finished')
			collectgarbage("collect")
			
			if ovrStartReset == 3 then
				print('ERROR, MENU FORCED OPEN')
			end
			
			if evalOnceF5 == 0 then
				curF5Refresh()
			else
				Infinity_PopMenu('REFRESHMENU');
			end
	
		end
	end
	
end

function curRepRefresh()
	if e:GetActiveEngine() ~= worldScreen then
		curRepCheck = 1
	end
	return curRepCheck
end
	
	function getMPCSize()
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		Infinity_SetArea('mpCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('mpChatDisplayBackground', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('overlayMPBackground', screenWidth*.0, screenHeight*.825, screenWidth*.28, screenHeight*.09)
		Infinity_SetArea('overlayMPText', screenWidth*.0, screenHeight*.825, screenWidth*.28, screenHeight*.09)
		Infinity_SetArea('mpChatEditBackground', screenWidth*.0, screenHeight*.915, screenWidth*.28, screenHeight*.085)
		Infinity_SetArea('MPCMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('mpChatEdit', screenWidth*.01225, screenHeight*.936, screenWidth*.24075, screenHeight*.037)
		Infinity_SetArea('mpChatHandle', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)	
		Infinity_SetArea('mpchahist', screenWidth*.213, screenHeight*.971, screenWidth*.036, screenHeight*.029)
		
		Infinity_SetArea('overlayCombatLogBG', screenWidth*.0, screenHeight*.803, screenWidth*.2773, screenHeight*.19439)
		Infinity_SetArea('overlayChatDisplayBackground', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.197)
		Infinity_SetArea('overlayBackground', screenWidth*.0, screenHeight*.825, screenWidth*.28, screenHeight*.09)
		Infinity_SetArea('overlayText', screenWidth*.0, screenHeight*.825, screenWidth*.28, screenHeight*.09)
		Infinity_SetArea('overlayChatEditBackground', screenWidth*.0, screenHeight*.915, screenWidth*.28, screenHeight*.085)
		Infinity_SetArea('overlayMessageBox', screenWidth*.01225, screenHeight*.816, screenWidth*.25975, screenHeight*.12)
		Infinity_SetArea('overlayChatEdit', screenWidth*.01225, screenHeight*.936, screenWidth*.24075, screenHeight*.037)
		Infinity_SetArea('overlayChatHandle', screenWidth*.0, screenHeight*.803, screenWidth*.28, screenHeight*.046)	
		Infinity_SetArea('overlaychahist', screenWidth*.213, screenHeight*.971, screenWidth*.036, screenHeight*.029)
		--Infinity_SetArea('mpChatPreview', screenWidth*.01225, screenHeight*.93, screenWidth*.26775, screenHeight*.07)
	end
	
`
menu
{
	name 'REFRESHMENU'
	ignoreesc
	onOpen "print('REFRESHMENU open') if ovrStartReset == 2 then Infinity_SetINIValue('Y5 Options','overlay Reset',1) ovrStartReset = 3 end"
	onClose 
	"
		evalOnceF5 = 0
		Infinity_SetINIValue('Y5 Options','overlay Reset',0)
	"

	label
	{
		enabled "curF5Refresh()"
			  
	}
}
menu
{
	name "MP_CHAT_OVERLAY"
	ignoreEsc
	onOpen "Infinity_PopMenu('MP_CHAT_OVERLAY'); Infinity_ChangeOption(67,0,8); Infinity_SetOverlay('OVERLAY_MAIN')"
	label {area 0 0 0 0}
}
`
luaViewed = 0
`
menu
{
	name 'OVERLAY_MAIN' -- overlay main, overlay menu, overlay start

	ignoreEsc
	onOpen
	"
		evalOverlay = 1
		--print('OVERLAY_MAIN open')
	"
	--onClose
	--"	
	--	print('OVERLAY_MAIN close')
	--"
	button
	{
		enabled "curActiveEngine == worldScreen and Infinity_GetINIValue('Y5 Options','Highlight Enabled') == 1"
		on Tab
		action
		"
			if Infinity_GetINIValue('Y5 Options','Highlight Enabled') == 1 then
				Infinity_SetINIValue('Y5 Options','Highlight Enabled',0)
			end			
		"
	}	
---------------------------------------------------- 
-----------------------------------------------F5 BINDS
----------------------------------------------------
	button
	{
	enabled "optionF5 == 1 and Infinity_GetINIValue('Y5 Options','overlay Reset') == 0"
	on "Home"
	action
	" 
		Infinity_SetINIValue('Y5 Options','overlay Reset',1)
		Infinity_PushMenu('REFRESHMENU')
	"
	}
	button
	{
	enabled "optionF5 == 1"
	on "End"
	action 
	"
		local optionNoDebug = Infinity_GetINIValue('Y5 Options','Prevent Ctrl-Debug')
		if optionNoDebug == 1 then
			Infinity_SetINIValue('Y5 Options','Prevent Ctrl-Debug',0)
		else
			Infinity_SetINIValue('Y5 Options','Prevent Ctrl-Debug',1)
		end
	"
	}
	button
	{
	enabled "optionF5 == 1 and e:GetActiveEngine() == worldScreen"
	on "PageUp"
	action 
	"
		luaEdit = consoleOtherList[4][2]
		updateLuaHistory()
		saveLuaHistory()
		Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
		luaEdit=''
	"
	}
	button
	{
	enabled "optionF5 == 1 and e:GetActiveEngine() == worldScreen"
	on "PageDown"
	action 
	"
		luaEdit = consoleOtherList[5][2]
		updateLuaHistory()
		saveLuaHistory()
		Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
		luaEdit=''	
	"
	}
	button
	{
	enabled "optionF5 == 1"
	on "Keypad -"
	action "print(Y5CurrentScreen());print('----------')	print(B3GetEngineName(e:GetActiveEngine()));print('----------');Y5AllScreens()"
	}
	button
	{
	enabled "optionF5 == 1"
	on "Keypad /"
	action "setClearMenus = 1"
	}
	button
	{
	on "Keypad *"
	action
	"
		if setClearMenus == 1 then
			CLEARALLMENUS()
		end
	"
	}
	button
	{
	enabled "Infinity_GetINIValue('Y5 Options','Prevent Ctrl-Debug') == 1"
	on "Left Ctrl"
	}
---------------------------------------------------- 
-----------------------------------------------LUA CONSOLE, LUA START
----------------------------------------------------	
	label
	{
	area 0 0 20 20
	enabled "optionSeeLua == 1"
	on "delete"
	--fill 150 150 150 255
	action
	"
	if luaViewed == 1 then
		luaViewed = 0
		Infinity_SetINIValue('Y5 Options','lua menuToggle',0)
		if curActiveEngine == worldScreen and Infinity_IsMenuOnStack('WORLD_DIALOG') ~= 1 then
			chatboxScrollToBottom = 1
		end
	else
		chatboxScrollToBottom = 1
		luaViewed = 1
		Infinity_SetINIValue('Y5 Options','lua menuToggle',1)
		cheatTeleportArea = 1
		if startCampaignData[currentCampaign].cheatAreasTable ~= nil then
			cheatAreaDisplayList = startCampaignData[currentCampaign].cheatAreasTable
		else
			cheatAreaDisplayList = cheatAreas
		end
		loadLuaHistory()
		
		--SCS PLACEMENT TABLE
		
	end
	"
	}
	
	label
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area 0 5 570 485
		rectangle 4
		rectangle opacity 255
	}
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() == worldScreen"
		on "Keypad +"
		action
		"
			if cheatTeleportArea == 1 then
				return 
			else
				scrollCMenu = -1
				cheatTeleportArea = cheatTeleportArea - 1
			end
		"			
	}
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() == worldScreen"
		on "Keypad Enter"
		action
		"
			if cheatTeleportArea == #cheatAreaDisplayList then
				return
			else
				scrollCMenu = 1
				cheatTeleportArea = cheatTeleportArea + 1
			end
		"
	}
	button
	{
	enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() == worldScreen"
	on "Keypad -"
	action "C:ExploreArea()"
	}	
	button
	{
	enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() == worldScreen"
	on "Keypad *"
	action "C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])"
	}

	list
	{
		column 
		{
			width 20 
			label
			{
				enabled	"ConsoleContainsSearchString(rowNumber)"
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][1]"
				text style "list"
			}
		}
		column 
		{ 
			width 80 
			label
			{
				enabled	"ConsoleContainsSearchString(rowNumber)"
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][2]"
				text style "list"
			}
		}
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() == worldScreen"
		name "consoleList"
		area		20 30 530 255
		rowheight dynamic
		table		"cheatAreaDisplayList"
		var		cheatTeleportArea
		scrollbar	'GUISCRC'
		scrollbar func "CMenuScroll"
		scrollbar skipReset
		
		actionDbl
		"
			C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])
		"
	}
	
	list
	{
		column 
		{
			width 20 
			label
			{
				enabled	"ConsoleContainsSearchString(rowNumber)"
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][1]"
				text style "list"
			}
		}
		column 
		{ 
			width 80 
			label
			{
				enabled	"ConsoleContainsSearchString(rowNumber)"
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][2]"
				text style "list"
			}
		}
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() ~= worldScreen"
		name "consoleList"
		area		20 30 530 255
		rowheight dynamic
		table		"cheatAreaDisplayList"
		var		cheatTeleportArea
		scrollbar	'GUISCRC'
		scrollbar func "CMenuScroll"
		scrollbar skipReset
	}
	
	label
	{
	enabled "optionSeeLua == 1 and luaViewed == 1"
	area 0 334 447 156
	rectangle 4
	rectangle opacity 100
	}
	edit
	{
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() == worldScreen"
		name "consoleEdit"
		area		220 297 330 44 
		var		ConsoleSearch
		text style	"edit"
		align left bottom
		placeholder "SEARCH_FOR_LOCATION"
		text point 12
		text useFontZoom 0
		text color S
		maxchars 50
		action
		"
			if (key_pressed == 13) then
				cheatTeleportArea = B3CalcEnabledRowNum(1)
				C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])
			else
				return 1
			end	
		"
		--EXTEXT3
	}
	edit
	{
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() ~= worldScreen"
		name "consoleEdit"
		area		220 297 330 44 
		var		ConsoleSearch
		text style	"edit"
		align left bottom
		placeholder "SEARCH_FOR_LOCATION"
		text point 12
		text useFontZoom 0
		text color S
		maxchars 50
		action
		"
			if (key_pressed == 13) then
				return
			else
				return 1
			end
		"
		
		--EXTEXT3
	}		
	
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "luaEditHistory[rowNumber]"
				text style	"normal"
			}
		}
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area 20 355 285 110
		rowheight dynamic
		var luaEditHistoryListSelected
		table		"luaEditHistory"
		text style "normal"
		hidehighlight
		scrollbar	'GUISCRC'
		scrollbar skipReset
		
		action
		"
			luaEdit = luaEditHistory[luaEditHistoryListSelected]
		"
		actionDbl
		"
			luaEdit = luaEditHistory[luaEditHistoryListSelected]
			updateLuaHistory()
			saveLuaHistory()
			Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
			luaEdit=''
		"
	}
---------------------------------------------------- 
-----------------------------------------------MAP 3BUTTONS
----------------------------------------------------
	label
	{
		enabled "curActiveEngine == mapScreen or curActiveEngine == worldMapScreen and worldMapScreen:IsTravelButtonVisible() == false or worldMapScreen:IsTravelButtonClickable()"
		on escape
		action
		"
			e:SelectEngine(worldScreen)
		"	
	}
---------------------------------------------------- 
-----------------------------------------------LUA ESCAPE
----------------------------------------------------
	label
	{
	enabled "optionSeeLua == 1 and luaViewed == 1"
	on escape
	action
	"
	local x,y,w,h = Infinity_GetArea('luaEditArea')
	
	if Infinity_TextEditHasFocus() == 0 then
		luaViewed = 0
		Infinity_SetINIValue('Y5 Options','lua menuToggle',0)
		if h ~= 28 then
			Infinity_SetArea('luaEditArea',nil,nil,nil,28)
			Infinity_SetArea('luaTextBG',nil,nil,nil,60)
		end
		chatboxScrollToBottom = 1
	elseif Infinity_TextEditHasFocus() == 1 and luaEdit ~= '' then
		luaEdit = ''
										
		if h ~= 28 then
			Infinity_SetArea('luaEditArea',nil,nil,nil,28)
			Infinity_SetArea('luaTextBG',nil,nil,nil,60)
		end
		Infinity_SetScrollTop('luaEditArea',1)
		Infinity_FocusTextEdit('luaEditArea')
	elseif Infinity_TextEditHasFocus() == 1 and luaEdit == '' then
										
		Infinity_FocusTextEdit('')
		if h ~= 28 then
			Infinity_SetArea('luaEditArea',nil,nil,nil,28)
			Infinity_SetArea('luaTextBG',nil,nil,nil,60)
		end
		Infinity_SetScrollTop('luaEditArea',1)
	elseif Infinity_TextEditHasFocus() == 0 and luaEdit == '' then
		luaViewed = 0
		Infinity_SetINIValue('Y5 Options','lua menuToggle',0)
		chatboxScrollToBottom = 1
	end
	"
	}
	label
	{
	enabled "optionSeeLua == 1 and luaViewed == 1"
	name "luaTextBG"
	area 0 463 570 60
	rectangle 4
	rectangle opacity 255
	}
	edit
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		name				"luaEditArea"
		area		20 480 530 28
		var					luaEdit
		scrollbar			'guiwrsp'
		text style			"edit"
		text useFontZoom	0
		placeholder "ENTER_TEXT_LUA"
		text point 12
		text  useFontZoom 0
		text color S
		--align left bottom
		maxlines 5
		action
		"
			if (key_pressed == 13) then
				B3PreventFocus = True
				updateLuaHistory()
				saveLuaHistory()
				curLuaEntered = 1
				Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
				luaEdit=''
				Infinity_FocusTextEdit('luaEditArea')
				resizeLuaEdit()
				
				return 0
			else
				return 1
			end
		"
		actionAlt "resizeLuaEdit()"
	}
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area		14 303 200 44
		bam			GUIMPLGC
		text		"TRAVEL_BUTTON"
		text style	"button"
		text color S
		clickable lua "e:GetActiveEngine() == worldScreen"
		action 		
		"
		C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])
		"
	}	
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area		312 346 120 44
		bam			GUIMPLGC
		text		"EXPLORE_LABEL"
		text style	"button"
		text color S
		clickable lua "e:GetActiveEngine() == worldScreen"
		action		"C:ExploreArea()"
	}
	
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area		435 346 120 44
		bam			GUIMPLGC
		text		"MISC_CONSOLE"
		text style	"button"
		text color S
		clickable lua "e:GetActiveEngine() == worldScreen"
		action
		"
			if consoleMM == 1 then
				consoleMM = 0
			else
				consoleMM = 1
			end
		"
	}
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area		312 389 120 44
		bam			GUIMPLGC
		text		"GIVE_GOLD_LABEL"
		text style	"button"
		text color S
		clickable lua "e:GetActiveEngine() == worldScreen"
		action		"C:AddGold(cheatGoldAmt)"
	}
	edit
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area		440 395 80 35
		var		cheatGoldAmt
		text style	"edit"
		align left bottom
		placeholder "ENTER_TEXT"
		text color S
		maxchars 9
		action
		"
			if  (key_pressed == 13) then
				C:AddGold(cheatGoldAmt)
				return 0
			end
			if(tonumber(letter_pressed) ~= nil or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		enabled "optionSeeLua == 1 and luaViewed == 1"
		area		312 433 120 44
		bam			GUIMPLGC
		text			"GIVE_XP_LABEL"
		text style	"button"
		text color S
		clickable lua "e:GetActiveEngine() == worldScreen"
		action		"C:SetCurrentXP(cheatXpAmt)"
	}
	edit
	{
		enabled "luaViewed == 1"
		area		440 438 80 35
		var		cheatXpAmt
		text style	"edit"
		align left bottom
		placeholder "ENTER_TEXT"
		text color S
		maxchars 9
		action
		"
			if  (key_pressed == 13) then
				C:SetCurrentXP(cheatXpAmt)
				return 0
			end
			if(tonumber(letter_pressed) ~= nil or not letter_pressed) then
				return 1
			else
				return 0
			end
		"		
	}
	
	label 
	{
	enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() ~= worldScreen"
	area 14 303 200 44
	fill 0 0 0 100
	}

	label 
	{
	enabled "optionSeeLua == 1 and luaViewed == 1 and e:GetActiveEngine() ~= worldScreen"
	area 312 346 245 125
	fill 0 0 0 100
	}
	
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 -1 -1
				pad 0 7 0 0
				text lua "consoleOtherList[rowNumber][1]"
				text style	"normal"
				text color S
				text point 14
				text useFontZoom 0
			}
		}
		enabled "optionSeeLua == 1 and luaViewed == 1 and consoleMM == 1 and e:GetActiveEngine() == worldScreen"
		area 570 60 155 310
		rowheight dynamic
		var consoleOther
		hidehighlight
		table		"consoleOtherList"
		scrollbar	'GUISCRC'
		rectangle 1
		rectangle opacity 250
		action
		"
			luaEdit = consoleOtherList[consoleOther][2]
			updateLuaHistory()
			saveLuaHistory()
			Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
			luaEdit=''
		"
	}

	label
	{
	enabled "curRepRefresh == 0 and e:GetActiveEngine() ~= worldScreen"
	area 0 0 0 0
	}
	
---------------------------------------------------- 
-----------------------------------------------LUA TEXT
----------------------------------------------------
label
	{
		name 'overlayCombatLogBG'
		enabled "optionSeeLua == 1 and optionChatLua == 1 and luaViewed == 1 and curSeeLua == 1"
		area 0 616 407 149
		fill 0 0 0 150
	}
	label
	{
		name "overlayChatDisplayBackground"
		enabled "optionSeeLua == 1 and optionChatLua == 1 and luaViewed == 1 and curSeeLua == 1"
		area 0 616 411 151
		rectangle 2
		rectangle opacity -1
	}
	label
	{
		name "overlayChatEditBackground"
		enabled "optionSeeLua == 1 and optionChatLua == 0 and luaViewed == 1 and curSeeLua == 1"
		area 0 702 411 65
		rectangle 1
		rectangle opacity 150
	}
	label
	{
		name "overlayBackground"
		enabled "optionSeeLua == 1 and optionChatLua == 0 and luaViewed == 1 and curSeeLua == 1"
		opacity lua "getMPBackgroundOpacity()"
		area 0 633 411 69
		rectangle 1
	}
	label
	{
		name "overlayText"
		enabled "optionSeeLua == 1 and optionChatLua == 0 and luaViewed == 1 and curSeeLua == 1"
		opacity lua "getMPMessageOpacity()"
		area 0 633 411 69
		text style "normal"
		text lua "getMPMessage()"
		pad 8 8 8 8
	}
	text
	{
		name "overlaychahist"
		enabled "optionSeeLua == 1 and luaViewed == 1 and curSeeLua == 1"
		area 313 745 52 22
		bam "CHAHIST2"
		scaleToClip
		frame lua "showMessagesButtonFrame()"
		--tooltip lua "getChatBarTooltip()"
		action
		"
			toggleOverlayMessages()
			chatboxScrollToBottom = 1
			if curSeeLua == 0 then
				Infinity_FocusTextEdit('')
			end
		"
	}
	
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1 --controls the word wrapping on dialogue box, 0 0 808 -1
				text lua "combatLog[rowNumber]" -- vs. Reflex Change
				text style "normal"
			}
		}
		enabled "optionSeeLua == 1 and optionChatLua == 1 and luaViewed == 1 and curSeeLua == 1"
		name "overlayMessageBox" 
		area 18 626 381 92 --full screen scaled increase by 18y for new row
		rowheight dynamic
		table "combatLog"
		align center center
		hideHighlight
		scrollbar 'guiwrsp'
		scrollbar func "chatboxScroll"
		scrollbar skipReset
	}
	label
    {
        area 0 70 50 50
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen and curSeeLua == 1"
        on return
        action
		"
			if not B3PreventFocus then
				if Infinity_TextEditHasFocus() == 0 then
					Infinity_FocusTextEdit('overlayChatEdit')
				end
			else
				B3PreventFocus = false
			end
			
		"
	}
	label
    {
        area 0 120 50 50
		enabled "optionSeeLua == 1 and Infinity_TextEditHasFocus() == 1 and luaViewed == 1 and e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen and curSeeLua == 1"
		on escape
        action
		"
			Infinity_FocusTextEdit('')
		"
	}
	edit
	{
		name		"overlayChatEdit"
		enabled "optionSeeLua == 1 and luaViewed == 1 and e:IsMultiplayer() and curSeeLua == 1"
		area		18 718 353 28
		var			mpChatEditOverlay
		scrollbar	'guiwrsp'
		text style	"edit"
		placeholder "ENTER_TEXT"
		text color G
		text point 12
		align left bottom
		maxlines 2
		action
		"
			if B3PreventFocus then B3PreventFocus = false; 
				return 0 
			end
				if not (key_pressed == 13) then return 1
			end
			if (key_pressed == 13) and (mpChatEditOverlay == '') then
				B3PreventFocus = true
				Infinity_FocusTextEdit('')
				return 0
			end
			if (key_pressed == 13) then
				B3PreventFocus = true
				Infinity_SendChatMessage(mpChatEditOverlay, false) 
				mpChatEditOverlay=''
				Infinity_FocusTextEdit('')
				return 0
			end
		"
	}
	handle
	{
		name "overlayChatHandle"
		area 0 616 411 35
		enabled "optionSeeLua == 1 and optionChatLua == 1 and luaViewed == 1 and curSeeLua == 1"
		actionDrag
		"
			dragOverlayChat(motionY)
		"
	}

---------------------------------------------------- 
-----------------------------------------------MP CHATS
----------------------------------------------------

	label
	{
		name 'mpCombatLogBG'
		enabled "optionChat3 == 1 and luaViewed == 0 and curSeeChat3 == 1"
		area 0 616 407 149
		fill 0 0 0 150
	}
	label
	{
		name "mpChatDisplayBackground"
		enabled "optionChat3 == 1 and luaViewed == 0 and curSeeChat3 == 1"
		area 0 616 411 151
		rectangle 2
		rectangle opacity -1
	}
	label
	{
		name "mpChatEditBackground"
		enabled "optionChat3 == 0 and luaViewed == 0 and curSeeChat3 == 1"
		area 0 702 411 65
		rectangle 1
		rectangle opacity 150
	}
	label
	{
		name "overlayMPBackground"
		enabled "optionChat3 == 0 and luaViewed == 0 and curSeeChat3 == 1"
		opacity lua "getMPBackgroundOpacity()"
		area 0 633 411 69
		rectangle 1
	}
	label
	{
		name "overlayMPText"
		enabled "optionChat3 == 0 and luaViewed == 0 and curSeeChat3 == 1"
		opacity lua "getMPMessageOpacity()"
		area 0 633 411 69
		text style "normal"
		text lua "getMPMessage()"
		pad 8 8 8 8
	}
	text
	{
		name "mpchahist"
		enabled "luaViewed == 0 and curSeeChat3 == 1"
		area 313 745 52 22
		bam "CHAHIST2"
		scaleToClip
		frame lua "showMessagesButtonFrame()"
		--tooltip lua "getChatBarTooltip()"
		action
		"
			toggleDialogShowMessages()
			chatboxScrollToBottom = 1
			if optionChat3 == 0 then
				Infinity_FocusTextEdit('')
			end
		"
	}
	
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1 --controls the word wrapping on dialogue box, 0 0 808 -1
				text lua "combatLog[rowNumber]" -- vs. Reflex Change
				text style "normal"
			}
		}
		enabled "optionChat3 == 1 and luaViewed == 0 and curSeeChat3 == 1"
		name "MPCMessageBox" 
		area 18 626 381 92 --full screen scaled increase by 18y for new row
		rowheight dynamic
		table "combatLog"
		align center center
		hideHighlight
		scrollbar 'guiwrsp'
		scrollbar func "chatboxScroll"
		scrollbar skipReset
	}
	label
    {
        area 0 70 50 50
		enabled "luaViewed == 0 and e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen and curSeeChat3 == 1"
        on return
        action
		"
			if not B3PreventFocus then
				if Infinity_TextEditHasFocus() == 0 then
					Infinity_FocusTextEdit('mpChatEdit')
				end
			else
				B3PreventFocus = false
			end
			
		"
	}
	label
    {
        area 0 120 50 50
		enabled "Infinity_TextEditHasFocus() == 1 and luaViewed == 0 and e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen and curSeeChat3 == 1"
		on escape
        action
		"
			Infinity_FocusTextEdit('')
		"
	}
	edit
	{
		name		"mpChatEdit"
		enabled "luaViewed == 0 and e:IsMultiplayer() and e:GetActiveEngine() ~= multiplayerScreen and curSeeChat3 == 1"
		area		18 718 353 28
		var			mpChatEditOverlay
		scrollbar	'guiwrsp'
		text style	"edit"
		placeholder "ENTER_TEXT"
		text color G
		text point 12
		align left bottom
		maxlines 2
		action
		"
			if B3PreventFocus then B3PreventFocus = false; 
				return 0 
			end
				if not (key_pressed == 13) then return 1
			end
			if (key_pressed == 13) and (mpChatEditOverlay == '') then
				B3PreventFocus = true
				Infinity_FocusTextEdit('')
				return 0
			end
			if (key_pressed == 13) then
				B3PreventFocus = true
				Infinity_SendChatMessage(mpChatEditOverlay, false) 
				mpChatEditOverlay=''
				Infinity_FocusTextEdit('')
				return 0
			end
		"
	}
	handle
	{
		name "mpChatHandle"
		area 0 616 411 35
		enabled "optionChat3 and luaViewed == 0 and curSeeChat3 == 1"
		actionDrag
		"
			dragMPChat(motionY)
		"
	}
---------------------------------------------------- 
-----------------------------------------------MAP 2BUTTONS
----------------------------------------------------

-- if put into a regular menu, they will fade slightly when transitioning from one engine to the next, with the overlay, they stay persistent
	label
	{
		enabled "curActiveEngine == worldMapScreen and luaViewed == 1"
		on return
	}
}
`
function reinitQuests()
	for questIdx, quest in pairs(quests) do
		local noquest = true
		for objIdx,objective in pairs(quest.objectives) do
			local noobjective = true
			for entryIdx,entry in pairs(objective.entries) do
				if quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= nil then
					noobjective = false
				end
			end
			if noobjective then
				quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			end
			if quests[questIdx].objectives[objIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].stateType ~= nil then
				noquest = false
			end
		end
		if noquest then
			quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		end
	end
end
function initQuests()
	--instead of always searching the quests, just map entry ids to their quests
	entryToQuest = {}
	buildQuestsTable()
	for questIdx, quest in pairs(quests) do
		quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		for objIdx,objective in pairs(quest.objectives) do
			quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			for entryIdx,entry in pairs(objective.entries) do
				quests[questIdx].objectives[objIdx].entries[entryIdx].stateType = const.ENTRY_TYPE_NONE
				entryToQuest[entry.id] = questIdx
			end
		end
	end
end

function compareByRecvTime(o1,o2)
	if(o1 == nil) then return false end
	if(o2 == nil) then return true end
	if(not o1.recvTime and not o2.recvTime) then return false end
	if(not o1.recvTime) then return false end
	if(not o2.recvTime) then return true end
	return o1.recvTime > o2.recvTime
end

function buildEntry(text, recvTime, stateType, chapter, timeStamp)
	local entry =
	{
		text = text,
		recvTime = recvTime,
		stateType = stateType,
		timeStamp = timeStamp,
		chapters = {}
	}
	entry.chapters[chapter] = 1
	return entry
end


function createEntry(questId, objectiveId, entryId, previousObjectives, subGroup)
	local quest = findQuest(questId)
	if(not quest) then
		Infinity_Log("Failed to create entry: " .. entryId .. "for quest: " .. questId)
		return
	end

	--parse the entry out into an objective and entry
	local entry = {}
	local objective = {}
	entry.text = ""
	entry.previousObjectives = {} --this feature will be unused for now.
	entry.id = entryId

	--set up this entry's subgroup
	entry.subGroup = subGroup
	if(subGroup) then
		if(not subGroups[subGroup]) then subGroups[subGroup] = {} end
		table.insert(subGroups[subGroup],entry)
	end

	--This code is different if we're sod or BG
	local lineCount = 1
	local fullStr = Infinity_FetchString(entryId)
	for line in string.gmatch(fullStr, "[^\r\n]+") do
		if(lineCount == 1) then
			--objective text is first line.
			objective.text = line
		end
		if(lineCount > 1) then
			--entry text is everything after first
			entry.text = entry.text .. line .. "\n"
		end
		lineCount = lineCount + 1
	end
	if(lineCount == 2) then
		--it looks like sometimes entries are just an unbroken paragraph
		--in this case the entry should get the paragraph and the objective gets nothing
		--note lineCount == 2 is a bit misleading, there's only one line in this case.
		entry.text = objective.text
		objective.text = Infinity_FetchString(quest.text)
	end
	objective.entries = {entry}
	table.insert(quest.objectives,objective)
end


function setSelectedQuest(id)
	--set to the correct state
	local quest = quests[entryToQuest[id]]
	if(not quest) then return end
	journalMode = 0
	for k,objective in pairs(quest.objectives) do
		for k2,entry in pairs(objective.entries) do
			if(entry.id == id) then
				if entry.stateType == const.ENTRY_TYPE_COMPLETE then
					journalMode = 0
				end
				if entry.stateType == const.ENTRY_TYPE_INFO then
					journalMode = 0
				end
				if entry.stateType == const.ENTRY_TYPE_USER then
					journalMode = 2
				end
				break
			end
		end
	end
	updateDisplayJournal()
end

--Update a journal entry by the strref/journalId
function updateJournalEntry(journalId, recvTime, stateType, chapter, timeStamp)
	if stateType == const.ENTRY_TYPE_USER then
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(userNotes,entry)

		--update display data
		buildQuestDisplay()
		return
	end

	--find the quest that is parent to this entry.
	--NOTE this can be placed in a loop if there needs to be more than quest to an entry
	--this would just mean entryToQuest returns a table that we iterate over
	local questId = entryToQuest[journalId]
	if questId == nil then
		--add loose entries into the looseEntries table so they still get displayed.
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(looseEntries,entry)

		--update display data
		buildQuestDisplay()
		return
	end

	local quest = quests[questId]
	if quest == nil then
		print_r("JOURNAL ERROR - no quest entry associated with questId "..questId)
		return
	end

	local previous = nil
	--traverse quest to find objective and entry
	for objIdx,objective in pairs(quest.objectives) do
		for entryIdx,entry in pairs(objective.entries) do
			if(entry.id == journalId) then
				--now we know where our quest, objective, and entry are
				--update quest, objective and entry appropriately
				entry.recvTime = recvTime
				entry.stateType = stateType
				if(not entry.chapters) then entry.chapters = {} end
				entry.chapters[chapter] = 1
				entry.timeStamp = timeStamp
				objective.entries[entryIdx] = entry

				objective.recvTime = recvTime
				if(not objective.chapters) then objective.chapters = {} end
				objective.chapters[chapter] = 1
				if(objective.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					objective.stateType = stateType
				end
				quest.objectives[objIdx] = objective

				quest.recvTime = recvTime
				if(not quest.chapters) then quest.chapters = {} end
				quest.chapters[chapter] = 1
				if(quest.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					quest.stateType = stateType
				end

				--mark any previous objective as complete
				if(entry.previous ~= nil) then
					for objIdx2,objective2 in pairs(quest.objectives) do
						for k, prevObj in pairs(entry.previous) do
							if(prevObj == objective2.text) then
								quest.objectives[objIdx2].stateType = const.ENTRY_TYPE_COMPLETE
							end
						end
					end
				end

				quests[questId] = quest

				--remove all in subgroup (except myself!)
				if(stateType == const.JOURNAL_STATE_COMPLETE and entry.subGroup) then
					for k,v in pairs(subGroups[entry.subGroup]) do
						if(v.id ~= entry.id) then
							removeJournalEntry(v.id)
						end
					end
				end
			end
		end
	end
	--sort the objectives.
	table.sort(quest.objectives,compareByRecvTime)

	if stateType == const.ENTRY_TYPE_INFO then
		--add loose entries into the looseEntries table so they still get displayed.
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(looseEntries,entry)
	end

	--update display data
	buildQuestDisplay()
end

--this should maybe be done recursively, but i kinda want direct control over each level


function buildQuestDisplay()
	--this is basically just a flatten
	questDisplay = {}
	journalDisplay = {}
	local journalEntries = {}
	
	for k,quest in pairs(quests) do
		--skip inactive quests
		if(quest.stateType ~= nil and quest.stateType ~= const.ENTRY_TYPE_NONE) then
			quest.quest = 1 -- tell the renderer what type of entry this is
			table.insert(questDisplay, quest)
			local curQuestIdx = #questDisplay --we'll need to modify current quest with it's children, store a reference.
			local questChildren = {}
			for k2,objective in pairs(quest.objectives) do
				if(objective.stateType ~= const.ENTRY_TYPE_NONE) then
					objective.objective = 1
					objective.parent = curQuestIdx

					if(objective.stateType ~= const.ENTRY_TYPE_INFO) then
						--info entries should not go into quests
						table.insert(questDisplay, objective)
						table.insert(questChildren, #questDisplay)
					end
					local curObjectiveIdx = #questDisplay
					local objectiveChildren = {}
					for k3,entry in pairs(objective.entries) do
						entry.entry = 1
						entry.parent = curObjectiveIdx
						table.insert(questDisplay, entry)
						table.insert(objectiveChildren, #questDisplay)
					end
					questDisplay[curObjectiveIdx].children = objectiveChildren
				end
			end
			questDisplay[curQuestIdx].children = questChildren
		end
	end

	--add the loose entries (entries without quests) to the journal display
	for k,entry in pairs(looseEntries) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end

	--add the user entries to the journal display
    for k,entry in pairs(userNotes) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
	--sort the entries
	table.sort(journalEntries, compareByRecvTime)
	
	for k,entry in pairs(journalEntries) do
		local title  = {}
		title.title = 1
		title.text = entry.timeStamp
		title.chapters = entry.chapters
		table.insert(journalDisplay,title)
		table.insert(journalDisplay, entry)
	end
	
	--add the user entries to the user display
	table.sort(userNotes, compareByRecvTime)
	userDisplay = {}
	for k,entry in pairs(userNotes) do
		local title  = {}
		title.title = 1
		title.text = entry.timeStamp
		title.chapters = entry.chapters
		table.insert(userDisplay,title)
		entry.entry = 1
		table.insert(userDisplay,entry)
	end
end


function containsChapter(tab, chapter)
	if(not tab) then return nil end
	return tab[chapter]
end
function childrenContainsChapter(children)
	for k,v in pairs(children) do
		if containsChapter(questDisplay[v].chapters,chapter) then
			return questDisplay[v].chapters
		end
	end
	return nil
end

function getFinished(row)
	if(questDisplay[row].stateType == const.ENTRY_TYPE_COMPLETE) then return 1 else return nil end
end

function questEnabled(row)
	return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
	
end

function getQuestText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = Infinity_FetchString(rowTab.text)
	
	if(getFinished(row)) then
		text = "^0xFFEEFFFF" .. text .. ": (" .. t("Finished") .. ")^-"
	end

	return text
end

function objectiveEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.objective == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end
	if(questEnabled(rowTab.parent) and questDisplay[rowTab.parent].expanded) then return 1 else return nil end
end

function getObjectiveTextN(row) -- displays only date
	return questDisplay[row].timeStamp .. "\n"
end

function entryEnabled(row)
	local rowTab = questDisplay[row]
	if(rowTab == nil or rowTab.entry == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end
	if(objectiveEnabled(rowTab.parent)) then return 1 else return nil end
end

function getEntryText(row)
	local text = questDisplay[row].text
	if text:byte(#text) ~= 10 then
		text = text .. '\n'
	end
	return text
end

-- begin journalDisplay

function getTitleEnabled(row)
	return journalDisplay[row].title and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end

function getTitleText(row)
	return journalDisplay[row].text
end

function getJournalEnabled(row)
	return journalDisplay[row].entry and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end

function getJournalEntryText(row)
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == nil or text == "") then
		text = journalDisplay[row].text
	end
	
	if(journalSearchString and journalSearchString ~= "") then
		--do the search string highlight
		text = highlightString(text, journalSearchString, "^0xFF0000FF")
	end
	
	return text
end

-- end journalDisplay

function getJournalEntryRef(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(not entry) then return end
	if(entry.title) then
		return journalDisplay[selectedJournal + 1].text
	else
		return entry.text
	end
end

-- user entries only

function getTitleEnabledUser(display, row)
	return display[row].title and containsChapter(display[row].chapters,chapter) and journalContainsSearchString(row)
end

function getTitleTextUser(display, row)
	return display[row].text
end

function getJournalEnabledUser(display, row)
	return display[row].entry and containsChapter(display[row].chapters,chapter) and journalContainsSearchString(row)
end

function getJournalTextUser(display, row)
	local text = Infinity_FetchString(display[row].text)
	if(text == nil or text == "") then
		text = display[row].text
	end
	
	if(journalSearchString and journalSearchString ~= "") then
		--do the search string highlight
		text = highlightString(text, journalSearchString, "^0xFF0000FF")
	end
	
	return text
end



function EditAction()
	journalNoteEditRef = getJournalEntryRef(selectedUser)
	journalNoteOld = Infinity_FetchString(journalNoteEditRef)
	journalNoteEdit = journalNoteOld
	journalMode = 2
end

-- end user entries



function questContainsSearchString(row)
	if(QuestSearchString == nil or QuestSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(questDisplay[row].text)
	if(string.find(string.lower(text),string.lower(QuestSearchString))) then return 1 end -- string contains search string.
	if(questDisplay[row].children == nil) then return nil end --no children, does not contain search string.
	for k,v in pairs(questDisplay[row].children) do
		--Infinity_Log(v)
		if(QuestSearchString(v)) then return 1 end -- one of children contains search string
	end
	return nil --does not contain search string
end


function journalContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == "") then text = journalDisplay[row].text end --no stringref, use the text.
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	
	--check if the corresponding row to this one contains the string.
	local pairText = nil
	if(journalDisplay[row].title) then
		--check the corresponding entry
		pairText = Infinity_FetchString(journalDisplay[row+1].text) or journalDisplay[row+1].text
		if(pairText == "") then pairText = journalDisplay[row+1].text end 
	else 
		if (journalDisplay[row].entry) then
			pairText = Infinity_FetchString(journalDisplay[row-1].text) or journalDisplay[row-1].text
			if(pairText == "") then pairText = journalDisplay[row-1].text end 
		end
	end
	if(string.find(string.lower(pairText),string.lower(journalSearchString))) then return 1 end -- pair string contains search string.

	
-- end journalDisplay search, begin userDisplay search

	local text2 = Infinity_FetchString(userDisplay[row].text)
	if(text2 == "") then text2 = userDisplay[row].text end --no stringref, use the text.
	if(string.find(string.lower(text2),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	
	--check if the corresponding row to this one contains the string.
	local pairText2 = nil
	if(userDisplay[row].title) then
		--check the corresponding entry
		pairText2 = Infinity_FetchString(userDisplay[row+1].text) or userDisplay[row+1].text
		if(pairText2 == "") then pairText2 = userDisplay[row+1].text end 
	else 
		if (userDisplay[row].entry) then
			pairText2 = Infinity_FetchString(userDisplay[row-1].text) or userDisplay[row-1].text
			if(pairText2 == "") then pairText2 = userDisplay[row-1].text end 
		end
	end
	if(string.find(string.lower(pairText2),string.lower(journalSearchString))) then return 1 end -- pair2 string contains search string.
	
	return nil --does not contain search string, keep this
end


function dragJournal()
	local offsetX,offsetY,menuWidth,menuHeight = Infinity_GetMenuArea('JOURNAL')
	offsetX = offsetX + motionX
	offsetY = offsetY + motionY
	
	--clamping
	if(offsetX < 0) then
		offsetX = 0
	end
	if(offsetY < 50) then
		offsetY = 50
	end
	
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	if(offsetX > screenWidth - 0 - menuWidth) then
		offsetX = screenWidth - 0 - menuWidth
	end
	if(offsetY > screenHeight - menuHeight) then
		offsetY = screenHeight - menuHeight
	end
	
	Infinity_SetOffset('JOURNAL', offsetX, offsetY)
end

function getArrowFrame(row)
	if(questDisplay[row] == nil or (questDisplay[row].objective == nil and questDisplay[row].quest == nil)) then return "" end

	
	if(questDisplay[row].expanded) then
		return 0
	else
		return 1
	end
end


function selectedJournal()
    if scrollDirection > 0 then
        incrChapter(-1)
	elseif scrollDirection < 0 then
        incrChapter(1)
	end
end 
--function pauseJournal()
--	if not worldScreen:CheckIfPaused() then
--		worldScreen:TogglePauseGame(true)
--	end
--end
--journalMode = 0
--editMode = 0

QuestSearchString = ""
journalSearchString = ""

`

menu
{
	name 'JOURNAL' -- journal menu
	offset 0 50
	onOpen
	"
		
		reinitQuests()
		buildQuestDisplay()
		chapter = math.max(0, Infinity_GetMaxChapterPage())
		journalMode = 0
--		local tf = next(textflashes)
--		if tf then
--			setSelectedQuest(textflashes[tf][5])
--			textflashes[tf] = nil
--		end
	"


	label
	{
		area 0 -45 949 611
		mosaic 'y5journ'
	}
	
	label -- clears search fields and is only active when text is there
	{
	area 0 0 50 50
	enabled "Infinity_IsMenuOnStack('JOURNAL')"
	on escape
	action
	"
			journalSearchString=''
			Infinity_FocusTextEdit('')
			Infinity_PopMenu('JOURNAL')
	"
	}


	handle
	{
		area 0 -45 949 611
		actionDrag
		"
			dragJournal()
		"
	}
	
	button
	{
		area 90 0 50 70
		bam "parown"
		sequence 0
		actionScroll "incrChapter()" 
		--text style "button"
		action
		"
			incrChapter(-1)
		"
	}
	button
	{
		area 340 0 50 70
		bam "parown"
		sequence 1
		actionScroll "incrChapter()" 
		--text style "button"
		action
		"
			incrChapter(1)
		"
	}
--	button
--	{
--		area 85 485 30 30
--		bam GUIOSW
--		sequence 2
--		scaleToClip
--		action
--		"
--			QuestSearchString = ''
--			Infinity_FocusTextEdit('QuestSearch')
--		"
--	}
	button
	{
		area 565 485 30 30
		bam GUIOSW
		enabled "journalMode == 0 or journalMode == 1"
		sequence 2
		scaleToClip
		action
		"
			journalSearchString = ''
			Infinity_FocusTextEdit('JournalSearch')
		"
	}
--	edit
--	{
--		name "QuestSearch"
--		area 120 485 250 30
--		var QuestSearchString
--		placeholder "search quests..."
--		text style "edit"
--		text color 0 0 0 255
--		maxlines 1
--		text point 14
--		align left bottom
--		fill		112 111 111 64
--	}
	edit
	{
		name "JournalSearch"
		enabled "journalMode == 0 or journalMode == 1"
		area	600 485 250 30
		var journalSearchString
		placeholder "JOURNAL_SEARCH"
		text style "edit"
		text color 0 0 0 255
		maxlines 1
		text point 14
		align left bottom
		fill		112 111 111 64
		--EXTEXT9
	}
	
	label -- Initial
	{
		enabled "chapterText():byte() < 194"
		area 156 -2 50 50
		bam INITIALS
		scaleToClip
		sequence lua "chapterText():byte() - 1"
	}
	label -- Chapter
	{
		enabled "chapterText():byte() < 194"
		area 207 10 120 50
		text lua "chapterText():sub(2)"
		text style "title"
		align left center
		text point 18
		text color 0 0 0 255
	}
--	label
--	{
--		enabled "journalMode == 2"
--		area 485 70 425 36
--		text style "normal_parchment"
--		text "WRITE_ENTRY_TEXT"
--		align center center
--		
--	}
	label
	{
		enabled "journalMode == 2"
		area 495 70 415 36
		text style "normal_parchment"
		text color 0 0 0 255
		text lua "Infinity_GetTimeString()"
		text point 14
	}
	label
	{
		enabled "journalMode == 2"
		area 495 105 382 25
		mosaic PAPERSEP
	}
	
	list --quest
	{
		column
		{
			width 100
			label  -- -/+ before quests
			{
				area 0 10 31 31
				enabled "questEnabled(rowNumber)"
				bam "PCHEV"
				frame lua "getArrowFrame(rowNumber)"
				text style "label_parchment"
			}
			label
			{
				enabled "questEnabled(rowNumber)"
				area 30 7 355 -1
				rectangle 1
				rectangle opacity 150
			}
			label  -- quest description
			{
				enabled "questEnabled(rowNumber)"
				area 45 16 -1 -1
				text lua "getQuestText(rowNumber)"
				text style "normal_parchment"
				text color 6
			}
			label --shows dates
			{
				enabled "entryEnabled(rowNumber)"
				area 5 10 -1 -1
				text lua "getObjectiveTextN(rowNumber)"
				text style "normal_parchment"
			}
			label -- is display text under expanded quest
			{
				enabled "entryEnabled(rowNumber)"
				area 5 40 -1 -1
				text lua "getEntryText(rowNumber)"
				text style "normal"
				text color 0 0 0 255
			}
		}

		rowheight dynamic
		hidehighlight
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'GUISCRP'
		area		36 70 425 395
		action
		"
			if questDisplay[selectedQuest].quest then
				if(questDisplay[selectedQuest].expanded) then
					questDisplay[selectedQuest].expanded = nil
				else
					questDisplay[selectedQuest].expanded = 1
				end
			end
		"
		
	}
	
	list
	{
		column
		{
			width 100
			label -- shows dates for entries

			{
				enabled "getTitleEnabled(rowNumber)"
				area 35 0 -1 -1
				pad 0 16 0 0
				text lua "getTitleText(rowNumber)"
				text style "normal_parchment"
				text color 0 0 0 255
			}
			label -- shows actual journal entry
			{
				enabled "getJournalEnabled(rowNumber)"
				area 5 0 -1 -1
				pad 0 10 0 0
				text lua "getJournalEntryText(rowNumber)"
				text style "normal_parchment"
				text color 0 0 0 255
			}
			
		}
		name "journalList"
		rowheight dynamic
		hidehighlight
		table		"journalDisplay"
		enabled     "journalMode == 0"
		var			selectedJournal
		scrollbar	'GUISCRP'
		area		485 70 425 395

	}
	
	list -- user entries
	{
		column
		{
			width 100
						
			label -- shows dates for entries
			{
				enabled "getTitleEnabledUser(userDisplay, rowNumber) and journalMode == 1"
				area 35 0 -1 -1
				pad 0 16 0 0
				text lua "getTitleTextUser(userDisplay, rowNumber)"
				text style "normal_parchment"
				text color 0 0 0 255
			}
			label -- shows actual journal entry
			{
				enabled "getJournalEnabledUser(userDisplay, rowNumber) and journalMode == 1"
				area 5 0 -1 -1
				pad 0 10 0 0
				text lua "getJournalTextUser(userDisplay, rowNumber)"
				text style "normal_parchment"
				text color 0 0 0 255
			}
			
		}
		rowheight dynamic
		hidehighlight
		table		"userDisplay"
		enabled     "journalMode == 1"
		var			selectedUser
		scrollbar	'GUISCRP'
		area		485 70 425 395
		action
		"
			if e:IsMultiplayer() and not e:IsHosting() then
				return nil
			else
				EditAction()
			end
		"
	}
	
--if journalSearchString ~= 'My Notes:' then
--	journalSearchString = 'My Notes:'
--	selectedJournal = 0
--else
--	EditAction()
--end

-- user edit entry	
	edit
	{
		name "journalEntryW"
		enabled "journalMode == 2"
		area		495 130 415 335
		text style	"edit_parchment"
		placeholder "JOURNAL_ENTRY"
		var			journalNoteEdit
		scrollbar	'GUISCRP'
		
		
	}
	
	button
	{
		enabled "journalMode == 2"
		area 500 465 162 47
		bam "PAPERBUT"
		sequence 1
		text "JOURNAL_DELETE"
		text style "button_parchment"
		action 
		"
			journalNoteEdit = ''
			Infinity_FocusTextEdit('journalEntryW')
		"
	}	
	
	button
	{
		enabled "journalMode == 2"
		area 720 465 162 47
		bam "PAPERBUT"
		sequence 1
		text "DONE_BUTTON"
		text style "button_parchment"
		action 
		"
			if(journalNoteEditRef == nil) then
				Infinity_OnAddUserEntry(journalNoteEdit)
			else
				Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			end

			if journalMode ~= 0 then
				journalSearchString = ''
				journalMode = 0
			end
		"
	}	


	button
	{
		area 498 4 130 44
		--glow lua "journalMode == 0"
		--text "QUESTS_BUTTON"
		text "JOURNAL_ALL"
		bam "PAPERBUT"
		scaleToClip
		text style "button"
		text color 0 0 0 255
		text point 14
		pad 0 0 0 0
		action
		"
			if journalMode ~= 0 then
				journalSearchString = ''
				journalMode = 0
			else
				journalSearchString = ''
			end
		"
	}
	
	button
	{
		area 633 -4 130 60
		--glow lua "journalMode == 0"
		--text "QUESTS_BUTTON"
		text "JOURNAL_EDIT"
		bam "PCHAPTER"
		scaleToClip
		text style "button"
		text color 0 0 0 255
		text point 14
		pad 0 0 0 0
		action
		"
			if journalMode ~= 1 then
				journalMode = 1
				selectedUser = 0
			end
		"
	}

	button
	{
		area 768 0 130 44
		--glow lua "journalMode == 2"
		--text "JOURNAL_BUTTON"
		bam "PAPERBUT"
		sequence 1
		scaleToClip
		text "JOURNAL_ADD"
		text style "button"
		text color 0 0 0 255
		text point 14
		pad 0 7 0 0
		action
		"
			if e:IsMultiplayer() and not e:IsHosting() then
				return nil
			else
				if (journalMode ~= 2) then
					journalMode = 2
					journalNoteEdit = 'My Notes:' .. '\n\n'
					journalNoteEditRef = nil
				end
				
				if (journalMode == 2) then
					return nil
				end
			end
		"
	}
  

}
`
function processQuestsWithStyle()
	out = ""
	for k,v in pairs(quests_old) do
		local questStrref = v[3]
		out = out .. "createQuest    ( " .. questStrref .. " )\n"
		
		for k2,v2 in pairs(journals_quests_old) do
			if(v2[2] == k) then
				local subgroup = v2[const.ENTRIES_IDX_SUBGROUP]
				if(subgroup == 0) then subgroup = "nil" end
				out = out .. "createEntry    ( " .. questStrref .. ", -1, " .. v2[1] .. ", {}, " .. subgroup .." )\n"
			end
		end
	end
	Infinity_Log(out)
end
`
menu
{
	name 'MESSAGE_SCREEN'
	align center center
	label
	{
		area 0 0 657 234
		mosaic GUIERR6
	}
	label
	{
		area 29 21 580 126
		text lua "Infinity_FetchString(messageScreenText)"
		text style	"label"
	}
}
`
function getDLCDescription()
	return Infinity_FetchString(dlcScreen:GetDLCDescription())
end
function getDLCTitle()
	return Infinity_FetchString(dlcScreen:GetDLCTitle())
end
function getDLCIndex()
	return dlcScreen:GetDLCIndex() .. "/" .. dlcScreen:GetDLCCount()
end
function isDLCBuyButtonClickable()
	local isBought = dlcScreen:GetDLCBought()
	return isBought == false
end
`
menu
{
	name 'START_DLC'
	align center center

	label
	{
		area 0 0 1024 768
		mosaic 'GUIDLC'
	}

	label
	{
		area		60 14 906 42
		text        "STORE_LABEL"
		text style  'title'
		text align	center center
	}

	label
	{
		area		574 582 346 28
		text lua	"getDLCIndex()"
		text style  'title'
		text align	center center
	}

	label
	{
		area		578 162 336 52
		text lua	"getDLCTitle()"
		text style  'title'
		text align	center center
	}
		
	text
	{
		area		578 220 336 362
		text lua	"getDLCDescription()"
		text style  'normal'
		scrollbar	'GUISCRC'		
	}
	
	label
	{
		area 154 98 366 566
		bitmap lua "dlcScreen:GetDLCImage()"
	}

	button 
	{
		bam 'GUIPRC'
		sequence 0
		area 22 274 56 140
		align center center
		action 
		"
			dlcScreen:DecrementDLCIndex()
		"
	}

	button 
	{
		bam 'GUIPRC'
		sequence 1
		area 946 270 52 140
		align center center
		action 
		"
			dlcScreen:IncrementDLCIndex()
		"
	}

	button 
	{
		bam 'GUIOSTUL'
		sequence 0
		area 280 710 240 48
		align center center
		text style "button"
		text "BACK_BUTTON"
		action 
		"
			dlcScreen:OnDoneButtonClick()
		"
	}

	button 
	{
		bam 'GUIOSTCL'
		sequence 0
		area 602 646 302 46
		align center center
		text style "button"
		text "STRREF_GUI_DLC_RESTORE_PURCHASES"
		clickable lua "not e:IsAndroid()"
		action 
		"
			dlcScreen:RestorePurchases()
		"
	}

	button 
	{
		bam 'BUYBUTT'
		sequence 2
		area 530 710 238 48
		align center center
		text style "button"
		text "BUY_BUTTON"
		clickable lua "isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}
}

`
dlcStatusDescriptionText = ""
dlcStatusButtonText = ""
dlcStatusState = 0

DLC_STATE_WAITING = 0
DLC_STATE_IN_PROGRESS = 1
DLC_STATE_SUCCESS = 2
DLC_STATE_FAILED = 3
DLC_STATE_CANCELLED = 4
DLC_STATE_RESTORING_PURCHASES = 5
DLC_STATE_RESTORING_PURCHASES_COMPLETE = 6
DLC_STATE_DOWNLOADING = 7

function checkDLCState()
	dlcStatusState = dlcScreen:GetDLCState()
	if dlcStatusState == DLC_STATE_WAITING then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_WAITING")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_IN_PROGRESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_IN_PROGRESS")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_SUCCESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_SUCCESS")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_FAILED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_FAILED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_CANCELLED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_CANCELLED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES_COMPLETE then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES_COMPLETE")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_DOWNLOADING then
		dlcScreen:GetDownloadString()
		dlcStatusButtonText = ""
	else
		dlcStatusDescriptionText = "WAFFLES_Dont Know How We Got Here_WAFFLES"
		dlcStatusButtonText = "WAFFLES_WAFFLES_WAFFLES"
	end
end

function getDLCStatusText()
	checkDLCState()
	return dlcStatusDescriptionText
end
`
menu
{
	name 'START_DLC_STATUS'
	align center center

	label
	{
		area 0 0 408 420
		mosaic 'GUIERR'
	}

	label
	{
		area 86 76 236 84
		text style "label"
		text lua "getDLCStatusText()"
	}

	button 
	{
		bam 'GUIOSTUM'
		sequence 0
		area 104 320 202 46
		align center center
		text style "button"
		text lua "dlcStatusButtonText"
		enabled "dlcStatusState ~= DLC_STATE_DOWNLOADING"
		action 
		"
			dlcScreen:OnErrorButtonClick();
		"
	}
}
`	
	dialogTable = {}
	dialogOverflowTable = {}
	hasDialogResponse = nil
	
	chatboxScrollToBottom = nil
	chatboxScrollTimeLast = 0
	chatboxContentHeight = 0
	chatboxOverflowed = nil
	chatboxJumpToBottom = nil
	
	-- The following two values determine how many item entries can exist.  We trim 
	-- the number of entries to numDialogTrimEntries once it has overflowed that value
	-- by numDialogOverflowLimit.
	numDialogTrimEntries = 512
	numDialogOverflowEntries = numDialogTrimEntries + 128
	
	lastTrimmedContentHeight = 0
	
	function getNumDialogTableEntries()
		local count = 0
		for _ in pairs(dialogTable) do count = count + 1 end
		return count
	end
	
	function trimDialogTableSize()
		local  numTableEntries = getNumDialogTableEntries()
		if (numTableEntries > numDialogOverflowEntries) then
			local numEntriesToRemove = numTableEntries - numDialogTrimEntries
			while (numEntriesToRemove > 0) do
				-- Get our table entry and calculate its size
				local tableEntry = dialogTable[1]
				local delta = Infinity_GetContentHeight(styles.normal.font, w, tableEntry.text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
				chatboxContentHeight = chatboxContentHeight - delta
				lastTrimmedContentHeight = lastTrimmedContentHeight + delta
					
				table.remove(dialogTable, 1)
				numEntriesToRemove = numEntriesToRemove - 1
			end
		end
	end
	
	function buildResponsesList()

		hasDialogResponse = nil
		dialogResponses = {}
		for k,v in pairs(worldPlayerDialogChoices) do
			if v.marker then
				table.insert(dialogResponses, v)
				hasDialogResponse = 1
			end
		end
	end
	function canShowDialogButton(num)
		-- Show the buttons if we have a response, and the dialog button is not enabled
		return dialogResponses and dialogResponses[num] ~= nil and showDialogButtonChoices()
	end
	
	function addDialogMessage(text,marker,makeTop)
		local tab = {}
		tab.text = text
		tab.marker = marker
		if(marker) then 
			dialogViewMode = nil
			if(text == "") then
				--empty markers are a signal, we shouldn't actually display them.
				if(makeTop == true) then
					--we'll ensure the next line is included in the visible content.
					chatboxContentHeight = 0
				end
				return
			else
				hasDialogResponse = 1
			end
		end
		
		--Calculate running total of dialog content height
		local x,y,w,h = Infinity_GetArea("worldPlayerDialogChoicesList")
		w = w - 18 --account for scrollbar influence on width
		local delta = Infinity_GetContentHeight(styles.normal.font, w, text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
		chatboxContentHeight = chatboxContentHeight + delta
		
		if(marker and chatboxContentHeight > h) then
			--More to display than we have room for, put the responses in overflow and hide them behind button
			table.insert(dialogOverflowTable,tab)
		else
			table.insert(dialogTable,tab)
		end
		
		if(makeTop == true) then
			--we'll ensure the next line is included in the visible content.
			chatboxContentHeight = 0
		end
		
		trimDialogTableSize()
		
		triggerChatboxScroll()
		
		buildResponsesList()
	end
	function clearDialogResponses()
		for k,v in pairs(dialogTable) do
			if(v.marker) then
				table.remove(dialogTable,k)
				clearDialogResponses()
			end
		end
		hasDialogResponse = nil
		chatboxOverflowed = nil
		chatboxContentHeight = 0
		dialogOverflowTable = {}
	end
	function dialogEntrySelectable(row)
		return (dialogTable[row].marker ~= nil)
	end
	function showDialogButtonChoices()
		return not (not hasDialogResponse or dialogViewMode or #dialogOverflowTable > 0)
	end
	function getResponsePickable()
		return not hasDialogResponse or dialogViewMode or (gameOptions.m_bConfirmDialog == true)
	end
	function getDialogButtonText()
		if(dialogViewMode) then
			return t("DONE_BUTTON")
		end
		
		if(#dialogOverflowTable > 0) then
			return t("SHOW_MORE_RESPONSES_BUTTON")
		end
		
		if(gameOptions.m_bConfirmDialog == true) then
			return t("CHOOSE_RESPONSE_BUTTON")
		end
		
		return dialogButtonText
	end
	function triggerChatboxScroll()
		chatboxScrollToBottom = 1
		chatboxScrollTimeLast = Infinity_GetClockTicks()
	end
	
	function chatboxScroll(top, height, contentHeight)
		if(chatboxJumpToBottom and contentHeight > height) then
			chatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(chatboxScrollToBottom == 0) then
			--defer to default scrolling
			return nil
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			chatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - chatboxScrollTimeLast
		chatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			chatboxScrollToBottom = 0
			return height - contentHeight
		end
		return newTop
	end
	
	function displayOverflowResponses()
		for k,v in pairs(dialogOverflowTable) do
			table.insert(dialogTable,v)
		end
		dialogOverflowTable = {}
		triggerChatboxScroll()
		buildResponsesList()
	end
	function GetFirstMarkedResponse()
		for k,v in pairs(dialogTable) do
			if v.marker ~= nil then
				return k
			end
		end
		return -1	
	end
	function onDialogButtonClick()
		if(dialogViewMode) then
			--In dialog view mode this button closes the menu.
			worldScreen:StopDialogHistory()
			return
		end
		
		if(#dialogOverflowTable > 0) then
			displayOverflowResponses()
			return
		end

		if(gameOptions.m_bConfirmDialog == true and hasDialogResponse) then
			-- if confirm dialog and choices available.
			worldScreen:OnDialogReplyClick(dialogTable[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
			return
		else
			-- no choices, just step.
			worldScreen:StepDialog()
		end
	end
	function getDialogRowClickable(row)
		return dialogTable[row].marker ~= nil
	end
	function isTouchActionbar()
		--Make this read from an option to make it easy to switch out.
		local default = 0
		if(e:IsTouchUI()) then default = 1 end
		local val = Infinity_GetINIValue('Program Options', 'Use Touch Actionbar', default)
		if (val ~= 0) then
			return 1
		else
			return nil
		end
	end
`
menu
{
	name 'WORLD_DIALOG_LEFT'
	align left center
	ignoreEsc
	--ignoreFocus 1
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWLSP
	}
}
menu
{
	name 'WORLD_DIALOG_LEFT_BUTTONS'
	align left center
	ignoreEsc
	--ignoreFocus 1
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'...'"
		text style "button"
		pad -3 -6 0 0
		enabled "not showDialogButtonChoices()"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			onDialogButtonClick()
		"
	}

	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'1'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(1)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[1].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'2'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(2)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[2].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'3'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(3)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[3].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'4'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(4)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[4].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'5'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(5)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[5].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'6'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(6)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[6].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'7'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(7)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[7].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'8'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(8)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[8].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'9'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(9)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[9].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'10'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(10)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[10].marker)
		"
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT'
	align right center
	ignoreEsc
	--ignoreFocus 1
	enabled "canShowDialogButton(11)"
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWRSP
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT_BUTTONS'
	align right center
	ignoreEsc
	--ignoreFocus 1
	enabled "canShowDialogButton(11)"
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'11'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(11)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[11].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'12'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(12)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[12].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'13'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(13)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[13].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'14'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(14)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[14].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'15'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(15)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[15].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'16'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(16)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[16].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'17'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(17)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[17].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'18'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(18)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[18].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'19'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(19)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[19].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'20'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(20)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[20].marker)
		"
	}
}
`
	currentButtonHelp = 11
	buttonHelp = 
	{
		{'GUILS10', 	 0,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_RETURNTOGAME'}, 			--  1	return to game
		{'GUILS10', 	 1,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAP'}, 					--  2	map
		{'GUILS10', 	 2,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_JOURNAL'},				--  3	journal
		{'GUILS10', 	 3,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_INVENTORY'}, 				--  4	inventory
		{'GUILS10', 	 4,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERRECORD'}, 		--  5	record
		{'GUILS10', 	 5,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAGESPELLS'}, 			--  6	mage book
		{'GUILS10', 	 6,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_PRIESTSPELLS'}, 			--  7	priest scroll
		{'GUILS10', 	 7,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_OPTIONS'}, 				--  8	options
		{'GUILS10', 	 8,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERARBITRATION'}, 	--  9	arbitration
		{'GUILS10', 	15,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_QUICKSAVE'}, 				-- 10	quick save
		{'GUILS10', 	16,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HELP'}, 					-- 11	help
		{'GUILS10', 	 9,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_REST'}, 					-- 12	rest
		{'GUILS10', 	14,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECT'}, 				-- 13	drag
		{'GUILS10', 	11,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HIGHLIGHT'}, 				-- 14	highlight
		{'GUILS10', 	10,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_TOGGLEAI'}, 				-- 15	ai
		{'GUILS10', 	13,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECTALL'}, 				-- 16	select all
		{'',            -1,	0,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 17	player 1
		{'',            -1,	1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 18	player 2
		{'',            -1,	2,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 19	player 3
		{'',            -1,	3,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 20	player 4
		{'',            -1,	4,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 21	player 5
		{'',            -1,	5,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 22	player 6
		{'',            -1,	-1,	1,	0, -1,			'',	'HELPTUTORIAL_CLOCK'}, 					-- 23	clock
		{'ROUNDBUT',	 0,	-1,	0,	1, -1,			'',	'HELPTUTORIAL_QUICKLOOT'}, 				-- 24	quick loot
		{'GUIBTACT',	64,	-1,	0,	0,  0,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 25
		{'GUIBTACT',	66,	-1,	0,	0,  1,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 26
		{'GUIBTACT',	22,	-1,	0,	0,  2,			'',	'HELPTUTORIAL_BARDSONG'}, 				-- 27
		{'GUIBTACT',	12,	-1,	0,	0,  3,			'',	'HELPTUTORIAL_CASTSPELLS'}, 			-- 28
		{'GUIBTACT',	34,	-1,	0,	0,  4,			'',	'HELPTUTORIAL_FINDTRAPS'}, 				-- 29
		{'GUIBTACT',	 4,	-1,	0,	0,  5,			'',	'HELPTUTORIAL_DIALOG'}, 				-- 30
		{'GUIBTACT',	20,	-1,	0,	0,  6,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 31
		{'GUIBTACT',	 0,	-1,	0,	0,  7,			'',	'HELPTUTORIAL_DEFEND'}, 				-- 32
		{'GUIBTACT',	14,	-1,	0,	0,  8,			'',	'HELPTUTORIAL_ATTACK'}, 				-- 33
		{'GUIBTACT',	40,	-1,	0,	0,  9,			'',	'HELPTUTORIAL_SHAPECHANGE'}, 			-- 34
		{'GUIBTACT',	38,	-1,	0,	0, 10,			'',	'HELPTUTORIAL_SPECIALABILITIES'}, 		-- 35
		{'GUIBTACT',	30,	-1,	0,	0, 11,			'',	'HELPTUTORIAL_STEALTH'}, 				-- 36
		{'GUIBTACT',	26,	-1,	0,	0, 12,			'',	'HELPTUTORIAL_THIEVING'}, 				-- 37
		{'GUIBTACT',	 8,	-1,	0,	0, 13,			'',	'HELPTUTORIAL_TURNUNDEAD'}, 			-- 38
		{'GUIBTACT',	18,	-1,	0,	0, 14,			'',	'HELPTUTORIAL_USEITEM'}, 				-- 39
		{'GUIBTACT',	58,	-1,	0,	0, 15,			'',	'HELPTUTORIAL_STOP'}, 					-- 40
		{'GUIBTACT',	20,	-1,	0,	0, 16,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 41
		{'GUIBTACT',	20,	-1,	0,	0, 17,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 42
		{'GUIBTACT',	20,	-1,	0,	0, 18,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 43
		{'GUIBTACT',	20,	-1,	0,	0, 19,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 44
		{'GUIBTACT',	20,	-1,	0,	0, 20,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 45
		{'STONSLOT',	-1,	-1,	0,	0, 21,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 46
		{'STONSLOT',	-1,	-1,	0,	0, 22,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 47
		{'STONSLOT',	-1,	-1,	0,	0, 23,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 48
		{'STONSLOT',	12,	-1,	0,	0, 24,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 49
		{'STONSLOT',	12,	-1,	0,	0, 25,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 50
		{'STONSLOT',	12,	-1,	0,	0, 26,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 51
		{'STONSLOT',	-1,	-1,	0,	0, 27,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 52
		{'STONSLOT',	-1,	-1,	0,	0, 28,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 53
		{'STONSLOT',	-1,	-1,	0,	0, 29,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 54
		{'STONSLOT',	-1,	-1,	0,	0, 30,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 55
		{'STONSLOT',	-1,	-1,	0,	0, 31,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 56
		{'STONSLOT',	-1,	-1,	0,	0, 32,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 57
		{'STONSLOT',	-1,	-1,	0,	0, 33,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 58
		{'STONSLOT',	-1,	-1,	0,	0, 34,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 59
		{'STONSLOT',	-1,	-1,	0,	0, 35,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 60
		{'STONSLOT',	-1,	-1,	0,	0, 36,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 61
		{'STONSLOT',	-1,	-1,	0,	0, 37,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 62
		{'STONSLOT',	-1,	-1,	0,	0, 38,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 63
		{'STONSLOT',	-1,	-1,	0,	0, 39,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 64
		{'STONSLOT',	-1,	-1,	0,	0, 40,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 65
		{'STONSLOT',	-1,	-1,	0,	0, 41,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 66
		{'STONSLOT',	-1,	-1,	0,	0, 42,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 67
		{'STONSLOT',	-1,	-1,	0,	0, 43,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 68
		{'STONSLOT',	-1,	-1,	0,	0, 44,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 69
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 67,			'',	'HELPTUTORIAL_SWITCHTOMAGE'}, 			-- 91
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 69,			'',	'HELPTUTORIAL_SWITCHTOCLERIC'}, 		-- 93
	}
`
menu
{
	name 'HELP'
	align center center
	ignoreEsc
	onOpen
	"
		currentButtonHelp = 11
		Infinity_PushMenu('LEFT_SIDEBAR_HELP')
		Infinity_PushMenu('RIGHT_SIDEBAR_HELP')
		Infinity_PushMenu('WORLD_ACTIONBAR_HELP')
	"
	onClose
	"
		Infinity_PopMenu('LEFT_SIDEBAR_HELP')
		Infinity_PopMenu('RIGHT_SIDEBAR_HELP')
		Infinity_PopMenu('WORLD_ACTIONBAR_HELP')
	"
	label
	{
		area 0 0 912 244
		mosaic GUIERR7
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 34 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] ~= 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 34 24 44 44
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
		scaleToClip
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] ~= -1"
		area 34 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		frame lua "buttonHelp[currentButtonHelp][2]"
	}
	button
	{
		area 34 24 64 90
		enabled "buttonHelp[currentButtonHelp][3] ~= -1"
		portrait lua "buttonHelp[currentButtonHelp][3]"
	}

	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
	}

	label
	{
		enabled "buttonHelp[currentButtonHelp][7] ~= ''"
		area 34 24 52 52
		align center center
		bam lua "buttonHelp[currentButtonHelp][7]"
		frame lua "buttonHelp[currentButtonHelp][7]"
	}

	label
	{
		area 124 16 752 112
		text lua "t(buttonHelp[currentButtonHelp][8])"
		text style	"label"
		text align left top
	}
	button
	{
		area 306 164 300 44
		bam GUIOSTCL
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu('HELP')
		"
	}
}

menu
{
	name 'LEFT_SIDEBAR_HELP'
	align left top
	ignoreEsc
	onOpen 
	"
		Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 80 1536
		mosaic GUIWLSP
	}
	label
	{

		area 0 1536 80 1536
		mosaic GUIWLSP
	}
	button
	{
		area 3 14 73 55
		bam GUILS10
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,16313)"
		glow lua "true"
		action
		"
			currentButtonHelp = 1
		"
	}
	button
	{
		area 3 69 73 55
		bam GUILS10
		sequence 1
		tooltip lua "getTooltipWithHotkey(4,15418)"
		glow lua "true"
		action
		"
			currentButtonHelp = 2
		"
	}
	button
	{
		area 3 124 73 55
		bam GUILS10
		sequence 2
		tooltip lua "getTooltipWithHotkey(3,16308)"
		glow lua "true"
		action
		"
			currentButtonHelp = 3
		"
	}
	button
	{
		area 3 179 73 55
		bam GUILS10
		sequence 3
		tooltip lua "getTooltipWithHotkey(0,16307)"
		glow lua "true"
		action
		"
			currentButtonHelp = 4
		"
	}
	button
	{
		area 3 234 73 55
		bam GUILS10
		sequence 4
		tooltip lua "getTooltipWithHotkey(1,16306)"
		glow lua "true"
		action
		"
			currentButtonHelp = 5
		"
	}
	button
	{
		area 3 289 73 55
		bam GUILS10
		sequence 5
		tooltip lua "getTooltipWithHotkey(5,16309)"
		glow lua "true"
		action
		"
			currentButtonHelp = 6
		"
	}
	button
	{
		area 3 344 73 55
		bam GUILS10
		sequence 6
		tooltip lua "getTooltipWithHotkey(6,14930)"
		glow lua "true"
		action
		"
			currentButtonHelp = 7
		"
	}
	button
	{
		area 3 399 73 55
		bam GUILS10
		sequence 7
		tooltip lua "getTooltipWithHotkey(7,16311)"
		glow lua "true"
		action
		"
			currentButtonHelp = 8
		"
	}
	button
	{
		area 3 454 73 55
		enabled "e:IsMultiplayer()"
		bam GUILS10
		sequence 8
		tooltip lua "getTooltipWithHotkey(8,16312)"
		glow lua "true"
		action
		"
			currentButtonHelp = 9
		"
	}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM_HELP'
	align left bottom
	offset 0 -22
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	ignoreEsc
	button
	{
		area 3 0 73 55
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 15
		tooltip lua "getTooltipWithHotkey(28,74261)"
		glow lua "true"
		action
		"
			currentButtonHelp = 10
		"
	}
	button
	{
		area 3 56 73 55
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 16
		tooltip lua "Infinity_FetchString(--HELPREP)" --"getTooltipWithHotkey(16,74270)"
		glow lua "true"
		action
		"
			currentButtonHelp = 11
		"
	}
	button
	{
		area 3 110 73 55
		bam GUILS10
		sequence 9
		tooltip lua "getTooltipWithHotkey(31,11942)"
		glow lua "true"
		action
		"
			currentButtonHelp = 12
		"
	}
	
	
	--begin clock
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 0 182 73 55
		tooltip lua "worldScreen:GetCurrentTimeString()"
		glow lua "true"
		action
		"
			currentButtonHelp = 23
		"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
}

menu
{
	name 'RIGHT_SIDEBAR_HELP'
	align right top
	ignoreEsc
	onOpen
	"
		Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 80 1536
		mosaic GUIWRSP
	}
	label
	{
		area 0 1536 80 1536
		mosaic GUIWRSP
	}
	button
	{
		area 15 14 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "true"
		action
		"
			currentButtonHelp = 17
		"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
	}
	button
	{
		area 11 106 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "true"
		action
		"
			currentButtonHelp = 18
		"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
	}
	button
	{
		area 11 198 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "true"
		action
		"
			currentButtonHelp = 19
		"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
	}
	button
	{
		area 11 290 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "true"
		action
		"
			currentButtonHelp = 20
		"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
	}
	button
	{
		area 11 382 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "true"
		action
		"
			currentButtonHelp = 21
		"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
	}
	button
	{
		area 11 474 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "true"
		action
		"
			currentButtonHelp = 22
		"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM_HELP'
	align right bottom
	ignoreEsc
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	button
	{
		area 6 0 71 48
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 14
		glow lua "true"
		tooltip lua "Infinity_FetchString(11942)"
		action
		"
			currentButtonHelp = 13
		"
	}
	button
	{
		area 6 49 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "t('HELP_REVEAL')"
		bam GUILS10
		sequence 11
		glow lua "true"
		action
		"
			currentButtonHelp = 14
		"
	}
	button
	{
		area 6 99 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "getPartyAITooltip()"
		bam GUILS10
		sequence 10
		glow lua "true"
		action
		"
			currentButtonHelp = 15
		"
	}
	button
	{
		area 6 149 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(10485)"
		bam GUILS10
		sequence 13
		glow lua "true"
		action
		"
			currentButtonHelp = 16
		"
	}
}
menu
{
	name "WORLD_ACTIONBAR_HELP"
	align center bottom
	onOpen 
	"
	"
	onClose 
	"
	"
	ignoreEsc
	label
	{
		area 0 0 746 57
		mosaic GUWBTP10
	}
	button
	{
		area 21 12 32 32
		bam ROUNDBUT
		glow lua "true"
		scaleToClip
		action
		"
			currentButtonHelp = 24
		"
	}
	button
	{
		area 68 1 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(0)
		"
	}
	button
	{
		area 122 1 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(1)
		"
	}
	button
	{
		area 177 1 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(2)
		"
	}
	button
	{
		area 231 1 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(3)
		"
	}
	button
	{
		area 299 1 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(4)
		"
	}
	button
	{
		area 353 1 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(5)
		"
	}
	button
	{
		area 407 1 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(6)
		"
	}
	button
	{
		area 461 1 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(7)
		"
	}
	
	button
	{
		area 528 1 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(8)
		"
	}
	button
	{
		area 582 1 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(9)
		"
	}
	button
	{
		area 636 1 52 52
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(10)
		"
	}
	button
	{
		area 689 1 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(11)
		"
	}
}

